/**  REXX -- REXX EDIT MACRO TO ENCRYPT/DECRYPT FILES **/
    address ISREDIT
    "MACRO (pswd)"
    if pswd = "" then signal DispDoc
    else do
       brkr = 0
       do i = 1 to length(pswd)
          brkr = brkr + index(xrange('00'x,'ff'x),substr(pswd,i,1))
       end i
       ovly = 'a5o1fBv>uq2Mwyc09eX|(,t8GK.3pQD_L:4ZESg.P{87Jm"s0=',
           || 'GTF+Wb9*q!@AtSbnO0%r;M},4jx&C0s)8>`-Y7k#|Z^a¬vnxe=',
           || 'y¬i`uB/I0w#r{(zH~.C6?TP_l+8AUz/*NhW^>0R/Hf0-:dhD4~',
           || '0Q3oJKV4l;V%$7?XR"NcO}5m1FY)I~i96gEp&d@80Ljk8U72!$'
       pswd = reverse(pswd || reverse(pswd)) || pswd || reverse(pswd)
    end
    "(STATUS) = USER_STATE"
    "(lrecl) = LRECL"
    "(recfm) = RECFM"
    if index(recfm,'F') = 0 then signal dispdoc
    "AUTOSAVE OFF"
    "CAPS OFF"
    pswd    = substr(copies(pswd,length(pswd) % lrecl + 1),1,lrecl)
    ovly    = substr(copies(ovly,length(ovly) % lrecl + 1),1,lrecl)
    "(n) = LINENUM .ZLAST"
    do i = 1 to n
       "(x) = LINE" i
       lbrk = brkr
       brkr = (brkr*(n+13)+i) // lrecl
       if brkr = 0    then brkr = ((i*19)+29+i) // lrecl
       if brkr = lbrk then brkr = (brkr*43*i+i) // lrecl
       ovly = substr(ovly,brkr,length(ovly)-brkr+1),
          || substr(ovly,1,brkr-1)
       x    = bitxor(bitxor(bitxor(x,ovly),pswd,'a5'x),,'5a'x)
       "LINE "i" = (x)"
    end i
    "USER_STATE = (STATUS)"
    exit 0

DispDoc:
   ADDRESS TSO "CLEAR"
   SAY "ENC  -  Encrypt & Decrypt entire file of fixed RECFM   "
   SAY
   SAY "  ENC   password                                       "
   SAY
   SAY "  Passwords can be any length. When first invoked,     "
   SAY "  the password encrypts the file. When re-invoked      "
   SAY "  using the same password, the file is decrypted.      "
   SAY "  The file must be fixed record format.                "
   SAY
   SAY "  Caution should be used to remember the password      "
   SAY "  since it may be difficult to recreate the file       "
   SAY "  without the correct password.                        "
   SAY
   EXIT(1)
