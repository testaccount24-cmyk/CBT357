//-YOUR-USERID-D JOB  (-YOUR-ACCT-INFO-),'-YOUR-NAME-',
//             CLASS=2,MSGCLASS=X,NOTIFY=-YOUR-USERID-
//***
//***  BASIC PL/I TO ALLOCATE A NEW FILE AND WRITE ANOTHER FILE'S
//***  CONTENT TO IT (AND TO SYSOUT)
//***
//CLEANUP    EXEC     PGM=IEFBR14
//DEL01        DD       DSN=-YOUR-USERID-.$$$TEMP.DYNNTEST,
//             DISP=(MOD,DELETE,DELETE),UNIT=SYSDA,SPACE=(TRK,0)
//***
//C          EXEC     PGM=IEL0AA,REGION=4M,
//             PARM=('AG,A,NCT,ESD,F(I),NOFLOW,NIS,NOLIST,M,NMI,NEST',
//             'MAP,OF,OPT(TIME),OP,SZ(MAX),S,STMT,STG,X(F)')
//STEPLIB      DD       DISP=SHR,DSN=-YOUR-PLI-LIB-

 BASE:  PROC(PARM) OPTIONS(MAIN) REORDER;

        DECLARE DYNN   ENTRY(CHAR(44),      /* DSNAME            */
                             CHAR(8),       /* DDNAME            */
                             CHAR(3),       /* RECORD FORMAT     */
                             FIXED BIN(15), /* RECORD SIZE       */
                             FIXED BIN(15), /* BLOCK SIZE        */
                             CHAR(8),       /* DASD UNIT NAME    */
                             FIXED BIN(15), /* DYNALLOC R15 R/C  */
                             FIXED BIN(15), /* INFO  ERROR  CODE */
                             FIXED BIN(15)) /* INFO  REASON CODE */
                       OPTIONS(ASM);

        DECLARE DYNF   ENTRY(CHAR(08) )     /* DDNAME            */
                       OPTIONS(ASM);

        DCL  PARM      CHAR(00100) VARYING;
        DCL  REC       CHAR(05120) STATIC VARYING;
        DCL  OLDREC    CHAR(05120) STATIC VARYING;
        DCL  I_EOF_IND CHAR(01) STATIC INIT('N');
        DCL  REWRITE_REC  CHAR(01) STATIC INIT('N');

        DCL  ADDED#    FIXED BIN(31) STATIC INIT(0);
        DCL  DELETED#  FIXED BIN(31) STATIC INIT(0);
        DCL  DUPS#     FIXED BIN(31) STATIC INIT(0);
        DCL  READ#     FIXED BIN(31) STATIC INIT(0);
        DCL  UPDATED#  FIXED BIN(31) STATIC INIT(0);
        DCL  WRITTEN#  FIXED BIN(31) STATIC INIT(0);
        DCL  DATE      BUILTIN;
        DCL  TIME      BUILTIN;

        DCL  DSNAME    CHAR(44) STATIC
                       INIT(' ');
        DCL  DDNAME    CHAR(08) STATIC INIT('OO');
        DCL  RECFM     CHAR(03) STATIC INIT('FB ');
        DCL  LRECL     FIXED BIN(15) STATIC INIT(00080);
        DCL  BLKSI     FIXED BIN(15) STATIC INIT(00000);
        DCL  UNIT      CHAR(08) STATIC INIT('TEST');
        DCL  DYNN_R15  FIXED BIN(15) STATIC INIT(0);
        DCL  DYNN_RC   FIXED BIN(15) STATIC INIT(0);
        DCL  DYNN_WHY  FIXED BIN(15) STATIC INIT(0);


        DSNAME = PARM;
        CALL DYNN( DSNAME, DDNAME, RECFM, LRECL, BLKSI, UNIT,
           DYNN_R15, DYNN_RC, DYNN_WHY);

        IF DYNN_R15 = 0
           THEN DO;
              OPEN FILE(OO) OUTPUT SEQL RECORD TITLE(DDNAME);
              ON ENDFILE(I) I_EOF_IND = 'Y';

              CALL INITIALIZATION;

              DO WHILE ( I_EOF_IND  = 'N' );
                 CALL READ_WRITE_LOOP;
                 END;

              CALL TERMINATION;
              CALL DYNF(DDNAME);
              CALL PLIRETC(DYNN_R15);

              END;
           ELSE DO;
              PUT EDIT ( '***  DSNAME:                 ', DSNAME   )
                       ( SKIP(2), A, A );
              PUT EDIT ( '***  DDNAME:                 ', DDNAME   )
                       ( SKIP(2), A, A );
              PUT EDIT ( '**************************************' )
                       ( SKIP(1), A );
              PUT EDIT ( '***  DYNALLOC R15 RET VALUE: ', DYNN_R15 )
                       ( SKIP(2), A, P'Z,ZZZ,ZZ9' );
              PUT EDIT ( '***  DYNA ERROR:             ', DYNN_RC  )
                       ( SKIP(2), A, P'Z,ZZZ,ZZ9' );
              PUT EDIT ( '***  DYNA REASON:            ', DYNN_WHY )
                       ( SKIP(2), A, P'Z,ZZZ,ZZ9' );
              PUT EDIT ( '**************************************' )
                       ( SKIP(1), A );
              CALL PLIRETC(DYNN_R15);
              END;


 PROCESS: PROC;
        WRITE FILE(OO) FROM(REC);
        END PROCESS;

 INITIALIZATION: PROC;
        READ FILE(I) INTO(REC);
        END INITIALIZATION;

 READ_WRITE_LOOP: PROC;
        REWRITE_REC = 'Y';
        READ# = READ# + 1;
        CALL PROCESS;
        IF REWRITE_REC = 'Y'
           THEN DO;
              WRITE FILE(O) FROM(REC);
              WRITTEN# = WRITTEN# + 1;
              END;
           ELSE DO;
              DELETED# = DELETED# + 1;
              END;
        READ FILE(I) INTO(REC);
        END READ_WRITE_LOOP;

 TERMINATION: PROC;
        PUT EDIT ( '**************************************' )
                 ( SKIP(1), A );
        PUT EDIT ( '***  ', DATE, ' STATISTICS ', TIME, '  ****' )
                 ( SKIP(1), A, A, A, A, A );
        PUT EDIT ( '**************************************' )
                 ( SKIP(1), A );
        PUT EDIT ( '***  NUMBER RECORDS READ:    ', READ#    )
                 ( SKIP(2), A, P'Z,ZZZ,ZZ9' );
        PUT EDIT ( '***  NUMBER RECORDS WRITTEN: ', WRITTEN# )
                 ( SKIP(2), A, P'Z,ZZZ,ZZ9' );
        PUT EDIT ( '***  NUMBER RECORDS UPDATED: ', UPDATED# )
                 ( SKIP(2), A, P'Z,ZZZ,ZZ9' );
        PUT EDIT ( '***  NUMBER RECORDS ADDED:   ', ADDED#   )
                 ( SKIP(2), A, P'Z,ZZZ,ZZ9' );
        PUT EDIT ( '***  NUMBER RECORDS DELETED: ', DELETED# )
                 ( SKIP(2), A, P'Z,ZZZ,ZZ9' );
        PUT EDIT ( '***  NUMBER RECORDS DUPS:    ', DUPS#    )
                 ( SKIP(2), A, P'Z,ZZZ,ZZ9' );
        IF LENGTH(PARM) > 0
           THEN DO;
              PUT EDIT ( '***  PARM LENGTH/PARM ARE:  ',
                         LENGTH(PARM), '/', PARM )
                       ( SKIP(2), A, P'ZZ9', A, A  );
              END;
        END TERMINATION;

        END BASE;

//SYSUT1       DD       UNIT=VIO,
//             SPACE=(CYL,(05,02),,CONTIG)
//SYSPRINT     DD       SYSOUT=*
//SYSLIN       DD       DSN=&&LOADSET,DISP=(MOD,PASS),
//             UNIT=VIO,SPACE=(CYL,(05,02))
//***
//GO         EXEC     PGM=LOADER,
//             PARM='MAP,PRINT//-YOUR-USERID-.$$$TEMP.DYNNTEST',
//             REGION=4M,COND=(5,LT)
//SYSLIB       DD       DISP=SHR,DSN=-YOUR-SCEELLED-
//             DD       DISP=SHR,DSN=-YOUR-LOADLIB-
//SYSLIN       DD       DSN=&&LOADSET,DISP=(OLD,DELETE,DELETE)
//SYSLOUT      DD       SYSOUT=*
//I            DD       DISP=SHR,DSN=-YOUR-SYSLIB-(JOB)
//O            DD       SYSOUT=*,
//             DCB=(RECFM=F,LRECL=80,BLKSIZE=80)
//SYSPRINT     DD       SYSOUT=*
//SYSUDUMP     DD       SYSOUT=*
//***
