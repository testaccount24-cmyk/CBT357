/**  REXX -- FIND NEXT LINE W/O GIVEN STRING  **/
   RTN = 0
   SAVEMSG = MSG()
   IF SAVEMSG = 'OFF' THEN
      X = MSG("ON")
   X = ADDRESS()
   SUBCOM ISPEXEC
   IF RC <> 0 THEN DO
      SAY 'FN MUST BE RUN UNDER ISPF EDIT!'
      SIGNAL EOJ
   END
   SUBCOM ISREDIT
   IF RC = 0 THEN DO
      UMODE = 'ISREDIT'
      ADDRESS ISPEXEC "CONTROL ERRORS RETURN"
      ADDRESS ISREDIT,
         "ISREDIT MACRO (PARMS)"
      IF RC = 0 THEN DO
         ADDRESS ISREDIT "ISREDIT ("DSN") = DATASET"
      END
   END
   IF DSN = 'DSN' THEN DO
      SAY FN 'EDIT MACRO CAN ONLY BE RUN UNDER ISPF EDIT'
      SIGNAL EOJ
   END

   ERRORMSG = ''
   MESG = ''

   PARMS   = TRANSLATE(PARMS)
   LBL1    = ""
   LBL2    = ""
   SCOL1   = ""
   SCOL2   = ""
   IF SUBSTR(PARMS,1,1) = "'"
      THEN DO
         PARMS = SUBSTR(PARMS,2)
         QLOC  = INDEX(PARMS,"'")
         SSTR  = SUBSTR(PARMS,1,QLOC-1)
         PARMS = SUBSTR(PARMS,QLOC+1)
      END
      ELSE DO
         IF SUBSTR(PARMS,1,1) = '"'
            THEN DO
               PARMS = SUBSTR(PARMS,2)
               QLOC  = INDEX(PARMS,'"')
               SSTR  = SUBSTR(PARMS,1,QLOC-1)
               PARMS = SUBSTR(PARMS,QLOC+1)
            END
            ELSE DO
               SSTR  = WORD(PARMS,1)
               PARMS = SUBSTR(PARMS,LENGTH(SSTR)+1)
            END
      END
   IF SSTR == "" THEN DO
      ZEDSMSG = "NO STRING RC=8"
      ZEDLMSG = "MUST SPECIFY STRING"
      ADDRESS "ISPEXEC" "SETMSG MSG(ISRZ000)"
      SIGNAL DISPDOC
   END
   IF SSTR = '-=PFK=-' THEN DO;
      ADDRESS ISPEXEC "VGET (FNSSTR)  SHARED"
      ADDRESS ISPEXEC "VGET (FNSCOL1) SHARED"
      ADDRESS ISPEXEC "VGET (FNSCOL2) SHARED"
      ADDRESS ISPEXEC "VGET (FNSTART) SHARED"
      ADDRESS ISPEXEC "VGET (FNEND)   SHARED"
      RIND  = 'YES'
      SSTR  = FNSSTR
      SCOL1 = FNSCOL1
      SCOL2 = FNSCOL2
      START = FNSTART
      END   = FNEND
      SIGNAL REPEAT
   END
   ELSE RIND = 'NO'

   DO II = 1 TO 4;
      TOKEN = WORD(PARMS,II)
      IF TOKEN = "" THEN LEAVE
      IF SUBSTR(TOKEN,1,1) = "." THEN DO
         IF LBL1 = "" THEN LBL1 = TOKEN
         ELSE IF LBL2 = "" THEN LBL2 = TOKEN
            ELSE DO
               ZEDSMSG = ".LABEL RC=8"
               ZEDLMSG = "TOO MANY LABELS --" LBL1 LBL2 TOKEN
               ADDRESS "ISPEXEC" "SETMSG MSG(ISRZ000)"
               SIGNAL DISPDOC
            END
      END
      ELSE DO
         IF DATATYPE(TOKEN,'W')  THEN DO
            IF SCOL1 = "" THEN SCOL1 = TOKEN
            ELSE IF SCOL2 = "" THEN SCOL2 = TOKEN
               ELSE DO
                  ZEDSMSG = ".LABEL RC=8"
                  ZEDLMSG = "TOO MANY COLUMNS --" SCOL1 SCOL2 TOKEN
                  ADDRESS "ISPEXEC" "SETMSG MSG(ISRZ000)"
                  SIGNAL DISPDOC
               END
         END
         ELSE DO
            ZEDSMSG = "BAD PARM"
            ZEDLMSG = "UNRECOGNIZED PARM --" TOKEN
            ADDRESS "ISPEXEC" "SETMSG MSG(ISRZ000)"
            SIGNAL DISPDOC
         END
      END
   END II
   IF LBL1 <> ""  &  LBL2 = ""  THEN LBL2 = LBL1

   IF LBL1 <> '' THEN DO
      "ISREDIT L &LBL1"
      IF RC <> 0 THEN DO
         MESG = "LABEL" LBL1 "NOT FOUND"
         SIGNAL ERROR
      END
   END
   IF LBL2 <> '' THEN DO
      "ISREDIT L &LBL2"
      IF RC <> 0 THEN DO
         MESG = "LABEL" LBL2 "NOT FOUND"
         SIGNAL ERROR
      END
   END

   "ISREDIT ("LRECL") = LRECL "
   IF SCOL1 = "" THEN DO
      SCOL1 = 1
      SCOL2 = LRECL
   END
   ELSE DO
      IF SCOL2 = "" THEN SCOL2 = SCOL1 + LENGTH(SSTR) - 1
   END
   IF SCOL1 > LRECL THEN DO
      MESG = "COLUMN" SCOL1 "IS GREATER THAN LRECL OF FILE!"
      SIGNAL ERROR
   END
   IF SCOL2 > LRECL THEN DO
      MESG = "COLUMN" SCOL2 "IS GREATER THAN LRECL OF FILE!"
      SIGNAL ERROR
   END
   IF SCOL1 > SCOL2 THEN DO
      TEMP  = SCOL1
      SCOL1 = SCOL2
      SCOL2 = TEMP
   END

   START = 1
   "ISREDIT (END) = LINENUM .ZLAST"
   IF LBL1 <> '' THEN "ISREDIT (START) = LINENUM &LBL1"
   IF LBL2 <> '' THEN "ISREDIT (END)   = LINENUM &LBL2"

   IF START > END THEN DO
      TEMP  = START
      START = END
      END   = TEMP
   END

   FALTNM  = 'FN'
   FNSSTR  = SSTR
   FNSCOL1 = SCOL1
   FNSCOL2 = SCOL2
   FNSTART = START
   FNEND   = END
   ADDRESS ISPEXEC "VPUT (FALTNM)  SHARED"
   ADDRESS ISPEXEC "VPUT (FNSSTR)  SHARED"
   ADDRESS ISPEXEC "VPUT (FNSCOL1) SHARED"
   ADDRESS ISPEXEC "VPUT (FNSCOL2) SHARED"
   ADDRESS ISPEXEC "VPUT (FNSTART) SHARED"
   ADDRESS ISPEXEC "VPUT (FNEND)   SHARED"

REPEAT:

   "ISREDIT (LINE,COL) = CURSOR"
   SLEN  = LENGTH(SSTR)
   SCOLS = SCOL2 - SCOL1 + 1
   IF  ( LINE > START & LINE < END ),
      |  ( RIND = 'YES' & LINE = START ) THEN START = LINE + 1

   DO PNTR = START TO END
      "ISREDIT (RECORD) = LINE &PNTR"
      IF SCOLS > SLEN,
         THEN DO
            IF INDEX(SUBSTR(RECORD,SCOL1,SCOLS),SSTR) = 0,
               THEN DO
                  STR = 'FOUND!'
                  CALL SETMSG '* NO ' STR '$FOUND LINE W/O STRING'
                  WHERE = PNTR - 1
                  "ISREDIT LOCATE" WHERE
                  "ISREDIT CURSOR = " PNTR SCOL1
                  SIGNAL EOJ
               END
         END
         ELSE DO
            IF SUBSTR(RECORD,SCOL1,SLEN) <> SSTR,
               THEN DO
                  STR = 'FOUND!'
                  CALL SETMSG '* NO ' STR '$FOUND LINE W/O STRING'
                  WHERE = PNTR - 1
                  "ISREDIT LOCATE" WHERE
                  "ISREDIT CURSOR = " PNTR  SCOL1
                  SIGNAL EOJ
               END
         END
   END
   STR = 'NOT FOUND!'
   CALL SETMSG '* NO ' STR '$LINE W/O STRING NOT FOUND'
   "ISREDIT CURSOR = " LINE COL
   SIGNAL EOJ

SETMSG:
   PARSE ARG ZERRHM ZERRALRM ZERRSM'$'ZERRLM
   ADDRESS ISPEXEC 'SETMSG MSG(ISRZ002) COND'
   RETURN

ERROR:
   IF MESG <> '' THEN DO
      RTN = 20
      ERRORMSG = '===>' MESG
   END
   CALL DISPDOC

EOJ:
   X = MSG(SAVEMSG)
   RETURN RTN

DISPDOC:
   ADDRESS TSO "CLEAR"
   SAY "FN - FIND NEXT LINE W/O GIVEN STRING (FIND NOT EQUAL)     "
   SAY
   SAY ERRORMSG
   SAY
   SAY " FORMAT "
   SAY
   SAY "    FN   STRING   ( COL-1 ( COL-2 ) )   ( .A .B )         "
   SAY
   SAY "       THE STRING MUST BE SPECIFIED.  THE COLUMNS AND THE "
   SAY "       RANGES ARE OPTIONAL AND MAY BE INTERMIXED.         "
   SAY
   SAY " EXAMPLE "
   SAY
   SAY "    FN   'CLIST'  11 15                              "
   SAY "       WILL FIND THE NEXT LINE WHERE NO 'CLIST' IS   "
   SAY "       IN COLUMN 11. IF FALT IS ASSIGNED TO A PF KEY,"
   SAY "       YOU CAN REPEAT THE 'FIND NOT.'                "
   SAY
   EXIT(1)
