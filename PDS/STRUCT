/**  REXX -- show the structure of program code. The parm input   **/
/*           is the language, e.g. COB, EZ, PL/I or REXX; it will  */
/*           accept a label range to limit processing; Note '//'   */
/*           denoting JCL and any Easytrieve or COBOL comments are */
/*           always left excluded                                  */
/* --------------------------------------------------------------- */
Address isredit
'MACRO (PARM fmlabel tolabel)'
parm = Translate(parm)

If parm = 'PLI' | parm = 'PL/I' | parm = 'PL1' | parm = 'PL/1' then
  Do
    'EXCLUDE ALL'
    'F '' | ''          ALL'  fmlabel  tolabel
    'F '' & ''          ALL'  fmlabel  tolabel
    'F '' BEGIN ''      ALL'  fmlabel  tolabel
    'F '' BEGIN;''      ALL'  fmlabel  tolabel
    'F '' DO ''         ALL'  fmlabel  tolabel
    'F '' DO;''         ALL'  fmlabel  tolabel
    'F '' ELSE ''       ALL'  fmlabel  tolabel
    'F '' ELSE;''       ALL'  fmlabel  tolabel
    'F '' END ''        ALL'  fmlabel  tolabel
    'F '' END;''        ALL'  fmlabel  tolabel
    'F '' IF ''         ALL'  fmlabel  tolabel
    'F '' OTHERWISE ''  ALL'  fmlabel  tolabel
    'F '' OTHERWISE;''  ALL'  fmlabel  tolabel
    'F '' PROC ''       ALL'  fmlabel  tolabel
    'F '' PROC(''       ALL'  fmlabel  tolabel
    'F '' PROC;''       ALL'  fmlabel  tolabel
    'F '' SELECT ''     ALL'  fmlabel  tolabel
    'F '' THEN ''       ALL'  fmlabel  tolabel
    'F '' THEN;''       ALL'  fmlabel  tolabel
    'F '' UNTIL''       ALL'  fmlabel  tolabel
    'F '' WHEN ''       ALL'  fmlabel  tolabel
    'F '' WHILE''       ALL'  fmlabel  tolabel
    'EXCLUDE ALL ''//'' 1'
    'RESET FIND'
    'LOCATE 0'
    'CURSOR = 1 1'
  End                            /* End of PLI processing         */

Else if parm = 'REX' | parm = 'REXX' then
  Do
    'EXCLUDE ALL'
    'F '' | ''          ALL'  fmlabel  tolabel
    'F '' & ''          ALL'  fmlabel  tolabel
    'F '' BEGIN ''      ALL'  fmlabel  tolabel
    'F '' BEGIN;''      ALL'  fmlabel  tolabel
    'F '' DO ''         ALL'  fmlabel  tolabel
    'F '' DO;''         ALL'  fmlabel  tolabel
    'F '' ELSE ''       ALL'  fmlabel  tolabel
    'F '' ELSE;''       ALL'  fmlabel  tolabel
    'F '' END ''        ALL'  fmlabel  tolabel
    'F '' END;''        ALL'  fmlabel  tolabel
    'F '' IF ''         ALL'  fmlabel  tolabel
    'F '' OTHERWISE ''  ALL'  fmlabel  tolabel
    'F '' OTHERWISE;''  ALL'  fmlabel  tolabel
    'F '' PROC ''       ALL'  fmlabel  tolabel
    'F '' PROC(''       ALL'  fmlabel  tolabel
    'F '' PROC;''       ALL'  fmlabel  tolabel
    'F '' SELECT ''     ALL'  fmlabel  tolabel
    'F '' SIGNAL ''     ALL'  fmlabel  tolabel
    'F '' THEN ''       ALL'  fmlabel  tolabel
    'F '' THEN;''       ALL'  fmlabel  tolabel
    'F '' UNTIL''       ALL'  fmlabel  tolabel
    'F '' WHEN ''       ALL'  fmlabel  tolabel
    'F '' WHILE''       ALL'  fmlabel  tolabel
    'EXCLUDE ALL ''//'' 1'
    'RESET FIND'
    'LOCATE 0'
    'CURSOR = 1 1'
  End                            /* End of REXX processing        */

Else if parm = 'COB' | parm = 'COBOL' Then
  Do
    'EXCLUDE ALL'
    'F '' AND ''         ALL'  fmlabel  tolabel
    'F '' ELSE ''        ALL'  fmlabel  tolabel
    'F '' END-EVALUATE'' ALL'  fmlabel  tolabel
    'F '' END-IF''       ALL'  fmlabel  tolabel
    'F '' END-PERFORM''  ALL'  fmlabel  tolabel
    'F '' EVALUATE ''    ALL'  fmlabel  tolabel
    'F '' GOBACK''       ALL'  fmlabel  tolabel
    'F '' IF ''          ALL'  fmlabel  tolabel
    'F '' OR ''          ALL'  fmlabel  tolabel
    'F '' PERFORM ''     ALL'  fmlabel  tolabel
    'F '' PROCEDURE ''   ALL'  fmlabel  tolabel
    'F '' STOP-RUN''     ALL'  fmlabel  tolabel
    'F '' UNTIL ''       ALL'  fmlabel  tolabel
    'F '' WHEN ''        ALL'  fmlabel  tolabel
    'EXCLUDE ALL ''//'' 1'
    'EXCLUDE ALL ''*'' 7'
    'RESET FIND'
    'LOCATE 0'
    'CURSOR = 1 1'
  End                            /* End of COB processing         */

Else if parm = 'EZ' Then
  Do
    'EXCLUDE ALL'
    'F '' AND ''        ALL'  fmlabel  tolabel
    'F ''AND ''       1 ALL'  fmlabel  tolabel
    'F '' CALL''        ALL'  fmlabel  tolabel
    'F ''CALL''       1 ALL'  fmlabel  tolabel
    'F '' CASE''        ALL'  fmlabel  tolabel
    'F ''CASE''       1 ALL'  fmlabel  tolabel
    'F '' ELSE ''       ALL'  fmlabel  tolabel
    'F ''ELSE ''      1 ALL'  fmlabel  tolabel
    'F '' END-CASE ''   ALL'  fmlabel  tolabel
    'F ''END-CASE ''  1 ALL'  fmlabel  tolabel
    'F '' END-DO''      ALL'  fmlabel  tolabel
    'F ''END-DO''     1 ALL'  fmlabel  tolabel
    'F '' END-IF ''     ALL'  fmlabel  tolabel
    'F ''END-IF ''    1 ALL'  fmlabel  tolabel
    'F '' END-PROC ''   ALL'  fmlabel  tolabel
    'F ''END-PROC ''  1 ALL'  fmlabel  tolabel
    'F '' FILE ''       ALL'  fmlabel  tolabel
    'F ''FILE ''      1 ALL'  fmlabel  tolabel
    'F '' FINISH ''     ALL'  fmlabel  tolabel
    'F ''FINISH ''    1 ALL'  fmlabel  tolabel
    'F '' GOTO ''       ALL'  fmlabel  tolabel
    'F ''GOTO ''      1 ALL'  fmlabel  tolabel
    'F '' IF ''         ALL'  fmlabel  tolabel
    'F ''IF ''        1 ALL'  fmlabel  tolabel
    'F '' INPUT ''      ALL'  fmlabel  tolabel
    'F ''JOB ''       1 ALL'  fmlabel  tolabel
    'F '' JOB ''        ALL'  fmlabel  tolabel
    'F ''OR ''        1 ALL'  fmlabel  tolabel
    'F '' OR ''         ALL'  fmlabel  tolabel
    'F ''PROC ''        ALL'  fmlabel  tolabel
    'F ''REPORT ''    1 ALL'  fmlabel  tolabel
    'F '' REPORT ''     ALL'  fmlabel  tolabel
    'F ''SORT ''      1 ALL'  fmlabel  tolabel
    'F '' SORT ''       ALL'  fmlabel  tolabel
    'F ''START ''       ALL'  fmlabel  tolabel
    'F ''STOP ''      1 ALL'  fmlabel  tolabel
    'F '' STOP ''       ALL'  fmlabel  tolabel
    'F ''USING ''       ALL'  fmlabel  tolabel
    'F ''WHILE ''     1 ALL'  fmlabel  tolabel
    'F '' WHILE ''      ALL'  fmlabel  tolabel
    'EXCLUDE ALL ''//'' 1'
    'EXCLUDE ALL ''*'' 1'
    'RESET FIND'
    'LOCATE 0'
    'CURSOR = 1 1'
  End                            /* End of E/Z processing         */
Else
  Do
   ADDRESS TSO "CLEAR"
   SAY "STRUCT - Show program structure"
   SAY
   SAY " Format "
   SAY "    STRUCT  Language  ( .From-Label  .To-Label ) "
   SAY
   SAY "       Language may be COB, EZ, PLI or REXX.  The label range  "
   SAY "       is optional defaulting to the entire file. JCL, denoted "
   SAY "       by '//' in column 1, and COBOL and Easytrieve comments, "
   SAY "       indicated by an asterisk (*) in column 1, are always    "
   SAY "       left excluded.                                          "
   SAY
   SAY " Example "
   SAY
   SAY "    STRUCT  EZ   .AA .BB"
   SAY
   SAY "       Will show the structure of the edited code only in "
   SAY "       label range .AA thru .BB"
   SAY
  End                            /* End of HELP                   */

Exit 0                           /* Always return a zero          */
/* -------------------------------------------------------------- */
