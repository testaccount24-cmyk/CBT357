/**  REXX -- ALIGN JCL STATEMENTS ON "STANDARD" BOUNDARIES  **/
   "ISREDIT MACRO (PARMS) NOPROCESS"
   IF PARMS = '?' THEN SIGNAL DISPDOC

   ADDRESS ISREDIT
   "PROCESS RANGE C"
   IF RC > 0 THEN DO
      TOP = .ZFIRST
      BOT = .ZLAST
   END
   ELSE DO
      TOP = .ZFRANGE
      BOT = .ZLRANGE
   END

   "(LB,RB) = BOUNDS"
   "BOUNDS  = 1 71"
   "X ALL"
   "F '//'  1 ALL" TOP BOT
   "X '//*' 1 ALL" TOP BOT

   /*   REMOVE EXTRA SPACES   */
   "C ' '      '{' 3 71 ALL NX  " TOP BOT
   "C '{{{{{'  '{' 3 71 ALL NX  " TOP BOT
   "C '{{{{'   '{' 3 71 ALL NX  " TOP BOT
   "C '{{{'    '{' 3 71 ALL NX  " TOP BOT
   "C '{{'     '{' 3 71 ALL NX  " TOP BOT
   "C '{'      ' ' 3 71 ALL NX  " TOP BOT

   /*   JOB, JCLLIB, INCLUDE, PROC, EXEC, DD AND PEND CONVERSION  */
   KEYWD = 'JOB'
   FLDA  = 12
   FLDB  = 22

   DO  WHILE  KEYWD <> ''
      "X ALL"
      KEYWDB = ' 'KEYWD' '
      KEYWDU = '_'KEYWD'_'
      KEYWDX = '{'KEYWD'}'
      "F '"KEYWDB"' 3 25 ALL" TOP BOT
      IF RC <> 4 THEN DO
         "X '//*' 1 ALL" TOP BOT
         "C '"KEYWDB"' '"KEYWDX"' ALL NX" TOP BOT
         "C '{' '{{'         3 25 ALL NX" TOP BOT
         "C '}' '}}'         3 40 ALL NX" TOP BOT
         "C '{' '{{'         3 25 ALL NX" TOP BOT
         "C '}' '}}'         3 40 ALL NX" TOP BOT
         "C '{' '{{'         3 25 ALL NX" TOP BOT
         "C '}' '}}'         3 40 ALL NX" TOP BOT
         "C '{' '{{'         3 25 ALL NX" TOP BOT
         "C '"KEYWDX"' '"KEYWDU"' ALL NX" TOP BOT
         "C ' ' '¬'               ALL NX" TOP BOT
         "C '{' ' '          3 "FLDA" ALL NX" TOP BOT
         "C '{' ''                ALL NX" TOP BOT
         "C '}¬' '}'              ALL NX" TOP BOT
         "C '}' ' '         10 "FLDB" ALL NX" TOP BOT
         "C '}' ''                ALL NX" TOP BOT
         "C '"KEYWDU"' '"KEYWDB"' ALL   " TOP BOT
         "C '¬' ' '               ALL NX" TOP BOT
      END  /** IF RC <> 4 **/

      IF      KEYWD = 'DD'      THEN KEYWD = ''
      ELSE IF KEYWD = 'JCLLIB'  THEN KEYWD = 'DD'
      ELSE IF KEYWD = 'INCLUDE' THEN KEYWD = 'JCLLIB'
      ELSE IF KEYWD = 'PEND'    THEN KEYWD = 'INCLUDE'
      ELSE IF KEYWD = 'EXEC'    THEN DO
           KEYWD = 'PEND'
           FLDA  = 14
           FLDB  = 24
      END
      ELSE IF KEYWD = 'PROC'    THEN KEYWD = 'EXEC'
      ELSE IF KEYWD = 'JOB'     THEN KEYWD = 'PROC'
   END  /** DO WHILE **/

   /*  CONTINUATION CARD CONVERSION  */
   "X ALL"
   "F '// ' 1 ALL" TOP BOT
   "X '//           EXEC'       1 ALL" TOP BOT
   "X '//             INCLUDE'  1 ALL" TOP BOT
   "X '//             JCLLIB'   1 ALL" TOP BOT
   "X '//             DD'       1 ALL" TOP BOT
   "X '//             PEND'     1 ALL" TOP BOT
   "C ' ' '}'  3    ALL NX" TOP BOT
   "C '}' '}}' 3 25 ALL NX" TOP BOT
   "C '}' '}}' 3 25 ALL NX" TOP BOT
   "C '}' '}}' 3 25 ALL NX" TOP BOT
   "C '}' '}}' 3 25 ALL NX" TOP BOT
   "C '}' '}}' 3 25 ALL NX" TOP BOT
   "C ' ' '¬'  3 70 ALL NX" TOP BOT
   "C '}¬' '}' 3 70 ALL NX" TOP BOT
   "C '}' ' '  3 15 ALL NX" TOP BOT
   "C '}' ''        ALL NX" TOP BOT
   "C '¬' ' '       ALL NX" TOP BOT
   "X ALL"
   "BOUNDS =" LB RB
   "LEFT MAX"
   "RESET"
   EXIT(1)

DISPDOC:
   ADDRESS TSO "CLEAR"
   SAY "NEATJCL - FORMAT JCL CONSISTENTLY                         "
   SAY
   SAY " FORMAT "
   SAY
   SAY "    NEATJCL                                               "
   SAY
   SAY "       WILL CAUSE JCL WITHIN THE MARKED (VIA C/CC/C##)    "
   SAY "       RANGE OF LINES TO BE FORMATTED.  IF NO RANGE IS    "
   SAY "       SPECIFIED, THE ENTIRE FILE IS PROCESSED.  THE      "
   SAY "       BLOCK OPERATIONS, LIKE EXEC OR PROC, ARE PLACED IN "
   SAY "       COLUMN 14, OTHER OPERATIONS LIKE DD IN COLUMN 16.  "
   SAY "       OPERANDS ARE SHIFTED TO COLUMN 25 UNLESS THERE'S   "
   SAY "       NO OPERATION PRESENT, WHEN THEY'RE PLACED IN       "
   SAY "       COLUMN 16.                                         "
   SAY "                                                          "
   SAY "       COMMENTS (//*), TERMINATORS (/*) AND DATA ARE LEFT "
   SAY "       AS FOUND.  WHERE LONG NAMES ARE FORMED OF          "
   SAY "       STEP.DDNAME, THE COLUMN FORMATTING IS AS CLOSE AS  "
   SAY "       POSSIBLE TO THE STANDARDS ABOVE.                   "
   SAY
   EXIT(1)

