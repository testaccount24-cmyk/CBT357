/**  REXX -- FILE LIST INSERTION MACRO  **/

   "ISREDIT MACRO (QUAL,OPTION)"
   IF QUAL = '' | QUAL = '?' THEN SIGNAL DISPDOC
   QUAL  = TRANSLATE(QUAL)
   OPTION = TRANSLATE(OPTION)
   IF OPTION = '' | OPTION <> 'STATS' THEN SIGNAL NOSTATS

/* HEADER */
   DSNVAR  = 'DATA.SET.NAME................................'
   ZDLVOL  = 'VOLUME'
   ZDLSIZE = '.TRACKS.'
   "ISREDIT (LINE) = CURSOR"
   IF LINE = 1  THEN DO
       ADDRESS ISPEXEC 'VGET (ZSCREENC,ZSCREENI) SHARED'
       II = INDEX(ZSCREENI,'* Top of Data *')
       IF ( ZSCREENC % 80 )  <=  ( II % 80 )  THEN LINE = 0
   END
   "ISREDIT LINE_AFTER &LINE = < 1 '&DSNVAR &ZDLVOL &ZDLSIZE' >"
   DSNVAR  = '$$ NONE FOUND $$'
   TOTTRKS = 0

/* PRIMING "READ" */
   "ISPEXEC LMDINIT LISTID(DSLIST) LEVEL(&QUAL)"
   "ISPEXEC LMDLIST LISTID(&DSLIST)",
          "DATASET(DSNVAR) OPTION(LIST) STATS(YES)"
   IF ZDLMIGR = 'YES' THEN ZDLVOL = 'MIGRAT'
   DSNVAR  = LEFT(DSNVAR,44)
   DSNVAR  = DSNVAR || '='
   ZDLSIZE = RIGHT(ZDLSIZE,8)
   LINE    = LINE + 1
   "ISREDIT LINE_AFTER &LINE = < 1 '&DSNVAR &ZDLVOL &ZDLSIZE' >"
   IF DATATYPE(ZDLSIZE,N) THEN TOTTRKS = TOTTRKS + ZDLSIZE

/* "READ" LOOP */
   DO WHILE RC = 0
      "ISPEXEC LMDLIST LISTID(&DSLIST)",
               "DATASET(DSNVAR) OPTION(LIST) STATS(YES)"
      IF RC > 0 THEN LEAVE
      IF ZDLMIGR = 'YES' THEN ZDLVOL = 'MIGRAT'
      DSNVAR  = LEFT(DSNVAR,44)
      DSNVAR  = DSNVAR || '='
      ZDLSIZE = RIGHT(ZDLSIZE,8)
      LINE    = LINE + 1
      "ISREDIT LINE_AFTER &LINE = < 1 '&DSNVAR &ZDLVOL &ZDLSIZE' >"
      IF DATATYPE(ZDLSIZE,N) THEN TOTTRKS = TOTTRKS + ZDLSIZE
   END
   LINE = LINE + 1
   "ISREDIT LINE_AFTER &LINE = ",
   "< 1 '..................................TOTAL TRACKS = &TOTTRKS' >"
   "ISPEXEC LMDLIST LISTID(&DSLIST)" "OPTION(FREE)"
   EXIT(0)

NOSTATS:                /* NO STATISTICS JUST NAMES */
   DSNVAR = '$$ NONE FOUND $$'
   IF OPTION = 'DD' THEN LINE_UP = 2
                    ELSE LINE_UP = 1
   "ISREDIT (LINE) = CURSOR"
   IF LINE = 1  THEN DO
       ADDRESS ISPEXEC 'VGET (ZSCREENC,ZSCREENI) SHARED'
       II = INDEX(ZSCREENI,'* Top of Data *')
       IF ( ZSCREENC % 80 )  <=  ( II % 80 )  THEN LINE = 0
   END

/* PRIMING "READ" */
   "ISPEXEC LMDINIT LISTID(DSLIST) LEVEL(&QUAL)"
   "ISPEXEC LMDLIST LISTID(&DSLIST)",
          "DATASET(DSNVAR) OPTION(LIST)"
   IF OPTION = 'DD' THEN DO
      DSNVAR = '//             DSN=' || DSNVAR
      "ISREDIT LINE_AFTER &LINE = < 1 '&DSNVAR' >"
      DDVAR  = '//             DD       DISP=SHR,'
      "ISREDIT LINE_AFTER &LINE = < 1 '&DDVAR' >"
   END
   ELSE "ISREDIT LINE_AFTER &LINE = < 1 '&DSNVAR' >"

/* "READ" LOOP */
   DO WHILE RC = 0
      "ISPEXEC LMDLIST LISTID(&DSLIST)",
               "DATASET(DSNVAR) OPTION(LIST)"
      IF RC > 0 THEN LEAVE
      LINE = LINE + LINE_UP
      IF OPTION = 'DD' THEN DO
         DSNVAR = '//             DSN=' || DSNVAR
         "ISREDIT LINE_AFTER &LINE = < 1 '&DSNVAR' >"
         DDVAR  = '//             DD       DISP=SHR,'
         "ISREDIT LINE_AFTER &LINE = < 1 '&DDVAR' >"
      END
      ELSE "ISREDIT LINE_AFTER &LINE = < 1 '&DSNVAR' >"
   END
   "ISPEXEC LMDLIST LISTID(&DSLIST)" "OPTION(FREE)"
   EXIT(0)

DISPDOC:
   ADDRESS TSO "CLEAR"
   SAY "GETDSNS - PLACE LIST OF DATA SETS AFTER CURSOR            "
   SAY
   SAY " FORMAT "
   SAY
   SAY "    GETDSNS  ( WILDCARD-LIST | ? )  ( STATS | DD )        "
   SAY
   SAY "       DO EQUIVALENT OF DS LIST SCAN FOR DATA SETS AND    "
   SAY "       PLACE LIST AFTER CURSOR POSITION. FOR EXAMPLE:     "
   SAY
   SAY "          GETDSNS  SYS2.CA*.V1R1.**                       "
   SAY
   SAY "       WOULD GATHER THE CATALOGED DATA SETS MATCHING      "
   SAY "       THE WILDCARDS AND PASTE THEM INTO THE EDITED FILE  "
   SAY "       AFTER WHERE THE CURSOR IS POSITIONED. SPECIFYING   "
   SAY "       'STATS' CAUSES VOLSER AND SIZE DATA TO BE ADDED,   "
   SAY "       WHILE 'DD' CAUSES THE DATA SET(S) TO BE WITHIN     "
   SAY "       A //..DD..DISP=SHR,DSN= CARD IMAGE.                "
   SAY
   EXIT(1)

