/************************** REXX   ************************************/
/*                                                                    */
/*   COMMAND NAME: COLSCC (AS RENAMED)                                */
/*   WRITTEN BY:   JIM HAIRE                                          */
/*                                                                    */
/*   FORMAT:                                                          */
/*       TYPE "COLSCC" ON THE COMMAND LINE AND PUT A C, C##, OR       */
/*       CC/CC PAIR ON THE LINES WHERE THE COLUMN NUMBERS SHOULD      */
/*       APPEAR (WORKS IN BOTH EDIT AND VIEW).                        */
/*                                                                    */
/**********************************************************************/
   ADDRESS ISPEXEC
   "ISREDIT MACRO NOPROCESS"
   "ISPEXEC CONTROL ERRORS CANCEL"
   "ISREDIT PROCESS RANGE C"
   IF RC >= 16 THEN CALL 90000_DISPLAY_CMD_ERROR
   "ISREDIT (LINECMD) = RANGE_CMD"

   CALL 00000_CHECK_VALID_LINE_COMMAND
   CALL 10000_GET_DATASET_INFO
   CALL 20000_BUILD_COLUMNS_LINE
   DO WHILE FIRSTLIN <= LASTLIN
       CALL 30000_DISPLAY_COLUMNS_LINE
   END

STOPIT:
   EXIT

00000_CHECK_VALID_LINE_COMMAND:
/*--------------------------------------------------------------------*/
/*    THIS PARAGRAPH WILL VERIFY THAT THE USER ENTERED THE "CC"       */
/*    COMMAND TO INDICATE THE BLOCK OF LINES THEY WANT TO PROCESS.    */
/*--------------------------------------------------------------------*/
   SELECT
     WHEN LINECMD = 'C' THEN
         DO
           /*---------------------------------------------------------*/
           /*-  THIS PARAGRAPH WILL DETERMINE THE RANGE OF LINES     -*/
           /*-  BEING PROCESSED.                                     -*/
           /*---------------------------------------------------------*/
           "ISREDIT (FIRSTLIN) = LINENUM .ZFRANGE"
           "ISREDIT (LASTLIN) = LINENUM .ZLRANGE"
         END
     WHEN LINECMD = ' ' THEN
         DO
           /*---------------------------------------------------------*/
           /*-  IF NO LINE COMMAND PROVIDED, ONLY PUT THE COLUMNS    -*/
           /*-  INDICATOR LINE BEFORE THE FIRST LINE.                -*/
           /*---------------------------------------------------------*/
           "ISREDIT (FIRSTLIN) = LINENUM .ZFIRST"
           "ISREDIT (LASTLIN) = LINENUM .ZFIRST"
         END
     OTHERWISE
         /*-----------------------------------------------------------*/
         /*-  DISPLAY A WINDOW IF THE WRONG LINE COMMAND IS USED.    -*/
         /*-----------------------------------------------------------*/
         CALL 90000_DISPLAY_CMD_ERROR
   END

   RETURN

10000_GET_DATASET_INFO:
/*--------------------------------------------------------------------*/
/*-     THIS PARAGRAPH WILL DETERMINE THE RECORD LENGTH OF THE       -*/
/*-     CURRENT DATASET SO THAT A PROPER COLUMNS INDICATOR LINE      -*/
/*-     CAN BE BUILT.                                                -*/
/*--------------------------------------------------------------------*/
   ADDRESS ISPEXEC
   "ISREDIT (CURRDSET) = DATASET"

   ADDRESS TSO
   X = LISTDSI("'"CURRDSET"'")
   RECORD_LENGTH = SYSLRECL

   RETURN

20000_BUILD_COLUMNS_LINE:
/*--------------------------------------------------------------------*/
/*-     THIS PARAGRAPH WILL BUILD THE COLUMNS INDICATOR LINE         -*/
/*-     BASED ON THE LENGTH OF THE FILE.                             -*/
/*--------------------------------------------------------------------*/
   COLSLINE = ''
   DO I = 1 TO RECORD_LENGTH
       REMAINDER = I // 10
       SELECT
         WHEN REMAINDER = 0 THEN
             DO
               QUOTIENT = I / 10
               IF QUOTIENT < 10 THEN
                   COLS_CHAR = QUOTIENT
               ELSE
                   DO
                     CURRPOS_LENGTH = LENGTH(I)
                     CHAR_WANTED = CURRPOS_LENGTH - 1
                     COLS_CHAR = SUBSTR(I,CHAR_WANTED,1)
                   END
             END
         WHEN REMAINDER = 5 THEN
             COLS_CHAR = '+'
         OTHERWISE
             COLS_CHAR = '-'
       END
       COLSLINE = COLSLINE | | COLS_CHAR
   END

   RETURN

30000_DISPLAY_COLUMNS_LINE:
/*--------------------------------------------------------------------*/
/*-     THIS PARAGRAPH WILL DISPLAY A COLUMNS INDICATOR LINE ABOVE   -*/
/*-     EVERY LINE THAT YOU HAVE INDICATED YOU WANT THE "COLS"       -*/
/*-     COMMAND TO AFFECT.                                           -*/
/*--------------------------------------------------------------------*/
   'ISREDIT LINE_BEFORE &FIRSTLIN = INFOLINE "&COLSLINE"'

   /*--------------------------------*/
   /*  ADVANCES POINTER TO NEXT LINE.*/
   /*--------------------------------*/
   ADVANCE_TO_NEXT_LINE:
   FIRSTLIN = FIRSTLIN + 1

   RETURN

90000_DISPLAY_CMD_ERROR:
/*--------------------------------------------------------------------*/
/*-     THIS PARAGRAPH WILL DISPLAY AN ERROR MESSAGE THAT STATES     -*/
/*-     THAT YOU MUST PLACE A "CC" AROUND THE BLOCK OF LINES YOU     -*/
/*-     WISH THE LAYOUT COMMAND TO AFFECT.                           -*/
/*--------------------------------------------------------------------*/
    ADDRESS ISPEXEC
    ZEDSMSG = 'PF1 FOR ERROR'
    ZEDLMSG = 'YOU MUST PLACE "CC" AROUND THE BLOCK OF LINES'
    ZEDLMSG = ZEDLMSG | | ' YOU WANT THE LAYOUT COMMAND TO AFFECT.'
    'SETMSG MSG(ISRZ001)'

    SIGNAL STOPIT

