         MACRO
&NAME    DYNSPACE &TYPE
.*
.*    THIS IS AN INNER MACRO TO ALLOC/FREE.
.*    IT IS CALLED TO   A) NAME AN AREA FOR THE PARMLIST
.*                      B) LOG THE VARIOUS AMOUNTS NEEDED BY
.*                         EACH, REMEMBERING THE LARGEST.
.*                      C) GENERATING A DS FOR THE LARGEST AMOUNT.
.*    THE FIRST TWO FUNCTIONS ARE INVOKED BY ALLOC/FREE MACROS ONLY,
.*    AND THE THIRD IS USED BY THE PROGRAMMER, EITHER EXPLICITLY,
.*    OR BY BEGINWKA, IF THE LATTER IS USED.
.*
.*     TO INVOKE THE NAMING FUNCTION, ALLOC/FREE GENERATE
.*     NAME DYNSPACE
.*     NOTE. THE NAMING OPERATION ONLY GENERATES A NAME ON THE
.*     FIRST CALL IN THE ASSEMBLY. THE NAME REMAINS THE SAME UNTIL
.*     DYNSPACE IS CALLED TO EXPAND INTO A DS.
.*
.*     THE SECOND FUNCTION IS INVOKED BY THE MACRO CALL
.*          DYNSPACE ADD
.*     (NO NAME FIELD AND ONE OPERAND)
.*     IT USES THE GLOBAL VARIABLES &DTUO AND &DTUPO TO CALCULATE
.*     THE SPACE FOR THIS REQUEST, AND UPDATES &DYNSPQ ONLY IF THE
.*     CURRENT REQUEST IS FOR A GREATER AMOUNT
.*
.*     THE THIRD FUNCTION IS INVOKED BY CALLING DYNSPACE WITH NO
.*     NAME OR OPERAND FIELD.
.*     THIS EXPANDS INTO A DEFINE STORAGE, CLEARS THE DYNSPACE NAME
.*     GLOBAL SETC, AND THE &DYNSPQ GLOBAL SETA.
.*     THUS, THE MACRO IS SERIALLY REUSABLE IN ALL FUNCTIONS.
.*
         GBLA  &DYNSPQ,&DTUO,&DTUPO,&RCPDYN
         GBLC  &DYNP,&DYNSP
         LCLA  &I
         AIF   ('&NAME' NE '').NAME
         AIF   ('&TYPE' EQ '').ALLOC
.*   THE ACCUMULATE FUNCTION IS REQUIRED
&I       SETA  24+&DTUO+&DTUPO         GET AMOUNT FOR THIS REQUEST
         AIF   (&I LE &DYNSPQ).EXIT    IF CURRENT < MAX, EXIT
&DYNSPQ  SETA  &I                      ELSE UPDATE CURRENT MAXIMUM
         MEXIT
.NAME    AIF   ('&DYNSP' NE '').EXIT   IF NAME ALREADY EXISTS, EXIT
&DYNSP   SETC  'DYNSP&RCPDYN'           ELSE GENERATE A NAME
.EXIT    MEXIT
.ALLOC   AIF   ('&DYNSP' EQ '').EXIT
*
**     RESERVE SPACE FOR ALLOC/FREE MACRO WORK AREA
*
&DYNSP   DS    0F,CL&DYNSPQ            RESERVE SPACE
O&DYNSP  DS    0F,CL&DYNSPQ            RESERVE SPACE
O&DYNSP.O OUTADD MF=L
&DYNSP   SETC  ''                      SET MAX QUANTITY TO 0
&DYNSPQ  SETA 0
         MEND
         MACRO
         RCPBTU &KEY,&NUM,&PAR
         LCLA  &L
.*
.*  INNER MACRO FOR ALLOC, TO GENERATE TEXT UNITS ENTERED
.*  IN QUOTES
.*
&L       SETA  K'&PAR-2                GET LENGTH OF TEXT UNIT
         MVI   S99TUKEY+1,&KEY         SET TEXT UNIT KEY
         MVI   S99TUNUM+1,&NUM         SET NUMBER FIELD
         MVI   S99TULNG+1,&L           MOVE IN LENGTH
         MVC   S99TUPAR(&L.),=C&PAR    MOVE IN TEXT UNIT
&L       SETA  &L+6
         AIF   (&L/2 EQ (&L+1)/2).LOK
&L       SETA  &L+1
.LOK     RCPDINC &L
         MEND
         MACRO
         RCPDCBR &LRECL=,&BLKSIZE=,&RECFM=,&DEN=,&DSORG=,&KEYLEN=
.*
.*       INNER MACRO FOR ALLOC/FREE WRITTEN BY J. SAVIT, 12/12/80
.*
         GBLC  &DYNP,&RCPTYPE
         LCLA  &DENVAL            ENCODED DENSITY BYTE
         LCLA  &DSOVAL            ENCODED DSORG
         LCLA  &SCAN              FOR SCANNING RECORD FORMAT CHARS
         LCLA  &FORMAT            ENCODED RECORD FORMAT BYTE
         AIF   ('&KEYLEN' EQ '').TLRECL
         SPACE 1
***********************************************************************
**       KEYLEN TEXT UNIT         (J. SAVIT, 12/80)                  **
***********************************************************************
         RCPNTU DALKYLEN,1,&KEYLEN
.TLRECL  AIF   ('&LRECL' EQ '').TBLKSIZ
         SPACE 1
***********************************************************************
**       LRECL TEXT UNIT          (J. SAVIT, 12/80)                  **
***********************************************************************
         RCPNTU DALLRECL,2,&LRECL
.TBLKSIZ AIF   ('&BLKSIZE' EQ '').TRECFM
         SPACE 1
***********************************************************************
**       BLKSIZE TEXT UNIT        (J. SAVIT, 12/80)                  **
***********************************************************************
         RCPNTU DALBLKSZ,2,&BLKSIZE
.TRECFM  AIF   ('&RECFM' EQ '').TDEN
         SPACE 1
***********************************************************************
**       RECFM TEXT UNIT          (J. SAVIT, 12/80)                  **
***********************************************************************
&SCAN    SETA  K'&RECFM           LENGTH OF RECORD FORMAT SPEC
&FORMAT  SETA  0                  RECORD FORMAT BYTE
.RECFMA  AIF   (&SCAN EQ 0).RECFMX LOOP OVER CHARACTERS IN RECFM
&C       SETC  '&RECFM'(&SCAN,1)  ISOLATE ELEMENT
         AIF   ('&C' NE 'F').RECFMB IF NOT FIXED LENGTH
&FORMAT  SETA  &FORMAT+8*16       SET FIXED LENGTH BIT
         AGO   .RECFMK            LOOP OVER RECFM
.RECFMB  AIF   ('&C' NE 'V').RECFMC IF NOT VARIABLE LENGTH
&FORMAT  SETA  &FORMAT+4*16       SET VARIABLE LENGTH BIT
         AGO   .RECFMK            LOOP OVER RECFM
.RECFMC  AIF   ('&C' NE 'U').RECFMD IF NOT UNDEFINED LENGTH
&FORMAT  SETA  &FORMAT+12*16      SET UNDEFINED BITS
         AGO   .RECFMK            LOOP OVER RECFM
.RECFMD  AIF   ('&C' NE 'B').RECFME IF NOT BLOCKED
&FORMAT  SETA  &FORMAT+16         SET BLOCKED FILE BIT
         AGO   .RECFMK
.RECFME  AIF   ('&C' NE 'S').RECFMF IF NOT STANDARD LENGTH
&FORMAT  SETA  &FORMAT+8          SET STANDARD BIT
         AGO   .RECFMK
.RECFMF  AIF   ('&C' NE 'A').RECFMZ IF NOT ASA CONTROL CHAR
&FORMAT  SETA  &FORMAT+4
         AGO   .RECFMK
.RECFMZ  MNOTE 4,'*** UNRECOGNISED OR UNSUPPORTED RECORD FORMAT &C ***'
.RECFMK  ANOP  ,
&SCAN    SETA  &SCAN-1
         AGO   .RECFMA
.RECFMX  RCPNTU DALRECFM,1,&FORMAT
.TDEN    AIF   ('&DEN' EQ '').TDSORG
         SPACE 1
***********************************************************************
**       TAPE DENSITY TEXT UNIT   (J. SAVIT, 12/12/80)               **
***********************************************************************
         RCPTYPE &DEN             ANALYZE PARAMETER
         AIF   ('&RCPTYPE' EQ 'N').DENB NUMERIC DCB
         MNOTE 4,'*** DENSITY MUST BE 0,1,2,3 OR 4, LIKE IN JCL ***'
         MNOTE *,'*** DEN IGNORED ***'
         AGO   .TDSORG
.DENB    ANOP  ,
&DENVAL  SETA  0                  CLEAR DENSITY BYTE COUNTER
         AIF   ('&DEN' EQ '0').DEN0 DENSITY 0?
         AIF   ('&DEN' EQ '1').DEN1 DENSITY 1?
         AIF   ('&DEN' EQ '2').DEN2 DENSITY 2?
         AIF   ('&DEN' EQ '3').DEN3 DENSITY 3?
         AIF   ('&DEN' EQ '4').DEN3 DENSITY 4?
         MNOTE 4,'*** INVALID DENSITY-PARAMETER IGNORED ***'
         AGO   .TDSORG            TRY NEXT PARAMETER INSTEAD
.DEN4    ANOP  ,
&DENVAL  SETA  16
.DEN3    ANOP  ,
&DENVAL  SETA  &DENVAL+64
.DEN2    ANOP  ,
&DENVAL  SETA  &DENVAL+64
.DEN1    ANOP  ,
&DENVAL  SETA  &DENVAL+64
.DEN0    ANOP  ,
&DENVAL  SETA  &DENVAL+03
         RCPNTU DALDEN,1,&DENVAL
.TDSORG  AIF   ('&DSORG' EQ '').EXIT
         SPACE 1
***********************************************************************
**       DSORG TEXT UNIT          (J. SAVIT, 12/12/80)               **
***********************************************************************
         AIF   ('&DSORG' EQ 'PO').DSORGPO
         AIF   ('&DSORG' EQ 'PS').DSORGPS
         AIF   ('&DSORG' EQ 'DA').DSORGDA
         MNOTE 8,'*** UNSUPPORTED DSORG &DSORG ***'
         MEXIT
.DSORGPO ANOP  ,
&DSOVAL  SETA  2*16*16
         AGO   .DSORGX
.DSORGPS ANOP  ,
&DSOVAL  SETA  4*16*16*16
         AGO   .DSORGX
.DSORGDA ANOP  ,
&DSOVAL  SETA  2*16*16*16
.DSORGX  RCPNTU DALDSORG,2,&DSOVAL
.EXIT    MEND
         MACRO
         RCPDDCB &LRECL=,&BLKSIZE=,&RECFM=,&DEN=,&DSORG=,&KEYLEN=,     C
               &BUFNO=
.*
.*
         GBLC  &DYNP,&RCPTYPE
         LCLA  &DENVAL            ENCODED DENSITY BYTE
         LCLA  &DSOVAL            ENCODED DSORG
         LCLA  &SCAN              FOR SCANNING RECORD FORMAT CHARS
         LCLA  &FORMAT            ENCODED RECORD FORMAT BYTE
         LCLC  &C                 RECFM
         AIF   ('&KEYLEN' EQ '').TLRECL
         SPACE 1
***********************************************************************
**       KEYLEN TEXT UNIT
***********************************************************************
         RCPNTU DALKYLEN,1,&KEYLEN
.TLRECL  AIF   ('&LRECL' EQ '').TBLKSIZ
         SPACE 1
***********************************************************************
**       LRECL TEXT UNIT
***********************************************************************
         RCPNTU DALLRECL,2,&LRECL
.TBLKSIZ AIF   ('&BLKSIZE' EQ '').TBUFNO
         SPACE 1
***********************************************************************
**       BLKSIZE TEXT UNIT
***********************************************************************
         RCPNTU DALBLKSZ,2,&BLKSIZE
.TBUFNO  AIF   ('&BUFNO' EQ '').TRECFM
         SPACE 1
***********************************************************************
**       BUFNO   TEXT UNIT
***********************************************************************
         RCPNTU DALBUFNO,1,&BUFNO
.TRECFM  AIF   ('&RECFM' EQ '').TDEN
         SPACE 1
***********************************************************************
**       RECFM TEXT UNIT
***********************************************************************
         AIF   ('&RECFM'(1,1) NE '(').NOREG
         RCPRECFM RECFM=&RECFM
         AGO   .TDEN
.NOREG   ANOP
&SCAN    SETA  K'&RECFM           LENGTH OF RECORD FORMAT SPEC
&FORMAT  SETA  0                  RECORD FORMAT BYTE
.RECFMA  AIF   (&SCAN EQ 0).RECFMX LOOP OVER CHARACTERS IN RECFM
&C       SETC  '&RECFM'(&SCAN,1)  ISOLATE ELEMENT
         AIF   ('&C' NE 'F').RECFMB IF NOT FIXED LENGTH
&FORMAT  SETA  &FORMAT+8*16       SET FIXED LENGTH BIT
         AGO   .RECFMK            LOOP OVER RECFM
.RECFMB  AIF   ('&C' NE 'V').RECFMC IF NOT VARIABLE LENGTH
&FORMAT  SETA  &FORMAT+4*16       SET VARIABLE LENGTH BIT
         AGO   .RECFMK            LOOP OVER RECFM
.RECFMC  AIF   ('&C' NE 'U').RECFMD IF NOT UNDEFINED LENGTH
&FORMAT  SETA  &FORMAT+12*16      SET UNDEFINED BITS
         AGO   .RECFMK            LOOP OVER RECFM
.RECFMD  AIF   ('&C' NE 'B').RECFME IF NOT BLOCKED
&FORMAT  SETA  &FORMAT+16         SET BLOCKED FILE BIT
         AGO   .RECFMK
.RECFME  AIF   ('&C' NE 'S').RECFMF IF NOT STANDARD LENGTH
&FORMAT  SETA  &FORMAT+8          SET STANDARD BIT
         AGO   .RECFMK
.RECFMF  AIF   ('&C' NE 'A').RECFMM IF NOT ASA CONTROL CHAR
&FORMAT  SETA  &FORMAT+4
         AGO   .RECFMK
.RECFMM  AIF   ('&C' NE 'M').RECFMZ IF NOT MACHINE CODE
&FORMAT  SETA  &FORMAT+2
         AGO   .RECFMK
.RECFMZ  MNOTE 4,'*** UNRECOGNISED OR UNSUPPORTED RECORD FORMAT &C ***'
.RECFMK  ANOP  ,
&SCAN    SETA  &SCAN-1
         AGO   .RECFMA
.RECFMX  RCPNTU DALRECFM,1,&FORMAT
.TDEN    AIF   ('&DEN' EQ '').TDSORG
         SPACE 1
***********************************************************************
**       TAPE DENSITY TEXT UNIT   (J. SAVIT, 12/12/80)               **
***********************************************************************
         RCPTYPE &DEN             ANALYZE PARAMETER
         AIF   ('&RCPTYPE' EQ 'N').DENB NUMERIC DCB
         MNOTE 4,'*** DENSITY MUST BE 0,1,2,3 OR 4, LIKE IN JCL ***'
         MNOTE *,'*** DEN IGNORED ***'
         AGO   .TDSORG
.DENB    ANOP  ,
&DENVAL  SETA  0                  CLEAR DENSITY BYTE COUNTER
         AIF   ('&DEN' EQ '0').DEN0 DENSITY 0?
         AIF   ('&DEN' EQ '1').DEN1 DENSITY 1?
         AIF   ('&DEN' EQ '2').DEN2 DENSITY 2?
         AIF   ('&DEN' EQ '3').DEN3 DENSITY 3?
         AIF   ('&DEN' EQ '4').DEN3 DENSITY 4?
         MNOTE 4,'*** INVALID DENSITY-PARAMETER IGNORED ***'
         AGO   .TDSORG            TRY NEXT PARAMETER INSTEAD
.DEN4    ANOP  ,
&DENVAL  SETA  16
.DEN3    ANOP  ,
&DENVAL  SETA  &DENVAL+64
.DEN2    ANOP  ,
&DENVAL  SETA  &DENVAL+64
.DEN1    ANOP  ,
&DENVAL  SETA  &DENVAL+64
.DEN0    ANOP  ,
&DENVAL  SETA  &DENVAL+03
         RCPNTU DALDEN,1,&DENVAL
.TDSORG  AIF   ('&DSORG' EQ '').EXIT
         SPACE 1
***********************************************************************
**       DSORG TEXT UNIT          (J. SAVIT, 12/12/80)               **
***********************************************************************
         AIF   ('&DSORG' EQ 'PO').DSORGPO
         AIF   ('&DSORG' EQ 'PS').DSORGPS
         AIF   ('&DSORG' EQ 'DA').DSORGDA
         MNOTE 8,'*** UNSUPPORTED DSORG &DSORG ***'
         MEXIT
.DSORGPO ANOP  ,
&DSOVAL  SETA  2*16*16
         AGO   .DSORGX
.DSORGPS ANOP  ,
&DSOVAL  SETA  4*16*16*16
         AGO   .DSORGX
.DSORGDA ANOP  ,
&DSOVAL  SETA  2*16*16*16
.DSORGX  RCPNTU DALDSORG,2,&DSOVAL
.EXIT    MEND
         MACRO
         RCPDDN &DDN
         GBLC  &DYNP
         SPACE 1
***********************************************************************
**   BUILD THE DDNAME TEXT UNIT                                      **
***********************************************************************
         AIF   ('&DDN'(K'&DDN,1) EQ '/').BTU
         AIF   ('&DDN'(1,1) EQ '''').Q
         RCPSR2
         AIF   ('&DDN'(1,1) EQ '(').R
         L     R14,&DDN                LOAD ADDRESS OF DDNAME
         LH    R2,&DDN+4               LOAD LENGTH OF DDNAME
         AGO   .STH
.R       L     R14,0&DDN               LOAD ADDRESS OF DDNAME
         LH    R2,4&DDN                LOAD LENGTH OF DDNAME
.STH     STH   R2,S99TULNG             STORE DDNAME LENGTH
         BCTR  R2,0                    DECREMENT FOR EXECUTE
         EX    R2,&DYNP.MVC            MOVE DDNAME
         MVI   S99TUKEY+1,DALDDNAM     MOVE IN DDNAME KEY
         MVI   S99TUNUM+1,1            SET NUMBER FIELD
         RCPDINC 14
         MEXIT
.Q       RCPBTU DALDDNAM,1,&DDN
         MEXIT
.BTU     RCPTUBFR DALDDNAM,14,&DDN
         MEND
         MACRO
         RCPDDNRT
         SPACE 1
***********************************************************************
**    DDNAME RETURN TEXT UNIT                                        **
***********************************************************************
         MVI   S99TUKEY+1,DALRTDDN     SET RETURN DDNAME KEY
         MVI   S99TUNUM+1,1            SET NUMBER FIELD
         MVI   S99TULNG+1,8            SET LENGTH FIELD
         MVC   S99TUPAR(8),=CL8' '     INITIALIZE FIELD TO BLANKS
         RCPDINC 14
         MEND
         MACRO
         RCPDINC &L1
         GBLA  &DTUO,&DTUPO
         GBLC  &DYNP
         AIF   ('&L1' EQ '').T2
         ST    R15,&DYNP.TUP+&DTUPO    STORE TEXT UNIT ADDRESS
         LA    R15,&L1.(R15)           BUMP TEXT UNIT PTR TO NEXT SLOT
&DTUPO   SETA  &DTUPO+4
&DTUO    SETA  &DTUO+&L1
         MEXIT
.T2      ST    R14,&DYNP.TUP+&DTUPO    STORE TEXT UNIT ADDRESS
&DTUPO   SETA  &DTUPO+4
         MEND
         MACRO
         RCPDISP &DISP
         LCLA  &I
         LCLB  &B(4)
         AIF   ('&DISP(1)' EQ '').TD2
         SPACE
***********************************************************************
**     DATA SET INITIAL STATUS                                       **
***********************************************************************
&B(1)    SETB  ('&DISP(1)' EQ 'SHR')
&B(2)    SETB  ('&DISP(1)' EQ 'NEW')
&B(3)    SETB  ('&DISP(1)' EQ 'MOD')
&B(4)    SETB  ('&DISP(1)' EQ 'OLD')
         AIF   (&B(1) OR &B(2) OR &B(3) OR &B(4)).OK1
         MNOTE 8,'&DISP(1) IS INVALID, DISP=SHR USED'
&B(1)    SETB  1
.OK1     ANOP
&I       SETA  8*&B(1)+4*&B(2)+2*&B(3)+&B(4)
         MVC   S99TUKEY(8),=Y(DALSTATS,1,1,X'0&I.00')
         RCPDINC 8
.TD2     AIF   ('&DISP(2)' EQ '').TD3
         SPACE
***********************************************************************
**    DATA SET NORMAL DISPOSITION                                    **
***********************************************************************
&B(1)    SETB  ('&DISP(2)' EQ 'KEEP')
&B(2)    SETB  ('&DISP(2)' EQ 'DELETE')
&B(3)    SETB  ('&DISP(2)' EQ 'CATLG')
&B(4)    SETB  ('&DISP(2)' EQ 'UNCATLG')
         AIF   (&B(1) OR &B(2) OR &B(3) OR &B(4)).OK2
         MNOTE 8,'&DISP(2) IS INVALID, DISP=(,KEEP) USED'
&B(1)    SETB  1
.OK2     ANOP
&I       SETA  8*&B(1)+4*&B(2)+2*&B(3)+&B(4)
         MVC   S99TUKEY(8),=Y(DALNDISP,1,1,X'0&I.00')
         RCPDINC 8
.TD3     AIF   ('&DISP(3)' EQ '').EXIT
         SPACE
***********************************************************************
**   DATASET CONDITIONAL DISPOSITION                                 **
***********************************************************************
&B(1)    SETB  ('&DISP(3)' EQ 'KEEP')
&B(2)    SETB  ('&DISP(3)' EQ 'DELETE')
&B(3)    SETB  ('&DISP(3)' EQ 'CATLG')
&B(4)    SETB  ('&DISP(3)' EQ 'UNCATLG')
         AIF   (&B(1) OR &B(2) OR &B(3) OR &B(4)).OK3
         MNOTE 8,'&DISP(3) IS INVALID, DISP=(,,KEEP) USED'
&B(1)    SETB  1
.OK3     ANOP
&I       SETA  8*&B(1)+4*&B(2)+2*&B(3)+&B(4)
         MVC   S99TUKEY(8),=Y(DALCDISP,1,1,X'0&I.00')
         RCPDINC 8
.EXIT    MEND
         MACRO
         RCPDSN &DSN,&MEM
         LCLC  &MEMBER
         GBLC  &DYNP
         SPACE
***********************************************************************
**   BUILD THE DSNAME TEXT UNIT                                      **
***********************************************************************
         AIF   ('&DSN'(1,1) EQ '''').Q
         AIF   ('&DSN'(K'&DSN,1) EQ '/').BD
         AIF   ('&DSN'(1,1) EQ '(').REG
         AIF   ('&DSN'  EQ '*').TERM
         RCPSR2
         L     R14,&DSN                LOAD ADDRESS OF DSNAME
         LH    R2,&DSN+4               LOAD LENGTH OF DSNAME
.STH     STH   R2,S99TULNG             STORE DSNAME LENGTH
         BCTR  R2,0                    DECREMENT FOR EXECUTE
         EX    R2,&DYNP.MVC            MOVE DSNAME
         MVI   S99TUKEY+1,DALDSNAM     MOVE IN DSNAME KEY
         MVI   S99TUNUM+1,1            SET NUMBER FIELD
         RCPDINC 50
         AGO   .TMEMBER
.REG     L     R14,0&DSN               LOAD ADDRESS OF DSNAME
         RCPSR2
         LH    R2,4&DSN                LOAD LENGTH OF DSNAME
         AGO   .STH
.TERM    MVI   S99TUKEY+1,DALTERM
         RCPDINC 4
         MEXIT
.BD      RCPTUBFR DALDSNAM,50,&DSN
         AGO   .TMEMBER
.Q       RCPBTU DALDSNAM,1,&DSN
.TMEMBER AIF   ('&MEM' EQ '').EXIT
         SPACE
***********************************************************************
**   BUILD THE MEMBER NAME TEXT UNIT                                 **
***********************************************************************
&MEMBER  SETC  '&MEM'
         AIF   ('&MEM' NE '*').MOK
         AIF   ('&DSN'(1,1) NE '''').MAST
         MNOTE 8,'MEMBER=* INVALID WITH QUOTED DSNAME'
         MEXIT
.MAST    ANOP
&MEMBER  SETC  '8+&DSN'
.MOK     ANOP
         AIF   ('&MEMBER'(K'&MEMBER,1) EQ '/').BM
         RCPSR2
         AIF   ('&MEMBER'(1,1) EQ '(').RM
         LH    R2,4+&MEMBER            LOAD LENGTH OF MEMBER NAME
         LTR   R2,R2                   TEST FOR ZERO
         BZ    *+30                    IF NO MEMBER, SKIP
         L     R14,&MEMBER             LOAD ADDRESS OF MEMBER
         AGO   .STHM
.RM      LH    R2,4&MEMBER             LOAD LENGTH OF MEMBER
         LTR   R2,R2                   AND TEST FOR ZERO
         BZ    *+30                    IF NO MEMBER, SKIP
         L     R14,0&MEMBER            LOAD ADDRESS OF MEMBER
.STHM    STH   R2,S99TULNG             STORE LENGTH OF MEMBER
         BCTR  R2,0                    DECREMENT FOR EXECUTE
         EX    R2,&DYNP.MVC            MOVE IN MEMBER NAME
         MVI   S99TUKEY+1,DALMEMBR     MOVE IN MEMBER KEY
         MVI   S99TUNUM+1,1            SET NUMBER FIELD
         RCPDINC 14
         MEXIT
.BM      RCPTUBFR DALMEMBR,14,&MEMBER
         MEXIT
.QM      RCPBTU DALMEMBR,1,&MEMBER
.EXIT    MEND
         MACRO
         RCPFDDN &DDN
         GBLC &DYNP
         SPACE
***********************************************************************
**        FREE DDNAME TEXT UNIT                                      **
***********************************************************************
         AIF   ('&DDN'(1,1) EQ '''').Q
         AIF   ('&DDN'(K'&DDN,1) EQ '/').B
         RCPSR2
         AIF   ('&DDN'(1,1) EQ '(').R
         L     R14,&DDN                LOAD ADDRESS OF DDNAME
         LH    R2,&DDN+4               LOAD LENGTH OF DDNAME
         AGO   .STH
.R       L     R14,0&DDN               LOAD ADDRESS OF DDNAME
         LH    R2,4&DDN                LOAD LENGTH OF DDNAME
.STH     STH   R2,S99TULNG             STORE DDNAME LENGTH
         BCTR  R2,0                    DECREMENT FOR EXECUTE
         EX    R2,&DYNP.MVC            MOVE DDNAME
         MVI   S99TUKEY+1,DUNDDNAM     MOVE IN DDNAME KEY
         MVI   S99TUNUM+1,1            SET NUMBER FIELD
         RCPDINC 14
         MEXIT
.Q       RCPBTU DUNDDNAM,1,&DDN
         MEXIT
.B       RCPTUBFR DUNDDNAM,14,&DDN
         MEND
         MACRO
         RCPFDSN &DSN,&MEM
         LCLC  &MEMBER
         GBLC  &DYNP
         SPACE
***********************************************************************
**      FREE DATA SET TEXT UNIT                                      **
***********************************************************************
         AIF   ('&DSN'(1,1) EQ '''').Q
         AIF   ('&DSN'(K'&DSN,1) EQ '/').BD
         AIF   ('&DSN'(1,1) EQ '(').REG
         RCPSR2
         L     R14,&DSN                LOAD ADDRESS OF DSNAME
         LH    R2,&DSN+4               LOAD LENGTH OF DSNAME
.STH     STH   R2,S99TULNG             STORE DSNAME LENGTH
         BCTR  R2,0                    DECREMENT FOR EXECUTE
         EX    R2,&DYNP.MVC            MOVE DSNAME
         MVI   S99TUKEY+1,DUNDSNAM     MOVE IN DSNAME KEY
         MVI   S99TUNUM+1,1            SET NUMBER FIELD
         RCPDINC 50
         AGO   .TMEMBER
.REG     L     R14,0&DSN               LOAD ADDRESS OF DSNAME
         RCPSR2
         LH    R2,4&DSN                LOAD LENGTH OF DSNAME
         AGO   .STH
.BD      RCPTUBFR DUNDSNAM,50,&DSN
         AGO   .TMEMBER
.Q       RCPBTU DUNDSNAM,1,&DSN
.TMEMBER AIF   ('&MEM' EQ '').EXIT
         SPACE
***********************************************************************
**       FREE MEMBER NAME TEXT UNIT                                  **
***********************************************************************
&MEMBER  SETC  '&MEM'
         AIF   ('&MEM' NE '*').MOK
         AIF   ('&DSN'(1,1) NE '''').MAST
         MNOTE 8,'MEMBER=* INVALID WITH QUOTED DSNAME'
         MEXIT
.MAST    ANOP
&MEMBER  SETC  '8+&DSN'
.MOK     ANOP
         AIF   ('&MEMBER'(K'&MEMBER,1) EQ '/').BM
         RCPSR2
         AIF   ('&MEMBER'(1,1) EQ '(').RM
         LH    R2,4+&MEMBER            LOAD LENGTH OF MEMBER NAME
         LTR   R2,R2                   TEST FOR ZERO
         BZ    *+30                    IF NO MEMBER, SKIP
         L     R14,&MEMBER             LOAD ADDRESS OF MEMBER
         AGO   .STHM
.RM      LH    R2,4&MEMBER             LOAD LENGTH OF MEMBER
         LTR   R2,R2                   AND TEST FOR ZERO
         BZ    *+30                    IF NO MEMBER, SKIP
         L     R14,0&MEMBER            LOAD ADDRESS OF MEMBER
.STHM    STH   R2,S99TULNG             STORE LENGTH OF MEMBER
         BCTR  R2,0                    DECREMENT FOR EXECUTE
         EX    R2,&DYNP.MVC            MOVE IN MEMBER NAME
         MVI   S99TUKEY+1,DUNMEMBR     MOVE IN MEMBER KEY
         MVI   S99TUNUM+1,1            SET NUMBER FIELD
         RCPDINC 14
         MEXIT
.BM      RCPTUBFR DUNMEMBR,14,&MEMBER
         MEXIT
.QM      RCPBTU DUNMEMBR,1,&MEMBER
.EXIT    MEND
         MACRO
         RCPFREE &FREE
         SPACE
***********************************************************************
**      UNALLOC AT CLOSE TEXT UNIT                                   **
***********************************************************************
         MVI   S99TUKEY+1,DALCLOSE     MOVE IN CLOSE TEXT UNIT KEY
         RCPDINC 4
         MEND
         MACRO
         RCPNTU &KEY,&LEN,&PAR
.*
.*     THIS IS AN ALLOC/FREE MACRO TEXT UNIT PROCESSOR SUBROUTINE
.*     MACRO. IT BUILDS NUMERIC TYPE TEXT UNITS.
.*
         LCLA  &L,&R
         LCLC  &C
         GBLC  &RCPTYPE
.*  ALLOC/FREE INNER MACRO TO SET UP NUMERIC TEXT UNITS
&L       SETA  1                       DEFAULT LENGTH
         AIF   ('&LEN' EQ '').NL
&L       SETA  &LEN
.NL      MVI   S99TUKEY+1,&KEY         SET KEY FIELD
         MVI   S99TUNUM+1,1            SET NUMBER FIELD
         MVI   S99TULNG+1,&L           SET LENGTH FIELD
         AIF   ('&PAR'(1,1) EQ '(').REG
         RCPTYPE &PAR                  ANALYSE PARAMETER
         AIF   ('&RCPTYPE' EQ 'N').NUMERIC
&R       SETA  4-&L
         MVC   S99TUPAR(&L),&R+&PAR    MOVE IN QUANTITY
         RCPDINC 10
         MEXIT
.NUMERIC AIF   (&L EQ 1).NL1
         MVC   S99TUPAR(&L.),=AL&L.(&PAR) MOVE IN QUANTITY
&R       SETA  &L+6
         AIF   (&R/2 EQ (&R+1)/2).LOK ENSURE LENGTH EVEN
&R       SETA  &R+1
.LOK     RCPDINC &R
         MEXIT
.NL1     MVI   S99TUPAR,&PAR           MOVE IN QUANTITY
         RCPDINC 8
         MEXIT
.REG     ANOP
&R       SETA  &L+6
         AIF   (&R/2 EQ (&R+1)/2).LOK ENSURE LENGTH EVEN
&R       SETA  &R+1
&C       SETC  '&PAR'(2,K'&PAR-2)
         AIF   (&L EQ 3).STCM
         AIF   (&L EQ 2).STH
         AIF   (&L EQ 1).STC
         ST    &C,S99TUPAR             STORE TEXT UNIT QUANTITY
         AGO   .RCPDINC
.STH     STH   &C,S99TUPAR             STORE TEXT UNIT QUANTITY
         AGO   .RCPDINC
.STC     STC   &C,S99TUPAR             STORE TEXT UNIT QUANTITY
         AGO   .RCPDINC
.STCM    STCM  &C,7,S99TUPAR           STORE TEXT UNIT QUANTITY
.RCPDINC RCPDINC &R
         MEND
         MACRO
         RCPOINC &L1
         GBLA  &ODTUO,&ODTUPO
         GBLC  &ODYNP
         AIF   ('&L1' EQ '').T2
         ST    R15,&ODYNP.TUP+&ODTUPO    STORE TEXT UNIT ADDRESS
         LA    R15,&L1.(R15)           BUMP TEXT UNIT PTR TO NEXT SLOT
&ODTUPO  SETA  &ODTUPO+4
&ODTUO   SETA  &ODTUO+&L1
         MEXIT
.T2      ST    R14,&ODYNP.TUP+&ODTUPO    STORE TEXT UNIT ADDRESS
&ODTUPO  SETA  &ODTUPO+4
         MEND
         MACRO
         RCPOUTA &OUTPUT=
         GBLC  &DYNSP
         GBLA  &DYNSPQ,&DTUO,&DTUPO
         LCLC  &C
         AIF   ('&OUTPUT' NE '').OUTDD
         AGO   .EXIT
.OUTDD   ANOP
***********************************************************************
**       OUTPUT DDNAME TEXT UNIT                                     **
***********************************************************************
         L     R4,&OUTPUT
         LA    R4,2(R4)
         OUTADD NAME=(R4),TEXTPTR=(R3),MF=(E,O&DYNSP.O)
.EXIT    MEND
         MACRO
         RCPOUTD &OUTPUT
         AIF   ('&OUTPUT' NE '').OUTDD
         MNOTE 8,' **** OUTPUT=&OUTPUT INVALID, MUST BE DDNAME'
         AGO   .EXIT
.OUTDD   ANOP
         LA     R4,=C'&OUTPUT'
         OUTDEL NAME=(R4)
.EXIT    MEND
         MACRO
         RCPRECFM &RECFM=
.*
         LCLC  &R                 REG NOTATION
         LCLA  &SCAN              FOR SCANNING RECORD FORMAT CHARS
         LCLC  &FORMAT            ENCODED RECORD FORMAT BYTE
         LCLC  &A,&A1,&A2,&A3,&A4,&S
         LCLC  &B
&R       SETC  '&RECFM'
&S       SETC  'S0&SYSNDX'
&A       SETC  'A0&SYSNDX'
&A1      SETC  'A1&SYSNDX'
&A2      SETC  'A2&SYSNDX'
&A3      SETC  'A3&SYSNDX'
&A4      SETC  'A4&SYSNDX'
&A5      SETC  'A5&SYSNDX'
&A6      SETC  'A6&SYSNDX'
&B       SETC  'B0&SYSNDX'
&FORMAT  SETC  'RF&SYSNDX'
         B     &S
         DS    0F
&FORMAT  DC    X'00'
&S       DS    0H
         XC    &FORMAT,&FORMAT
         LH    R14,0&R
         LA    R2,2&R
&A       DS    0H
         CLI   0(R2),C'F'
         BNE   &A1                CHECK FOR NEXT ATTR
         OI    &FORMAT,X'80'      SET FIXED LENGTH BIT
         B     &B                 SET FOR NEXT ATTR
&A1      DS    0H
         CLI   0(R2),C'V'
         BNE   &A2
         OI    &FORMAT,X'40'      SET VARIABLE LENGTH BIT
         B     &B                 SET FOR NEXT ATTR
&A2      DS    0H
         CLI   0(R2),C'U'
         BNE   &A3
         OI    &FORMAT,X'C0'      SET UNDEFINED BITS
         B     &B                 SET FOR NEXT ATTR
&A3      DS    0H
         CLI   0(R2),C'B'
         BNE   &A4
         OI    &FORMAT,X'10'      SET BLOCKED   BITS
         B     &B                 SET FOR NEXT ATTR
&A4      DS    0H
         CLI   0(R2),C'A'
         BNE   &A5
         OI    &FORMAT,X'04'      SET ASA       BITS
         B     &B                 SET FOR NEXT ATTR
&A5      DS    0H
         CLI   0(R2),C'M'
         BNE   &A6
         OI    &FORMAT,X'02'      SET MACHINE CODE  BITS
         B     &B                 SET FOR NEXT ATTR
&A6      DS    0H
         CLI   0(R2),C'S'
         BNE   &B
         OI    &FORMAT,X'08'      SET SPANNED       BITS
&B       DS    0H
         LA    R2,1(R2)           INCREMENT TO NEXT ATTR
         BCT   R14,&A             NEXT RECFM ATTR
         SR    R2,R2
         IC    R2,&FORMAT
         RCPNTU DALRECFM,1,(R2)
         MEND
         MACRO
         RCPSPACE &SPACE
         GBLA  &RCPSUB#                NO OF SUBLIST ELEMENTS
         GBLC  &RCPSUBL(100)           SUBLIST ELEMENTS
.**********************************************************************
.*    THIS IS AN ALLOC INNER MACRO TO BUILD THE ALLOCATION SPACE
.*    QUANTITY TEXT UNIT. IT SHOULD BE SPECIFIED AS:-
.*     SPACE=(TYPE,(PRIMARY,SECONDARY,DIRECTORY),RLSE,CONTIG,ROUND)
.*   WHERE TYPE IS 'TRK', 'CYL', 'ABSTR' OR A BLOCK QUANTITY
.*     'CYL' OR 'TRK' SHOULD NOT BE ENTERED IN QUOTES. THE BLOCK
.*     QUANTITY CAN BE A NUMBER, A REGISTER (IN BRACKETS), OR THE
.*     NAME OF A FULLWORD CONTAINING THE BLOCK SIZE.
.**********************************************************************
         AIF   ('&SPACE(1)' EQ '' OR '&SPACE(1)' EQ 'TRK').TRK
         AIF   ('&SPACE(1)' EQ 'CYL').CYL
***********************************************************************
**        SPACE UNIT IN BLOCKS                                       **
***********************************************************************
         RCPNTU DALBLKLN,3,&SPACE(1)  GENERATE BLOCK UNIT TU
         AGO   .TPRIME        GO TEST PRIME QUANTITY
.TRK     ANOP  TRACK SPEC REQ OR DEFAULTED
         SPACE
***********************************************************************
**       SPACE QUANTITY IN TRACKS                                    **
***********************************************************************
         MVI   S99TUKEY+1,DALTRK       SET TEXT UNIT KEY
         RCPDINC 4
         AGO   .TPRIME
.CYL     ANOP  CYL QUANTITY
         SPACE 1
***********************************************************************
**      SPACE UNIT IN CYLINDERS                                      **
***********************************************************************
         MVI   S99TUKEY+1,DALCYL       SET TEXT UNIT KEY
         RCPDINC 4                     STORE TEXT UNIT ADDR
.TPRIME  RCPSUBL &SPACE(2)             BREAK UP SUBLIST
         AIF   (&RCPSUB# EQ 0).TCONTIG
         AIF   ('&RCPSUBL(1)' EQ '').TSP2
         SPACE
***********************************************************************
**       PRIMARY SPACE QUANTITY                                      **
***********************************************************************
         RCPNTU DALPRIME,3,&RCPSUBL(1)
.TSP2    AIF   (&RCPSUB# LT 2).TCONTIG
         AIF   ('&RCPSUBL(2)' EQ '').TSP3
         SPACE
***********************************************************************
**       SECONDARY SPACE QUANTITY                                    **
***********************************************************************
         RCPNTU DALSECND,3,&RCPSUBL(2)
.TSP3    AIF   (&RCPSUB# LT 3).TCONTIG
         AIF   ('&RCPSUBL(3)' EQ '').TCONTIG
         SPACE
***********************************************************************
**       DIRECTORY BLOCK QUANTITY                                    **
***********************************************************************
         RCPNTU DALDIR,3,&RCPSUBL(3)
.TCONTIG AIF  ('&SPACE(3)' EQ 'CONTIG' OR '&SPACE(4)' EQ 'CONTIG').CON
         AIF   ('&SPACE(3)' EQ 'MXIG' OR '&SPACE(4)' EQ 'MXIG').MXIG
         AIF   ('&SPACE(3)' EQ 'ALX' OR '&SPACE(4)' EQ 'ALX').ALX
.TRLSE   AIF   ('&SPACE(3)' EQ 'RLSE' OR '&SPACE(4)' EQ 'RLSE').RLSE
.TROUND  AIF   ('&SPACE(4)'EQ'ROUND'OR'&SPACE(5)'EQ'ROUND').ROUND
         MEXIT
.CON     ANOP
***********************************************************************
**      CONTIGUOUS SPACE TEXT UNIT                                   **
***********************************************************************
         RCPNTU DALSPFRM,1,8
         AGO   .TRLSE
.MXIG    ANOP
***********************************************************************
**       MAXIMUM CONTIGUOUS SPACE TEXT UNIT                          **
***********************************************************************
         RCPNTU DALSPFRM,1,4
         AGO   .TRLSE
.ALX     ANOP
***********************************************************************
**       'ALX' SPACE TEXT UNIT                                       **
***********************************************************************
         RCPNTU DALSPFRM,1,2
         AGO   .TRLSE
.RLSE    ANOP
***********************************************************************
**      RELEASE UNUSED SPACE TEXT UNIT                               **
***********************************************************************
         MVI   S99TUKEY+1,DALRLSE      SET TEXT UNIT KEY
         RCPDINC 4
         AGO   .TROUND
.ROUND   ANOP
***********************************************************************
**      RELEASE UNUSED SPACE TEXT UNIT                               **
***********************************************************************
         MVI   S99TUKEY+1,DALROUND     MOVE IN TEXT UNIT KEY
         RCPDINC 4
         MEND
         MACRO
         RCPSR2 &A
         GBLB  &RCPSR2
         GBLC  &DYNP
         LCLC  &C
.*   TO SAVE REG 2 IN REG 0 FOR ALLOC INNER MACROS FIRST TIME ONLY
.*    IF OPERAND SUPPLIED AND SAVE DONE, RESTORES REG 2 AND
.*    GENERATES MOVE INSTRUCTION FOR EXECUTE
         AIF   ('&A' NE '').UNSAVE
         AIF   (&RCPSR2).EXIT
&RCPSR2  SETB  1
         LR    R0,R2                   SAVE CONTENTS OF REGISTER 2
         MEXIT
.UNSAVE  AIF   (NOT &RCPSR2).EXIT
         B     *+10                    SKIP NEXT INSTRUCTION
&C       SETC  '&DYNP.MVC'
&C       MVC   S99TUPAR(0),0(R14)      EXECUTED MOVE
         LR    R2,R0                   RESTORE CONTENTS OF REGISTER 2
&RCPSR2  SETB  0
.EXIT    MEND
         MACRO
         RCPSTCL &U
         GBLC  &DYNP
***********************************************************************
**       STORCLAS  TEXT UNIT                                         **
***********************************************************************
         RCPVCHAR DALSTCL,14,&U
.EXIT    MEND
         MACRO - BREAK DOWN A SUBLIST
         RCPSUBL &L
         GBLA  &RCPSUB#                NO OF ELEMENTS FOUND
         GBLC  &RCPSUBL(100)           ELEMENTS
         LCLA  &I,&J,&K
&RCPSUB# SETA  0                       INITIALIZE
         AIF   ('&L' EQ '').EXIT       EXIT IF NULL STRING
         AIF   ('&L'(1,1) NE '(').NOSUB
&K       SETA  K'&L-1
&I       SETA  2
&J       SETA  1
.LOOP    ANOP
&J       SETA  &J+1
         AIF   (&J  GT &K).LAST
         AIF   ('&L'(&J,1) NE ',').LOOP
&RCPSUB# SETA &RCPSUB#+1
         AIF   (&J EQ &I).NULL
&RCPSUBL(&RCPSUB#) SETC '&L'(&I,&J-&I)
&I       SETA  &J+1
         AGO   .LOOP
.NULL    ANOP
&RCPSUBL(&RCPSUB#) SETC ''
&I       SETA  &J+1
         AGO   .LOOP
.LAST    AIF   (&J EQ &I).LASTNUL
&RCPSUB# SETA  &RCPSUB#+1
&RCPSUBL(&RCPSUB#) SETC '&L'(&I,&J-&I)
         AGO   .EXIT
.LASTNUL ANOP
&RCPSUB# SETA  &RCPSUB#+1
&RCPSUBL(&RCPSUB#) SETC ''
         AGO   .EXIT
.NOSUB   ANOP
&RCPSUBL(1) SETC '&L'
&RCPSUB# SETA 1
.EXIT    MEND
         MACRO
         RCPSUBSY &SUBSYS=,&SUBDDN=,&BUFND=,&BUFNI=,&HBUFND=,          X
               &HBUFNI=,&DEFERW=,&SHRPOOL=,&BUFSD=,&BUFSI=,&MSG=
         GBLC  &DYNP
         LCLC  &C
         LCLA  &NUM
         AIF   ('&SUBSYS' NE '').SSNAME
         MNOTE 8,'SUBSYS NAME FOR LSR NOT SPECIFIED.'
.SSNAME  ANOP  ,
***********************************************************************
**   SUBSYS NAME  TEXT UNIT                                          **
***********************************************************************
&NUM     SETA  L'&SUBSYS+6
         RCPVCHAR SSNM,&NUM,&SUBSYS
***********************************************************************
**   SUBSYS DDNAME  TEXT UNIT                                        **
***********************************************************************
.TDDN    AIF   ('&SUBDDN' EQ '').TBUFND
&NUM     SETA  L'&SUBDDN+6
         RCPVCHAR SSPRM,&NUM,&SUBDDN
.TBUFND  AIF   ('&BUFND' EQ '').TBUFNI
***********************************************************************
**   SUBSYS BUFND   TEXT UNIT                                        **
***********************************************************************
&NUM     SETA  L'&BUFND+6
         RCPVCHAR SSPRM,&NUM,&BUFND
.TBUFNI  AIF   ('&BUFNI' EQ '').THBUFND
***********************************************************************
**   SUBSYS BUFNI   TEXT UNIT                                        **
***********************************************************************
&NUM     SETA  L'&BUFNI+6
         RCPVCHAR SSPRM,&NUM,&BUFNI
.THBUFND AIF   ('&HBUFND' EQ '').THBUFNI
***********************************************************************
**   SUBSYS HBUFND  TEXT UNIT                                        **
***********************************************************************
&NUM     SETA  L'&HBUFND+6
         RCPVCHAR SSPRM,&NUM,&HBUFND
.THBUFNI AIF   ('&HBUFNI' EQ '').TDEFERW
***********************************************************************
**   SUBSYS HBUFNI  TEXT UNIT                                        **
***********************************************************************
&NUM     SETA  L'&HBUFNI+6
         RCPVCHAR SSPRM,&NUM,&HBUFNI
.TDEFERW AIF   ('&DEFERW' EQ '').TSHRP
***********************************************************************
**   SUBSYS DEFERW  TEXT UNIT                                        **
***********************************************************************
&NUM     SETA  L'&DEFERW+6
         RCPVCHAR SSPRM,&NUM,&DEFERW
.TSHRP   AIF   ('&SHRPOOL' EQ '').TBUFSD
***********************************************************************
**   SUBSYS SHRPOOL TEXT UNIT                                        **
***********************************************************************
&NUM     SETA  L'&SHRPOOL+6
         RCPVCHAR SSPRM,&NUM,&SHRPOOL
.TBUFSD  AIF   ('&BUFSD' EQ '').TBUFSI
***********************************************************************
**   SUBSYS BUFSD   TEXT UNIT                                        **
***********************************************************************
&NUM     SETA  L'&BUFSD+6
         RCPVCHAR SSPRM,&NUM,&BUFSD
.TBUFSI  AIF   ('&BUFSI' EQ '').TMSG
***********************************************************************
**   SUBSYS BUFSI   TEXT UNIT                                        **
***********************************************************************
&NUM     SETA  L'&BUFSI+6
         RCPVCHAR SSPRM,&NUM,&BUFSI
.TMSG    AIF   ('&MSG' EQ '').EXIT
***********************************************************************
**   SUBSYS MSG     TEXT UNIT                                        **
***********************************************************************
         RCPVCHAR SSPRM,7,&MSG
.EXIT    MEND
         MACRO
         RCPSYSOU &CLASS,&COPIES=,&FREE=,&DEST=,&FORMS=,&UCS=,&FCB=,   C
               &CHARS=,&FLASH=,&BURST=,&OUTPUT=
         GBLC  &DYNP
         LCLC  &C
         AIF   ('&CLASS(1)' EQ '').TPGN
&C       SETC  '&CLASS(1)'
         SPACE
***********************************************************************
**       SYSOUT CLASS TEXT UNIT                                      **
***********************************************************************
         AIF   ('&C'(1,1) EQ '''').Q
         AIF   ('&C'(K'&C,1) EQ '/').BS
         AIF   ('&C'(1,1) EQ '(').REG
         L     R14,&C                  LOAD ADDRESS OF SYSOUT CLASS
         MVC   S99TUPAR(1),0(R14)       AND MOVE IT TO TEXT UNIT
         AGO   .SKEY
.REG     MVC   S99TUPAR(1),0&C         MOVE SYSOUT CLASS TO TEXT UNIT
.SKEY    MVI   S99TUKEY+1,DALSYSOU     SET SYSOUT KEY
         MVI   S99TUNUM+1,1            SET NUMBER FIELD
         MVI   S99TULNG+1,1            SET LENGTH FIELD
         RCPDINC 8
         AGO   .TPGN
.BS      RCPTUBFR DALSYSOU,14,&C
         AGO   .TPGN
.Q       RCPBTU DALSYSOU,1,&C
.TPGN    AIF   ('&CLASS(2)' EQ '').TCOP
         SPACE
***********************************************************************
**   SYSOUT PROGRAM NAME TEXT UNIT                                   **
***********************************************************************
&C       SETC  '&CLASS(2)'
         RCPVCHAR DALSPGNM,14,&C
.TCOP    AIF   ('&COPIES' EQ '').TFREE
         SPACE
***********************************************************************
**    SYSOUT COPIES TEXT UNIT                                        **
***********************************************************************
         RCPNTU DALCOPYS,1,&COPIES
.TFREE   AIF   ('&FREE' EQ '').TDEST
         SPACE
***********************************************************************
**     FREE = CLOSE TEXT UNIT                                        **
***********************************************************************
         AIF   ('&FREE' EQ 'CLOSE').CLOSEOK
         MNOTE 4,' **** FREE=&FREE INVALID, FREE=CLOSE USED'
.CLOSEOK MVI   S99TUKEY+1,DALCLOSE   MOVE IN TEXT UNIT KEY
         RCPDINC 4
.TDEST   AIF   ('&DEST' EQ '').TFCB
         SPACE
***********************************************************************
**       SYSOUT DESTINATION TEXT UNIT                                **
***********************************************************************
&NUM     SETA L'&DEST+6
         RCPVCHAR SUSER,&NUM,&DEST
.TFCB    AIF   ('&FCB' EQ '').TCHARS
         SPACE
***********************************************************************
**       SYSOUT FCB IMAGE   TEXT UNIT                                **
***********************************************************************
         RCPVCHAR FCBIM,10,&FCB
.TCHARS  AIF   ('&CHARS' EQ '').TFORMS
         SPACE
***********************************************************************
**       SYSOUT CHAR SET    TEXT UNIT                                **
***********************************************************************
         RCPVCHAR CHARS,10,&CHARS
.TFORMS  AIF   ('&FORMS' EQ '').TUCS
         SPACE
***********************************************************************
**     SYSOUT FORMS NUMBER TEXT UNIT                                 **
***********************************************************************
         RCPVCHAR SFMNO,10,&FORMS
.TUCS    AIF   ('&UCS' EQ '').TFLASH
         SPACE
***********************************************************************
**     SYSOUT UCS NAME TEXT UNIT                                     **
***********************************************************************
         RCPVCHAR UCS,9,&UCS
.TFLASH  AIF   ('&FLASH' EQ '').TBURST
         SPACE
***********************************************************************
**     SYSOUT FLASH FORM TEXT UNIT                                   **
***********************************************************************
&NUM     SETA L'&FLASH+6
         RCPVCHAR FFORM,&NUM,&FLASH
.TBURST  AIF   ('&BURST' EQ '').TOUTP
         SPACE
***********************************************************************
**     SYSOUT BURSTER/STACKER TEXT UNIT                              **
***********************************************************************
&NUM     SETA L'&BURST+6
         RCPVCHAR BURST,&NUM,&BURST
.TOUTP   AIF   ('&OUTPUT' EQ '').EXIT
         SPACE
***********************************************************************
**     SYSOUT OUTPUT STMT TEXT UNIT                                  **
***********************************************************************
&NUM     SETA L'&OUTPUT+6
         RCPVCHAR OUTPT,&NUM,&OUTPUT
.EXIT    MEND
         MACRO
         RCPTYPE &T
         GBLC  &RCPTYPE
         LCLA  &I,&K
&K       SETA  K'&T
&RCPTYPE SETC  ''
         AIF   (&K EQ 0).EXIT
&RCPTYPE SETC  'C'
.LOOP    ANOP
&I       SETA  &I+1
         AIF   ('&T'(&I,1) LT '0' OR '&T'(&I,1) GT '9').EXIT
         AIF   (&I LT &K).LOOP
&RCPTYPE SETC  'N'
.EXIT    MEND
         MACRO
         RCPUNALC
         SPACE 1
***********************************************************************
**     FREE EVEN IF PERMANENTLY ALLOCATED                            **
***********************************************************************
         MVI   S99TUKEY+1,DUNUNALC     SET TEXT UNIT KEY
         RCPDINC  4
         MEND
         MACRO
         RCPUNIT &U,&V,&VC
         GBLC  &DYNP
         AIF   ('&U' EQ '').TVOL
         SPACE 1
***********************************************************************
**       UNIT NAME TEXT UNIT                                         **
***********************************************************************
         RCPVCHAR DALUNIT,14,&U
.TVOL    AIF   ('&V' EQ '').TVC
         SPACE 1
***********************************************************************
**       VOLUME SERIAL TEXT UNIT                                     **
***********************************************************************
         RCPVCHAR DALVLSER,14,&V
.TVC     AIF   ('&VC' EQ '').EXIT
***********************************************************************
**       VOLUME COUNT  TEXT UNIT                                     **
***********************************************************************
         RCPNTU DALVLCNT,1,&VC
.EXIT    MEND
         MACRO
         RCPVCHAR &KEY,&LEN,&C,&N=1
         GBLC  &DYNP
         AIF   ('&C'(K'&C,1) EQ '/').BM
         AIF   ('&C'(1,1) EQ '''').QM
         RCPSR2
         AIF   ('&C'(1,1) EQ '(').RM
         LH    R2,&C+4                 LOAD LENGTH OF TEXT UNIT
         LTR   R2,R2                   TEST FOR ZERO
         BZ    *+30                    IF NO TEXT UNIT, SKIP
         L     R14,&C                  LOAD ADDRESS OF TEXT UNIT
         AGO   .STHM
.RM      LH    R2,4&C                  LOAD LENGTH OF TEXT UNIT
         LTR   R2,R2                   AND TEST FOR ZERO
         BZ    *+30                    IF NO TEXT UNIT, SKIP
         L     R14,0&C                 LOAD ADDRESS OF TEXT UNIT
.STHM    STH   R2,S99TULNG             STORE LENGTH OF TEXT UNIT
         BCTR  R2,0                    DECREMENT FOR EXECUTE
         EX    R2,&DYNP.MVC            MOVE IN TEXT UNIT
         AIF   ('&KEY'(4,4) EQ 'STCL').STCL
         MVI   S99TUKEY+1,&KEY         MOVE IN TEXT UNIT KEY
         AGO   .UN
.STCL    MVC   S99TUKEY,DALSTCL        MOVE IN STORCLAS TEXT UNIT KEY
.UN      AIF   ('&N' EQ '1' OR '&N' EQ '').N1
         LA    R14,&N                  LOAD TEXT UNIT NUMBER
         STH   R14,S99TUNUM             AND STORE IT IN TEXT UNIT
         AGO   .ENDN
.N1      MVI   S99TUNUM+1,1            SET NUMBER FIELD
.ENDN    RCPDINC &LEN
         MEXIT
.BM      RCPTUBFR &KEY,&LEN,&C
         MEXIT
.QM      RCPBTU &KEY,&N,&C
         MEND
