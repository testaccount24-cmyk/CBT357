//-YOUR-USERID-L JOB  (-YOUR-ACCT-INFO-),'-YOUR-NAME-',
//             CLASS=2,MSGCLASS=X,NOTIFY=-YOUR-USERID-
//***
//***  ASSEMBLY & LINK JCL FOR SPECIFIC LOAD MODULE WHERE USED
//***
//A          EXEC     PGM=ASMA90,REGION=4M,
//             PARM='NODECK,OBJECT'
//SYSLIB       DD       DISP=SHR,DSN=SYS1.MACLIB
//             DD       DISP=SHR,DSN=-YOUR-SYSLIB-
         TITLE 'LMODWU  -  FIND WHERE LOAD MODULE USED'
LMODWU   START 0
         REGS

***********************************************************************
*        LMODWU                                                       *
*                                                                     *
*        SEARCH A PDS FOR A GIVEN  CSECT NAME                         *
*        ( MUST CONTAIN MEMBERS CREATED BY THE LINKAGE EDITOR )       *
*                                                                     *
*        FOR EACH MEMBER, THE FOLLOWING IS LISTED  -                  *
*              1. THE MEMBER NAME                                     *
*              2. THE TTRC         ( FROM THE DIRECTORY )             *
*              3. THE LINK-EDIT ATTRIBUTES                            *
*              4. THE LENGTH OF THE MODULE                            *
*              5. THE ENTRY POINT                                     *
*                                                                     *
***********************************************************************

LMODWU   CSECT
         SAVE  (14,12),T,*
         LR    R10,R15             ESTABLISH A BASE REGISTER
         USING LMODWU,R10          -
         LA    R12,SAVE            CHAIN SAVE AREAS
         ST    R12,8(,R13)         -
         ST    R13,4(,R12)         -
         LR    R13,R12             -

*
*        SAVE THE CSECT NAME TO LOOK FOR, GIVEN IN THE PARM FIELD  -
*
         L     R2,0(,R1)           GET POINTER TO THE PARMS
         LA    R2,0(,R2)           -
         LH    R3,0(,R2)           GET LENGTH OF THE PARMS
         LTR   R3,R3               WERE ANY PARMS PASSED  ?
         BNP   ERROR1              NO - BRANCH
         C     R3,=F'8'            WAS THE PARM LENGTH GT 8
         BH    ERROR1              YES - BRANCH

         BCTR  R3,0                PREPARE TO EXECUTE
         EX    R3,MOVEPARM         MOVE THE PARM TO AN AREA

*        READ THE JFCB TO PREPARE FOR AN OBTAIN  -
         RDJFCB (MEMDCB)           READ THE JFCB FOR THE PDS
         LTR   R15,R15             DID IT DO THAT O.K.  ?
         BNZ   ERROR2              NO - BRANCH

*        ISSUE  AN OBTAIN, TO SEE IF THE PDS EXISTS -
         OBTAIN CAMLIST            ISSUE OBTAIN
         LTR   R15,R15             DID THE OBTAIN OBTAIN ANYTHING ?
         BNZ   ERROR3              NO - BRANCH

*        TEST TO ENSURE THAT THIS DATASET IS A PDS  -
         TM    AREA+38,X'02'       TEST FOR 'DSORG=PO' IN FORMAT 1
         BZ    ERROR4              NOT A PDS - BRANCH

*        OPEN THE DCBS FOR THE DIRECTORY AND THE MEMBERS  -
         OPEN  (DIRDCB,,MEMDCB)    ISSUE THE OPEN
         TM    DIRDCB+48,X'10'     DID THE DIRECTORY DCB OPEN O.K. ?
         BZ    ERROR5              NO - BRANCH
         TM    MEMDCB+48,X'10'     DID THE MEMBER DCB OPEN O.K. ?
         BZ    ERROR5              NO - BRANCH

*        GET A BUFFER TO READ THE MEMBERS INTO  -
         MVC   BUFFLEN,MEMDCB+62   GET BLOCKSIZE FROM THE DCB
         L     R0,BUFFER           LENGTH + SP I.D. FOR GETMAIN
         GETMAIN R,LV=(0)          ISSUE GETMAIN
         ST    R1,DECB+12          PUT POINTER TO BUFFER IN DECB

*        INITIALISE  THE BUFFER TO ZEROS (EASIER DEBUGGING)  -
         LH    R2,BUFFLEN          GET LENGTH OF THE BUFFER
ZEROLOOP MVI   0(R1),0             MOVE A ZERO INTO THE BUFFER
         LA    R1,1(,R1)           INDEX THROUGH THE BUFFER
         BCT   R2,ZEROLOOP         ZERO THE ENTIRE BUFFER

         OPEN  (SYSPRINT,(OUTPUT)) OPEN SYSPRINT
         TM    SYSPRINT+48,X'10'   DID IT OPEN O.K.  ?
         BZ    ERROR6              NO - BRANCH

*        GET TIME AND DATE  -
         TIME  DEC
         ST    R0,TIME             SAVE TIME
         ST    R1,DATE             SAVE DATE
         MVO   TIM,TIME(2)         SAVE TIME

*        GET JOBNAME OF JOB, AND SAVE IT  -
         EXTRACT FIELD1,FIELDS=(TIOT)
         L     R1,FIELD1           POINT TO TIOT
         MVC   JNAME,0(R1)         SAVE JOBNAME
         B     GET                 GET THE FIRST PDS DIRECTORY BLOCK

*
*        GET NEXT MEMBER IN THE PDS  -
*
*        FIRST  LOOK FOR A MEMBER IN THE CURRENT DIRECTORY BLOCK -
EODAD    EQU   *
LOOPDS1  L     R2,DIRPOINT         POINT TO THE NEXT MEMBER
         IC    R3,11(,R2)          GET LENGTH OF USER DATA
         N     R3,MASK2            LENGTH IS 5 BITS
         SLL   R3,1                X 2 BECAUSE LENGTH IN HALF-WORDS
         LA    R3,12(,R3)          ADD LENGTH OF MEMBER NAME + TTRC
         AR    R3,R2               POINT TO NEXT MEMBER

*        FIND  THE END OF THE DIRECTORY BLOCK  -
         LA    R4,DIRBLOCK         POINT TO THE CURRENT DIRECTORY BLK
         LH    R5,0(,R4)           GET LENGTH USED
         AR    R5,R4               POINT TO END OF THE BLOCK
         CR    R5,R3               HAS THIS BLOCK BEEN EXAUSTED ?
         BH    GOTNEXT             NO - BRANCH

*        READ THE NEXT DIRECTORY BLOCK  -
GET      GET   DIRDCB,DIRBLOCK     READ THE NEXT DIRECTORY BLOCK
         LA    R3,DIRBLOCK+2       POINT TO THE FIRST MEMBER IN BLOCK
GOTNEXT  ST    R3,DIRPOINT         SAVE POINTER TO NEXT MEMBER

         XC    CMREC,CMREC         # OF RECORDS READ FOR THIS MEMBER

*        TEST TO SEE IF WE HAVE GOT TO THE END OF THE PDS  -
         CLC   0(8,R3),LASTMEM     LOOK FOR A MEMBER NAME OF FOXES
         BE    ENDPDS              GOT TO END - BRANCH

*        COUNT # OF MEMBERS READ  -
         L     R1,CPMEM            GET # OF MEMBERS READ
         AL    R1,=F'1'            INCREMENT BY 1
         ST    R1,CPMEM            AND SAVE IT

         L     R2,DIRPOINT         POINT TO DIRECTORY ENTRY
         MVC   TTRZ(3),8(R2)       SAVE TTR OF MEMBER
         POINT MEMDCB,TTRZ         POINT TO THIS MEMBER

*
*        TEST FOR ALIAS  -
*
         L     R2,DIRPOINT         POINT TO DIRECTORY ENTRY
         TM    11(R2),X'80'        IS THIS ENTRY AN ALIAS  ?
*        PROCESS ALIAS THE SAME AS OTHER MEMBERS  -

*        DETERMINE IF THE MEMBER WAS CREATED BY THE LINKAGE-EDITOR  -
         IC    R3,11(,R2)          GET LENGTH OF USER DATA
         N     R3,MASK2            -
         C     R3,=F'11'           MUST BE AT LEAST 11 HALF-WORDS
         BL    LOOPDS1             IT WAS NOT LINKED - BRANCH

***********************************************************************
*                                                                     *
*        READ THE MEMBER SEQUENTIALLY, EXTRACTING INFORMATION         *
*        AND WRITING IT TO THE OUTPUT FILE.                           *
*                                                                     *
***********************************************************************

GETLOOP  EQU   *
         L     R6,DECB+12          POINT TO INPUT AREA
         READ  DECB,SF,MF=E        READ THE NEXT RECORD
         CHECK DECB

*        INCREMENT COUNT OF # OF RECORDS READ BY 1  -
         L     R1,CMREC            COUNTS # OF INPUT RECORDS
         AL    R1,=F'1'            INCREMENT
         ST    R1,CMREC            AND SAVE

         L     R1,CPREC            COUNTS # OF READS FOR THIS PDS
         AL    R1,=F'1'            BUMP BY 1
         ST    R1,CPREC            AND SAVE

*
*        LOOK AT RECORD TYPE, PROCES ACORDINGLY  -
*
         TM    0(R6),1             DOES THIS RECORD PRECEED A TEXT REC.
         BO    EODAD               YES - BRANCH ( WE ARE DONE )

         CLI   0(R6),X'20'         IS IT A CESD RECORD  ?
         BE    CESD                YES - BRANCH
         B     GETLOOP             GO GET ANOTHER RECORD

***********************************************************************
*                                                                     *
*        PROCESS THE CESD TYPE INPUT RECORD                           *
*                                                                     *
***********************************************************************

CESD     LA    R3,8(,R6)           POINT TO 1ST ESD ENTRY
         LH    R4,6(,R6)           GET LENGTH OF ESD DATA
         AR    R4,R3               POINT TO END OF RECORD
         LH    R5,4(,R6)           GET # OF FIRST ESD ENTRY IN THIS REC

LOOPESD  CR    R4,R3               HAVE WE GOT TO THE END YET ?
         BNH   GETLOOP             YES - GO GET ANOTHER INPUT RECORD

         L     R1,CCSCAN           # OF CSECTS SCANNED
         AL    R1,=F'1'            INCREMENT BY 1
         ST    R1,CCSCAN           AND SAVE IT

         CLC   0(8,R3),CNAME       IS THIS CSECT THE NAME WE WANT ?
         BE    BUILD               YES - BRANCH

LOOPESD2 LA    R3,16(,R3)          BUMP TO NEXT ESD ENTRY
         AL    R5,=F'1'            KEEP COUNT OF ESD ENTRY #
         B     LOOPESD             AND LOOK AT IT


*
*        BUILD A PRINT LINE  -
*
BUILD    LA    R7,LINE             R7 WILL POINT TO DETAIL PRINT LINE
         USING DETLINE,R7          -
         MVI   LINE,C' '           BLANK THE PRINT LINE
         MVC   LINE+1(131),LINE    -

         L     R2,DIRPOINT         POINT TO DIRECTORY ENTRY

*        COUNT # OF HITS FOUND  -
         L     R1,CCHIT            GET # OF HITS
         AL    R1,=F'1'            INCREMEMNT BY 1
         ST    R1,CCHIT            AND SAVE IT

*        ID/LENGTH  -
         UNPK  DWA(7),13(4,R3)
         MVC   DETIDL,DWA
         TR    DETIDL,TABLE1

*        SEGMENT #  -
         UNPK  DWA(3),12(2,R3)
         MVC   DETSEGN,DWA
         TR    DETSEGN,TABLE1

*        ADDRESS  -
         UNPK  DWA(7),9(4,R3)
         MVC   DETADDR,DWA
         TR    DETADDR,TABLE1

*        TYPE  IN HEX  -
         UNPK  DWA(3),8(2,R3)
         MVC   DETTYPC,DWA
         TR    DETTYPC,TABLE1
*        TYPE   -
         LA    R15,TYPTABL         POINT TO TABLE END
         LA    R1,TYPTAB           POINT TO TABLE
         MVC   DWA(1),8(R3)        GET SEGMENT TYPE
         NI    DWA,X'0F'
NEXTYPE  CLC   0(1,R1),DWA         TRY TO MATCH WITH A TABLE ENTRY
         BE    GOTYPE              GOT A HIT - BRANCH
         CR    R1,R15              IS THIS THE  END OF THE TABLE  ?
         BNL   NOTYPE              YES - BRANCH
         LA    R1,3(,R1)           INDEX ALONG THE TABLE
         B     NEXTYPE             AND TRY NEXT ENTRY
GOTYPE   MVC   DETTYP,1(R1)        MOVE TYPE TO PRINT LINE

*        NAME   -
NOTYPE   MVC   DETNAME,0(R3)       MODULE NAME

*        MODULE ENTRY POINT  -
         UNPK  DWA(7),27(4,R2)
         MVC   DETEP,DWA
         TR    DETEP,TABLE1

*        MODULE SIZE  -
         UNPK  DWA(7),22(4,R2)
         MVC   DETSIZE,DWA
         TR    DETSIZE,TABLE1

*        MODULE ATTRIBUTES  -
         UNPK  DWA(5),20(3,R2)
         MVC   DETATTR,DWA
         TR    DETATTR,TABLE1

*        TTRC  -
         UNPK  DWA(9),8(5,R2)
         MVC   DETTTRC,DWA
         TR    DETTTRC,TABLE1

*        MEMBER NAME  -
         MVC   DETMEM,0(R2)

         BAL   R9,WRITE            PUT A LINE TO THE PRINTER
         B     LOOPESD2

***********************************************************************
*                                                                     *
*        WRITE A LINE TO THE PRINTER                                  *
*                                                                     *
***********************************************************************

WRITE    ST    R9,SAVE9
*
*        TEST  FOR HEADINGS REQUIRED  -
*
         CP    LINENO,MAXLINE      IS IT BOTTOM OF PAGE YET  ?
         BL    NOHEAD              NO - BRANCH

         ZAP   LINENO,=P'0'        RESET LINE COUNTER
         AP    PAGE,=P'1'          INCREMENT PAGE #

         MVI   HCNTL,X'8B'         SKIP TO 01
         MVI   HLINE,C' '          BLANK HEADING PRINT LINE
         MVC   HLINE+1(131),HLINE  -
         LA    R2,HCNTL            POINT TO PRINT LINE
         BAL   R9,PRINT            GO PRINT

         MVC   HLINE+110(6),PAT02
         ED    HLINE+110(6),PAGE   EDIT PAGE #
         MVC   HLINE+106(4),=C'PAGE'
         MVC   HLINE+90(7),PAT01
         ED    HLINE+90(7),DATE+1  EDIT DATE  YY.DDD
         MVC   HLINE+83(5),=C'DATE:'
         MVC   HLINE+30(L'HEAD01),HEAD01
         MVC   HLINE(8),JNAME
         MVI   HCNTL,X'09'
         LA    R2,HCNTL
         BAL   R9,PRINT

         MVC   HLINE+90(7),PAT03
         ED    HLINE+90(7),TIM     EDIT TIME  HH.MM
         MVC   HLINE+83(5),=C'TIME:'
         MVI   HCNTL,X'19'
         LA    R2,HCNTL
         BAL   R9,PRINT

*        PUT DSNAME = AND VOLSER =  -
         LA    R1,JFCB             POINT TO JFCB
         MVC   HLINE+25(44),0(R1)  MOVE DSNAME
         MVC   HLINE+16(8),=C'DSNAME ='
         MVI   HCNTL,X'09'
         LA    R2,HCNTL
         BAL   R9,PRINT

         LA    R1,JFCB             POINT TO JFCB
         MVC   HLINE+25(6),118(R1) MOVE VOLSER
         MVC   HLINE+16(8),=C'VOLUME ='
         MVI   HCNTL,X'19'
         LA    R2,HCNTL
         BAL   R9,PRINT

         MVC   HLINE(132),HEAD02
         MVI   HCNTL,X'09'
         LA    R2,HCNTL
         BAL   R9,PRINT

         MVC   HLINE(132),HEAD03
         MVI   HCNTL,X'09'
         LA    R2,HCNTL
         BAL   R9,PRINT

         MVC   HLINE(132),HEAD04
         MVI   HCNTL,X'19'
         LA    R2,HCNTL
         BAL   R9,PRINT

NOHEAD   AP    LINENO,=P'1'        INCREMENT LINE #
         LA    R2,CNTL             POINT TO DETAIL PRINT LINE
         MVI   CNTL,X'09'
         BAL   R9,PRINT            PRINT IT
         L     R9,SAVE9            RESTORE RETUTN REGISTER
         BR    R9                  RETURN

***********************************************************************
*                                                                     *
*        END OF THE PDS - CLEAN UP AND EOJ                            *
*                                                                     *
***********************************************************************

*        CLOSE DCBS FOR THE PDS  -
ENDPDS   CLOSE (MEMDCB,,DIRDCB)    ISSUE CLOSE

*        FREE THE BUFFER USED TO READ THE MEMBERS  -
         L     R0,BUFFER           GET LENGTH AND S.P.
         L     R1,DECB+12          POINT TO BUFFER
         FREEMAIN R,LV=(0),A=(1)   ISSUE FREEMAIN

*        FREE  THE BUFFERS USED BY THE DIRECTORY DCB  -
         FREEPOOL DIRDCB

*        ISSUE THE END MSG. INDICATING # OF HITS  -
         MVC   ENDMSGN,CNAME       PUT NAME OF SEARCH FIELD IN MSG
         L     R1,CCHIT            GET # OF HITS
         CVD   R1,DWA              CVD
         ED    ENDMSGP,DWA+4
         MVI   CNTL,X'1B'          SPACE 3 IMMED.
         BAL   R9,WRITE
         MVI   CNTL,X'1B'          SPACE 3 IMMED.
         BAL   R9,WRITE
         MVI   CNTL,X'09'
         MVC   LINE+10(ENDMSGL),ENDMSG
         BAL   R9,WRITE

         LA    R1,ENDMSGW
         WTO   MF=(E,(1))

         CLOSE (SYSPRINT)          CLOSE SYSPRINT

         FREEPOOL SYSPRINT         FREE THE SYSPRINT BUFFER POOL

GOBACK   L     R13,4(,R13)
         RETURN (14,12),T,RC=(15)

***********************************************************************
*                                                                     *
*        PRINT A LINE SUBROUTINE                                      *
*                                                                     *
***********************************************************************
PRINT    LR    R0,R2               POINT TO LINE TO PRINT
         PUT   SYSPRINT            PUT IT
         MVI   0(R2),C' '          BLANK OUT THE LINE WE PRINTED
         MVC   1(131,R2),0(R2)     -
         BR    R9                  RETURN

***********************************************************************
*                                                                     *
*        ERROR CONDITIONS                                             *
*                                                                     *
***********************************************************************

*        NO PARMS PASSED ON ENTRY  -
ERROR1   EQU   *
         LA    R1,WTOMSG1          POINT TO ERROR MESSAGE
         WTO   MF=(E,(1))          WTO
         ABEND 1,DUMP              ERROR IN SORT

*        ERROR IN RDJFCB  -
ERROR2   LA    R2,MEMDCB           POINT TO DCB
         ABEND 2,DUMP

*        ERROR IN OBTAIN  -
ERROR3   LA    R2,CAMLIST          POINT TO CAMLST
         ABEND 3,DUMP

*        DATASET TO BE PROCESSED IS NOT A PDS  -
ERROR4   LA    R2,AREA             POINT TO FORMAT 1 LABEL
         ABEND 4,DUMP

*        CANNOT OPEN PDS DCBS  -
ERROR5   LA    R2,DIRDCB           POINT TO DIRECTORY DCB
         LA    R3,MEMDCB           POINT TO MEMBER DCB
         ABEND 5,DUMP

*        UNABLE TO OPEN SYSPRINT  -
ERROR6   LA    R2,SYSPRINT         POINT TO SYSPRINT DCB
         ABEND 6,DUMP              ABEND

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                                                                     *
*        C O N S T A N T S                                            *
*                                                                     *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
SAVE     DC    9D'0'               REGISTER SAVE AREA
WORK     DC    D'0'                WORK AREA
SAVE9    DC    F'0'                REG. 9 SAVE AREA

*        ERROR MESSAGE ISSUED IF NO PARMS PASSED ON INPUT  -
WTOMSG1  DC    0F'0',Y(WTOMSG1E-*),H'0'
         DC    C'INPUT PARMS MISSING OR INVALID'
WTOMSG1E EQU   *

MASK     DC    F'63'               MASK FOR 6 BITS   2 - 7
MASK2    DC    F'31'               MASK FOR 5 BITS   3 - 7
         DC    0H'0'
MOVEPARM MVC   CNAME(0),2(R2)      MOVE PARM FIELD
CNAME    DC    CL8' '              NAME PASSED IN PARM FIELD

*        FIELDS RELATING TO THE PDS  -
TTRZ     DC    F'0'                TTR OF MEMBER I AM PROCESSING
         READ  DECB,SF,MEMDCB,0,'S',MF=L                       DECB

BUFFER   DC    0F'0',X'0200'       LENGTH + SP FOR GETMAIN
BUFFLEN  DC    H'0'                -

CPMEM    DC    F'0'                # OF MEMBERS PROCESSED FROM PDS
CMREC    DC    F'0'                # OF RECORDS READ FOR THIS MEMBER
CPREC    DC    F'0'                # OF READS FOR THE PDS
CCSCAN   DC    F'0'                # OF CSECTS SCANNED
CCHIT    DC    F'0'                # OF CSECTS WE GOT A HIT ON

DIRPOINT DC    F'0'                POINTER TO CURRENT MEMBER
LASTMEM  DC    8X'FF'              NAME OF LAST MEMBER IN PDS
EXLST    DC    0F'0',X'87',AL3(JFCB)

*        TABLE  USED TO CONVERT ESD TYPE TO PRINTABLE TYPE FORMAT  -
TYPTAB   DC    X'00',C'SD'         SECTION DEFINITION
         DC    X'02',C'ER'         EXTERNAL REFERENCE
         DC    X'03',C'LR'         LABEL REFERENCE
         DC    X'04',C'PC'         PRIVATE CODE
         DC    X'05',C'CM'         COMMON AREA
         DC    X'06',C'PR'         PSEUDO REGISTER
         DC    X'07',C'NL'         NULL
TYPTABL  DC    X'0A',C'WX'         WEAK EXTERNAL REFERENCE

*        TRANSLATE TABLE TO CONVERT TO PRINTABLE HEX  -
         ORG   *-240
TABLE1   EQU   *
         ORG
         DC    C'0123456789ABCDEF'

         DC    0D'0'
         LTORG
         DC    0D'0'

CAMLIST  CAMLST SEARCH,JFCB,JFCB+118,AREA

JFCB     DC    0D'0',176X'00'      AREA TO READ THE JFCB INTO
AREA     DC    0D'0',148X'00'      AREA TO CONTAIN THE FORMAT 1 LABEL
DIRBLOCK DC    32D'0'              CURRENT DIRECTORY BLOCK

SAVE35   DC    9D'0'               REGISTER SAVE AREA
JNAME    DC    CL8' '              JOBNAME OF THIS JOB
FIELD1   DC    F'0'                POINTER TO TIOT

*        DETAIL PRINT LINE  _
CNTL     DC    X'09'
LINE     DC    132C' '

*        HEADING PRINT LINE  -
HCNTL    DC    X'8B'
HLINE    DC    132C' '

PAT01    DC    XL7'4021204B202020'
PAT02    DC    XL6'402020202120'
PAT03    DC    XL7'402120204B2020'

PAGE     DC    PL3'0'              CURRENT PAGE #
LINENO   DC    PL2'99'             CURRENT LINE #
MAXLINE  DC    PL2'45'             MAX # OF LINES/PAGE

DWA      DC    2D'0'               WORK SPACE
TIME     DC    F'0'
TIM      DC    X'00000F'
DATE     DC    F'0'

HEAD01   DC    C'C S E C T   S E A R C H   R E P O R T'
HEAD02   DC    CL132'         MODULE            LINK           ENTRY   X
                      CSECT                      SG   I.D./'
HEAD03   DC    CL132'          NAME      TTRC   ATTR  LENGTH   POINT   X
                      FOUND     TYPE      ADDR.  NO  LENGTH'
HEAD04   DC    CL132'       --------  --------  ----  ------  ------   X
                    --------  -------    ------  --  ------'

*        END MESSAGE - SHOWS NUMBER OF HITS  -
ENDMSGW  DC    0F'0',Y(ENDMSGE-ENDMSGW),H'0'
ENDMSG   DC    C'TOTAL OCCURANCES OF CSECT NAME '
ENDMSGN  DC    CL8'XXXXXXXX'
         DC    C' IS'
ENDMSGP  DC    X'4020202020202120'
ENDMSGE  EQU   *
ENDMSGL  EQU   ENDMSGE-ENDMSG

*        D C B S  -
         PRINT NOGEN
*        MEMBER DCB - USED TO READ EACH MEMBER OF THE PDS  -
MEMDCB   DCB   DDNAME=SYSUT1,DSORG=PO,MACRF=R,RECFM=U,EXLST=EXLST,     X
               EODAD=EODAD

*        DIRECTORY DCB - USED TO READ THE DIRECTORY OF THE PDS  -
DIRDCB   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GM,RECFM=F,BLKSIZE=256,    X
               LRECL=256,BUFNO=100

SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBM,  X
               BLKSIZE=1995
         PRINT GEN
         DC    4D'0'
***********************************************************************
*                                                                     *
*        FORMAT OF THE DETAIL PRINT LINE                              *
*                                                                     *
***********************************************************************
DETLINE  DSECT
         DS    CL7 -
DETMEM   DS    CL8 -               MEMBER NAME
         DS    CL2 -
DETTTRC  DS    XL8 -               TTRC
         DS    CL2 -
DETATTR  DS    XL4 -               MODULE ATTRIBUTES
         DS    CL2 -
DETSIZE  DS    CL6 -               MODULE SIZE
         DS    CL2 -
DETEP    DS    CL6 -               MODULE ENTRY POINT
         DS    CL8 -
DETNAME  DS    CL8 -               NAME OF SEARCH CSECT
         DS    CL2 -
DETTYP   DS    CL2 -               TYPE OF ESD ENTRY
         DS    CL3 -
DETTYPC  DS    XL2 -               TYPE OF ESD ENTRY - IN HEX
         DS    CL4 -
DETADDR  DS    XL6 -               ADDRESS FIELD
         DS    CL2 -
DETSEGN  DS    XL2 -               SEGMENT #
         DS    CL2 -
DETIDL   DS    XL6 -               ID/LENGTH FIELD
         END   LMODWU
//SYSUT1       DD       UNIT=VIO,
//             SPACE=(CYL,(05,02),,CONTIG)
//SYSPRINT     DD       SYSOUT=*,
//             DCB=(RECFM=FM,LRECL=121,BLKSIZE=121)
//SYSLIN       DD       DSN=&&LOADSET,DISP=(MOD,PASS),
//             UNIT=VIO,SPACE=(2960,(111,12)),DCB=BLKSIZE=2960
//***
//L          EXEC     PGM=IEWL,COND=(5,LT),
//             PARM='XREF,LIST,LET,DCBS',
//             REGION=4M
//SYSUT1       DD       UNIT=VIO,
//             SPACE=(CYL,(05,02),,CONTIG)
//SYSPRINT     DD       SYSOUT=*
//SYSLMOD      DD       DSN=-YOUR-LOADLIB-,
//             DISP=SHR
//SYSLIN       DD       DSN=&&LOADSET,DISP=(OLD,DELETE,DELETE)
//             DD       *
  SETSSI   99110500
  ENTRY    LMODWU
  NAME     LMODWU(R)
//***
