/**  REXX -- BLANK SPECIFIC COLUMN LOCATIONS  **/
   RTN = 0
   SAVEMSG = MSG()
   IF SAVEMSG = 'OFF' THEN
      X = MSG("ON")
   X = ADDRESS()
   SUBCOM ISPEXEC
   SUBCOM ISREDIT
   IF RC = 0 THEN DO
      UMODE = 'ISREDIT'
      ADDRESS ISPEXEC "CONTROL ERRORS RETURN"
      ADDRESS ISREDIT,
             "ISREDIT MACRO (TOLEFT,TORIGHT,LBL1,LBL2) NOPROCESS"
      IF RC = 0 THEN DO
         ADDRESS ISREDIT "ISREDIT ("DSN") = DATASET"
      END
   END

   IF SUBSTR(TOLEFT,1,1) = '.' & SUBSTR(TORIGHT,1,1) = '.',
         & LBL1 = '' & LBL2 = '' THEN DO
      LBL1    = TOLEFT
      LBL2    = TORIGHT
      TOLEFT  = 73
      TORIGHT = 80
   END
   IF TOLEFT = '' & TORIGHT = '' THEN DO
      TOLEFT  = 73
      TORIGHT = 80
   END
   ERRORMSG   = ''
   MESG       = ''
   IF ¬DATATYPE(TOLEFT,'W')  |  TOLEFT = 0  THEN DO
      MESG = "'"TOLEFT"' VALUE OF TO-LEFT-COL IS INVALID!"
      SIGNAL ERROR
   END
   IF ¬DATATYPE(TORIGHT,'W') |  TORIGHT = 0 THEN DO
      MESG = "'"TORIGHT"' VALUE OF TO-RIGHT-COL IS INVALID!"
      SIGNAL ERROR
   END
   "ISREDIT ("LRECL") = LRECL "
   IF TOLEFT > TORIGHT THEN DO
      MESG = "TO-LEFT COLUMN IS GREATER THAN TO-RIGHT!"
      SIGNAL ERROR
   END
   IF TOLEFT > LRECL THEN DO
      MESG = "TO-LEFT COLUMN IS GREATER THAN RECORD SIZE ("LRECL")"
      SIGNAL ERROR
   END
   IF TORIGHT > LRECL THEN DO
      MESG = "TO-RIGHT COLUMN IS GREATER THAN RECORD SIZE ("LRECL")"
      SIGNAL ERROR
   END
   LEN = TORIGHT - TOLEFT + 1

   ADDRESS ISREDIT
   "PROCESS RANGE C"
   IF RC = 0 THEN DO
      "(START) = LINENUM .ZFRANGE"
      "(END)   = LINENUM .ZLRANGE"
   END
   ELSE DO
      IF LBL1 <> '' THEN DO
         "ISREDIT L &LBL1"
          IF RC <> 0 THEN DO
             MESG = "LABEL" LBL1 "NOT FOUND"
             SIGNAL ERROR
          END
      END
      IF LBL2 <> '' THEN DO
         "ISREDIT L &LBL2"
          IF RC <> 0 THEN DO
             MESG = "LABEL" LBL2 "NOT FOUND"
             SIGNAL ERROR
          END
      END
      "ISREDIT (END) = LINENUM .ZLAST"
      IF LBL1 <> '' THEN "ISREDIT (START) = LINENUM &LBL1"
         ELSE START = 1
      IF LBL2 <> '' THEN "ISREDIT (END) = LINENUM &LBL2"
         ELSE LBL2 = LBL1
      IF START > END THEN DO
         FLIP  = START
         START = END
         END   = FLIP
      END
   END

   "ISREDIT ("SAVLINE","SAVCOL") = CURSOR   "
   ADDRESS ISPEXEC
   IF SAVLINE = 1 THEN DO
       'VGET (ZSCREENC,ZSCREENI) SHARED'
       II = INDEX(ZSCREENI,'* Top of Data *')
       IF ( ZSCREENC % 80 )  <=  ( II % 80 )  THEN SAVLINE = 0
   END
   "ISREDIT ("ANUM") = AUTONUM              "

   CONTENTX = COPIES(' ',LEN)

   DO PNTR =  START  TO  END  BY 1
      "ISREDIT (RECORD) = LINE &PNTR"
      RECORD = SUBSTR(RECORD,1,TOLEFT-1),
         || CONTENTX,
         || SUBSTR(RECORD,TORIGHT+1)
      "ISREDIT LINE &PNTR = &STR(RECORD)"
   END

   IF LBL1 = '' THEN "ISREDIT LOCATE 1"
      ELSE "ISREDIT LOCATE" LBL1
  "ISREDIT AUTONUM = "ANUM
  SIGNAL EOJ

ERROR:
   IF MESG <> '' THEN DO
      RTN = 20
      ERRORMSG = '===>' MESG
   END
   SIGNAL DISPDOC

EOJ:
   IF SAVLINE <> 0 THEN SAVLINE = SAVLINE + 1
   IF SAVCOL = 0 THEN SAVCOL = 1
   "ISREDIT CURSOR =" SAVLINE SAVCOL
   X = MSG(SAVEMSG)
   EXIT

DISPDOC:
   ADDRESS TSO "CLEAR"
   SAY " BC - BLANK SPECIFIED COLUMNS                          "
   SAY
   SAY ERRORMSG
   SAY
   SAY " FORMAT "
   SAY "    BC        LEFT-COL  RIGHT-COL  ( .A .B )           "
   SAY
   SAY "       COLUMNS ARE OPTIONAL.  THEY DEFAULT TO 73       "
   SAY "       THROUGH 80. LABEL RANGE IS ALSO OPTIONAL AND    "
   SAY "       MAY BE SET VIA C/CC/C#.                         "
   SAY
   SAY " EXAMPLES "
   SAY "    BC        17 19                                    "
   SAY "       WILL OVERLAY '   ' ONTO COLUMNS 17-19           "
   SAY
   SAY "    BC        73 80  .A .B                             "
   SAY "       WILL PLACE '        ' IN COLUMNS 73 THRU 80     "
   SAY "       IN LABEL RANGE .A THRU .B                       "
   SAY
   RETURN
