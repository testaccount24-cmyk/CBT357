/**  REXX -- ADD A TAG TO CHANGED LINES; INVOKES SUPERC  **/
   SHOW_CONTEXT = 1 /* NUM OF LINES ABOVE AND BELOW CHANGES TO SHOW  */
                    /* SET_SHOW CONTEXT TO 0 TO SHOW ALL LINES AFTER */
                    /* TAGGING IS COMPLETE                           */
   SAVEMSG=MSG()
   X=MSG("OFF")
   X=ADDRESS()
   ADDRESS 'ISPEXEC'
   NUMERIC DIGITS 12
   'ISREDIT MACRO (PARMS)'
   SIGNAL ON NOVALUE
   SIGNAL ON SYNTAX

   PARSE SOURCE SYSTEM . CMDNAME .
   'ISREDIT (DW) = DATA_WIDTH'
   SUPERCRC = -1
   IF PARMS = '' THEN SIGNAL DISPDOC
   IF SUBSTR(PARMS,1,1) = "'" | SUBSTR(PARMS,1,1) = '"'
      THEN DO
         QUOTE = SUBSTR(PARMS,1,1)
         DO II = 2 TO LENGTH(PARMS) WHILE (SUBSTR(PARMS,II,1) <> QUOTE)
         END
         IF II > LENGTH(PARMS)
            THEN TAG = PARMS
            ELSE DO
               TAG     = SUBSTR(PARMS,2,II)
               PARMS   = STRIP(SUBSTR(PARMS,II+1),'B')
               FLAGCOL = PARMS
            END
      END
      ELSE DO
         TAG     = WORD(PARMS,1)
         FLAGCOL = WORD(PARMS,2)
      END
   IF FLAGCOL = '' THEN FLAGCOL = 65
   IF 0=DATATYPE(FLAGCOL,'N') THEN DO
      CALL SETMSG '* YES INVALID START COL $ SYNTAX: ',
         CMDNAME' FLAG <COL>'
      EXIT 12
   END
   IF  FLAGCOL + LENGTH(TAG) - 1 > DW THEN  DO
      CALL SETMSG '* YES INVALID START COL $ SYNTAX: ',
         CMDNAME' FLAG <COL>'
      EXIT 12
   END

   CALL ALLOCATES                 /* ALLOCATE DATASETS FOR SUPERC */
   'SELECT PGM(ISRSUPC) PARM(LINECMP,NOLISTL,UPDLDEL)' /* COMPARE */
   SUPERCRC = RC
   IF  SUPERCRC < 5  &  SUPERCRC > 0  THEN CALL ADD_TAGS
   ELSE IF SUPERCRC > 4
      THEN CALL SETMSG 'ISR313B0 YES SUPERC ERROR$'||,
                       'SUPERC ENDED WITH A RETURN CODE OF ' SUPERCRC
   IF SUPERCRC = 1 THEN
      CALL SETMSG '* NO FLAGREVS OK $FLAG' TAG 'IN COL' FLAGCOL
   ELSE IF SUPERCRC = 0 THEN
      CALL SETMSG '* NO NO FLAGS ADDED$NO CHANGED LINES FOUND'

   ADDRESS TSO 'FREE F(NEWDD,OLDDD,DELDD)'
   ADDRESS TSO 'DEL $$$TEMP.NEWDD'
   EXIT 0

SYNTAX:
   SAY 'SYNTAX SIGNALLED AT LINE 'SIGL' OF 'CMDNAME
   SAY SOURCELINE(SIGL)
   SAY COPIES('-',78)
   EXIT 4

NOVALUE:
    SAY 'NOVALUE SIGNALLED AT LINE 'SIGL
    SAY SOURCELINE(SIGL)
    PARSE SOURCE . . CMDNAME .
    EXIT 12

ADD_TAGS:
   'ISREDIT RESET'
   'ISREDIT RESET LAB'
   'ISREDIT X ALL .ZF .ZL'
   DO QUEUED(); PULL; END
   COMPLINE.  = ''
   COMPLINE.0 = 0
   ADDRESS TSO 'EXECIO * DISKR DELDD (FINIS STEM COMPLINE.'

   ADDRESS ISREDIT
   DO A = 1 TO COMPLINE.0  /* UNEXCLUDE CHANGED LINES */
      LINE = COMPLINE.A
      PARSE VAR LINE 1 TYPE 3 . 13 REC_COUNT 19 . 29 LINE_NUMBER 35 .
      SELECT
         WHEN (TYPE = '*H') THEN /* HEADER */
            NOP
         WHEN (TYPE = '*M') THEN /* MATCH  */
            A = A + REC_COUNT     /* SKIP MATCHES*/
         WHEN (TYPE = '*I') THEN
            DO
               DO LINENO = LINE_NUMBER TO (LINE_NUMBER+REC_COUNT-1)
                 'XSTATUS 'LINENO' = NX'
               END
               A = A + REC_COUNT     /* SKIP INSERTS*/
            END
         WHEN (TYPE = '*D') THEN
            A = A + REC_COUNT     /* SKIP DELETES*/
         OTHERWISE
            DO
               SAY 'UNRECOGNIZED CONTROL TYPE "'TYPE'"',
                  'IN UPD FILE AT LINE' A
               EXIT 4
            END
      END        /* END OF SELECT */
   END
/* NOW ADD TAGS TO UNEXCLUDED LINES AND PROCESS FAILURES */
   "CHANGE '"COPIES(' ',LENGTH(TAG))"' '"TAG"' "FLAGCOL "ALL NX"
   IF RC > 0 THEN
      DO
         CALL SETMSG '* NO TAGGING ERROR$',
            || 'TAGS COULD NOT BE ADDED TO ONE OR MORE LINES.'
      END
   IF SHOW_CONTEXT > 0 THEN
      DO
         ADDRESS ISPEXEC 'CONTROL ERRORS RETURN'
         'ISREDIT (LAST) = LINENUM .ZLAST'
         NXLIST = ''
         DO A = 1 TO LAST
            '(XT) = XSTATUS 'A
            IF XT = 'NX' THEN NXLIST=NXLIST A
         END
         DO WHILE NXLIST \= ''
            PARSE VAR NXLIST CURRENTLINE NXLIST
            DO A = CURRENTLINE-SHOW_CONTEXT TO CURRENTLINE+SHOW_CONTEXT
               'XSTATUS 'A' = NX'
            END
         END
         ADDRESS ISPEXEC 'CONTROL ERRORS CANCEL'
      END
   ELSE 'RESET'
   "FIND ALL NX '"TAG"' "FLAGCOL /* FIND AND HIGHLIGHT CHANGES */
   RETURN

ALLOCATES:  PROCEDURE EXPOSE CURDSN
   ADDRESS TSO 'FREE F(NEWDD,OLDDD,DELDD)'
   ADDRESS TSO 'DEL $$$TEMP.NEWDD'
   'ISREDIT (LRECL) = LRECL'
   'ISREDIT (RECFM) = RECFM'
   IF RECFM = 'V' THEN LRECL = LRECL + 4
   'ISREDIT (CURRDSN) = DATASET'
   'ISREDIT (CURRMEM)  = MEMBER'
   CURDSN = '''' || CURRDSN || '(' || CURRMEM || ')'''
   ADDRESS TSO 'ALLOC F(OLDDD) SHR DSNAME('CURDSN')'
   IF RC = 0 THEN
      ADDRESS TSO 'ALLOC F(NEWDD) NEW DSN($$$TEMP.NEWDD)',
               'LRECL('LRECL') RECFM('RECFM' B) BLKSIZE(0)',
               'UNIT(SYSDA) SP(10,10) TRACKS'
   IF RC > 0 THEN /* TEMP ALLOCATION NOT OK? */
      DO;
         CALL SETMSG '* YES ALLOCATION FAILED$'||,
                     'TEMPORARY DATA SET COULD NOT BE ALLOCATED.'
         EXIT 1
      END;
   ELSE /* TEMP FILE EXISTS - COPY CURRENT CONTENTS TO TEMP FILE*/
      DO
         ADDRESS ISREDIT
         ADDRESS TSO "EXECIO 0 DISKW NEWDD (OPEN"
         'ISREDIT (THEEND) = LINENUM .ZLAST'
         DO II = 1 TO THEEND
            "ISREDIT (RECORD) = LINE &II"
            PUSH RECORD
            ADDRESS TSO "EXECIO 1 DISKW NEWDD"
         END
         ADDRESS TSO "EXECIO 0 DISKW NEWDD (FINIS"
      END
   ADDRESS TSO
   'ALLOC FILE(SYSIN) DUMMY REUSE'
   'ALLOC NEW FILE(DELDD) LRECL(255) BLKSIZE(27795) RECFM(F B),
       TRACK UNIT(SYSDA) SPACE(5,10) REUSE DSORG(PS)'
   RETURN

PTR: RETURN C2D(BITAND(STORAGE(D2X(ARG(1)),4),'7FFFFFFF'X))

SETMSG: /* PROCESS ALL SETMSG REQUESTS AS CONDITIONAL SETMSGS */
   PARSE ARG ZERRHM ZERRALRM ZERRSM'$'ZERRLM
   ADDRESS ISPEXEC 'SETMSG MSG(ISRZ002) COND'
   RETURN

DISPDOC:
   ADDRESS TSO "CLEAR"
   SAY "FLAGREVS - ADD REVISION CODE(S) TO CHANGED LINES UNDER EDIT"
   SAY
   SAY " FORMAT "
   SAY "    FLAGREVS TAG-CODE  TAG-COLUMN "
   SAY
   SAY "       THE REVISION CODE (TAG-CODE) IS MANDATORY;    "
   SAY "       THE REVISION COLUMN DEFAULTS TO 65. ALL NON   "
   SAY "       CHANGED LINES WILL BE EXCLUDED AND ONE LINE   "
   SAY "       ABOVE AND ONE BELOW WILL BE SHOWN. NON BLANKS "
   SAY "       WILL NOT BE OVERLAID BY THE TAG.              "
   SAY
   SAY "       DOES NOT FLAG DELETED LINES.                  "
   SAY
   SAY " EXAMPLE "
   SAY "    FLAGREVS  |  1 "
   SAY "       WILL PLACE A '|' IN COLUMN 1 OF EVERY CHANGED LINE."
   SAY
   SAY "    FLAGREVS  ## "
   SAY "       WILL PLACE '##' IN COLUMN 65 (BY DEFAULT) OF EVERY"
   SAY "       CHANGED LINE."
   SAY
   EXIT(1)

