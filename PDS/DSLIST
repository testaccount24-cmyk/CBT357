/**  REXX -- CURSOR-DRIVEN ENTRY INTO PDF 3.4 PANEL                  **/

   ADDRESS ISPEXEC
   "CONTROL ERRORS RETURN"
   ZERRMSG = ''
   DSNAME  = ''
   "ISREDIT MACRO (PARMS)"
   PARMS = TRANSLATE(PARMS)
   IF PARMS = "?" THEN SIGNAL DISPDOC
   IF RC = 0 THEN DO
      "ISREDIT (LINE,CSRP) = CURSOR"
      "ISREDIT (LINE)      = LINE .ZCSR"
      IF CSRP > 0 THEN CALL EXTRACT_DSNAME
   END
   ELSE DO
      "VGET ZAPPLID"
      IF ZAPPLID <> 'ISR' THEN DO
         "SELECT CMD(%"SYSVAR(SYSICMD) ") NEWAPPL(ISR)"
         EXIT RC
      END
      CALL FIND_CURSOR_POSITION
      CALL EXTRACT_DSNAME
   END
   "VGET ZENVIR"
   CALL INVOKE_ISRUDL
   IF ZERRMSG\='' THEN "SETMSG MSG("ZERRMSG")"
   EXIT(0)

FIND_CURSOR_POSITION:
   TCB    = PTR(540)
   TCB    = PTR(TCB+132)
   FSA    = PTR(TCB+112)
   R1     = PTR(FSA+24)
   TLD    = PTR(R1)
   TLS    = PTR(TLD+096)
   CSR    = PTR(TLD+164)
   SCRW   = PTR(TLD+192)
   IF SCRW > 0 THEN CSRP = CSR//SCRW+1
               ELSE CSRP = 1
   LINEAD = D2X(TLS+CSR-CSRP+1)
   LINE   = STORAGE(LINEAD,SCRW)
   RETURN

PTR:
   RETURN C2D(BITAND(STORAGE(D2X(ARG(1)),4),'7FFFFFFF'X))

EXTRACT_DSNAME:
   VALID = COPIES(' ',64) || XRANGE('40'X,'FF'X)
   IF SUBSTR(LINE,CSRP,1) = ' ' THEN RETURN
   P = SUBSTR(LINE,MAX(CSRP-3,1),MIN(CSRP+3,LENGTH(LINE))+1)
   IF POS('DSN=',P) > 0 THEN CSRP = CSRP + 4
   P = SUBSTR(LINE,MAX(CSRP-6,1),MIN(CSRP+6,LENGTH(LINE))+1)
   IF POS('DSNAME=',P) > 0 THEN CSRP = CSRP + 7
   LINE = COPIES(' ',10) || TRANSLATE(LINE,VALID) || COPIES(' ',10)
   CSRP = CSRP + 10
   UPPER LINE

   DO WHILE SUBSTR(LINE,CSRP,1) = '('; CSRP = CSRP + 1; END
   DO WHILE SUBSTR(LINE,CSRP,1) = ')'; CSRP = CSRP - 1; END

   VALID = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@#$-{.'
   LD    = 0
   LP    = 0

   C = SUBSTR(LINE,CSRP,1)
   IF VERIFY(C,VALID) = 1  THEN DO
      IF C <> "'" THEN RETURN
      IF VERIFY(SUBSTR(LINE,CSRP+1,1),VALID) = 0  THEN LD = CSRP
      ELSE DO
         P = CSRP - 1
         IF SUBSTR(LINE,P,1) = ')',
               | VERIFY(SUBSTR(LINE,P,1),VALID) = 0,
            THEN CSRP = CSRP - 2
            ELSE RETURN
      END
   END

   IF LD = 0 THEN DO
      DO CSRP = CSRP TO 1 BY -1
         C = SUBSTR(LINE,CSRP,1)
         IF VERIFY(C,VALID) > 0  THEN
            IF C = '(' THEN DO
               IF LP > 0 THEN LEAVE
               DO I = 1 TO 9
                  IF SUBSTR(LINE,CSRP+I,1) = '.' THEN LEAVE
               END
               IF I > 8 THEN LP = CSRP
                        ELSE LEAVE
            END
         ELSE LEAVE
      END
      LD = CSRP
      IF LP = LD + 1  THEN DO
         LP = 0
         LD = LD + 1
      END
   END

   IF LP = 0  THEN DO
      CSRP = LD + 1
      P = VERIFY(LINE,VALID,,CSRP)
      IF SUBSTR(LINE,P,1) = '(' THEN DO
         LP   = P
         CSRP = P + 1
      END
   END
   ELSE CSRP = LP + 1

   RD = VERIFY(LINE,VALID,,CSRP)
   IF LP > 0 & SUBSTR(LINE,RD,1) = ')'  THEN RD = RD + 1
   IF SUBSTR(LINE,LD,1) = "'" & SUBSTR(LINE,RD,1) <> "'"  THEN RETURN

   DSNAME = SUBSTR(LINE,LD+1,RD-LD-1)
   IF LEFT(DSNAME,9) = 'CLUSTER--',
         | LEFT(DSNAME,9) = 'DATA-----',
         | LEFT(DSNAME,9) = 'INDEX----',
         | LEFT(DSNAME,9) = 'NONVSAM--',
      THEN DSNAME = RIGHT(DSNAME,LENGTH(DSNAME)-9)
   IF LENGTH(DSNAME) < 5 | LENGTH(DSNAME) > 44 THEN DSNAME = ''
   RETURN

INVOKE_ISRUDL:
   IF DSNAME <> '' THEN DO
      I = POS('(',DSNAME)
      IF I > 0 THEN ZDLDSNLV=LEFT(DSNAME,I-1)
      ELSE ZDLDSNLV = DSNAME
      ZDLPVL = ''
      "VPUT (ZDLDSNLV ZDLPVL) PROFILE"
   END
   "SELECT PGM(ISRUDL) PARM(ISRUDLP)"
   RETURN

DISPDOC:
   ADDRESS TSO "CLEAR"
   SAY "DSLIST - USE DATA SET NAME UNDER CURSOR TO INVOKE DS LIST "
   SAY
   SAY " FORMAT "
   SAY
   SAY "    %DSLIST "
   SAY
   SAY "       THIS REXX MACRO ALLOWS YOU TO INVOKE THE DATA-SET LIST  "
   SAY "       FUNCTION OF ISPF/PDF (OPTION 3.4) WITH THE DSNAME LEVEL "
   SAY "       FIELD SET TO THE DSNAME UNDER WHICH THE CURSOR IS PLACED"
   SAY "       WHEN YOU ENTER THE COMMAND.  DSLIST MAY BE INVOKED AS A "
   SAY "       COMMAND OR AS AN EDIT MACRO.                            "
   SAY
   EXIT(1)

