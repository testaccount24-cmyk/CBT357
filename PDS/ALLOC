         MACRO
&NAME    ALLOC &DUMMY,&PERM,&DSN=,&DDN=,&DDNRET=,&MEMBER=,&DISP=,      X
               &VOL=,&UNIT=,&SYSOUT=,&FREE=,&COPIES=,&LABEL=,&FCB=,    X
               &BLKSIZE=,&DEN=,&DSORG=,&KEYLEN=,&LRECL=,&RECFM=,       X
               &PASWORD=,&DSNRET=,&MF=AUTO,&PREFIX=,&ERROR=,&CHARS=,   X
               &SPACE=,&F=,&FILE=,&DA=,&QNAME=,&DSORGRT=,&UCS=,        X
               &BUFNO=,&VOLRET=,&DCBDSN=,&DCBDDN=,&SPECIAL=,&DDNTO=,   X
               &FLASH=,&FORMS=,&DEST=,&FORUSER=,&TU=,&DSNPDE=,&BURST=, X
               &SUBSYS=,&SUBDDN=,&BUFND=,&BUFNI=,&HBUFND=,&HBUFNI=,    X
               &DEFERW=,&SHRPOOL=,&BUFSD=,&BUFSI=,&MSG=,&OUTPUT=,      X
               &PAGEDEF=,&FORMDEF=,&PRMODE=,&TRC=,&OUTDEL=,            X
               &DEFAULT=YES,&STCL=
.*********************************************************************
.*
.*    THIS MACRO PROVIDES A DYNAMIC ALLOCATION FUNCTION BY BUILDING
.*    A DYNAMIC ALLOCATION PARAMETER LIST AND INVOKING SVC 99.
.*    IT FIRST SETS UP A WORKAREA ENVIRONMENT FOR THE PARAMETER LIST
.*    AND THEN TESTS THE KEYWORDS SUPPLIED AND INVOKES INNER MACROS
.*    TO BUILD THE TEXT UNITS. THE INNER MACROS THEMSELVES USE INNER
.*    MACROS TO UPDATE GLOBAL VARIABLES, STORE TEXT UNIT POINTERS ETC
.*
.*    DYNAMIC ALLOCATION FUNCTIONS ARE SIMILAR TO THOSE AVAILABLE
.*    WITH JCL, USING THE SAME KEYWORDS. HOWEVER, CERTAIN FORMATS
.*    ARE SLIGHTLY DIFFERENT. FOR INSTANCE, CERTAIN KEYWORDS CAN
.*    HAVE VARYING PARAMETERS, EG DATASET NAME, DDNAME, VOLSER ETC.
.*    PROVISION IS MADE FOR BOTH VARIABLE SPECIFICATION.
.*    IN THE ABSOLUTE FORM, THE PARAMETER IS ENTERED IN QUOTES, E.G.
.*           ALLOC DSN='SYS1.LINKLIB',DISP=SHR
.*    HOWEVER, THIS NAME REMAINS FIXED FOR THE ASSEMBLY.  WHILE
.*    IN THE VARIABLE FORMAT, THE ADDRESS OF A LOCATOR IS SPECIFIED,
.*    WHERE THE LOCATOR CONSISTS OF A SIX BYTE FIELD, THE FIRST 4
.*    BYTES OF WHICH POINT TO THE PARAMETER, WHILE THE NEXT TWO
.*    CONTAIN THE LENGTH, E.G.
.*                ALLOC DSN=LOCATOR
.*       LOCATOR  DC    A(DSN),Y(12)
.*       DSN      DC    C'SYS1.LINKLIB'
.*
.*    NUMERIC QUANTITIES E.G. COPIES= FOR SYSOUT, SHOULD EITHER
.*    SPECIFY A NUMERIC VALUE, COPIES=3, A VALUE IN A REGISTER,
.*    COPIES=(R2), OR THE NAME OF A FULLWORD CONTAINING THE
.*    VALUE, EG COPIES=NUMCOPYS, WHERE NUMCOPYS IS THE NAME OF A
.*    FULLWORD FIELD.
.*
.*    OTHER KEYWORDS SUCH AS DISP= CAN ONLY HAVE THE ABSOLUTE
.*    FORM, AND VALUES SHOULD NOT BE ENTERED WITHIN QUOTES.
.*    ADDITIONAL FACILITIES NOT AVAILABLE WITH JCL ARE THE
.*    RETURN BY THE SYSTEM OF INFORMATION ON THE DATASET, EG
.*    DSORG. THIS IS DONE BY SPECIFYING DSORGRT=SYMBOL, WHERE
.*    SYMBOL IS A SYMBOL WHICH WILL BE EQUATED TO A TWO BYTE
.*    FIELD CONTAINING THE DSORG TYPE.
.*
.*    THE SYSTEM CAN ALSO GENERATE AND RETURN A DDNAME. THIS IS
.*    CARRIED OUT BY ENTERING DDNTO=(ADDR1,ADDR2,,...) WHERE
.*    ADR1,ADDR2 ETC ARE THE NAMES OF 8 BYTE FIELDS WHICH ARE TO
.*    RECEIVE THE DDNAME.
.*
.********************************************************************
         GBLA  &RCPDYN            COUNTER FOR NO ENTRIES TO MACRO
         GBLA  &DTUO              OFFSET TO TEXT UNITS
         GBLA  &DTUPO             OFFSET TO TEXT UNIT POINTERS
         GBLA  &ODTUO             OFFSET TO OUTPUT TEXT UNITS
         GBLA  &ODTUPO            OFFSET TO OUTPUT TEXT UNIT POINTERS
         GBLB  &RCPS99(2)         TELL RCPDSECT NEED DSECTS
         GBLC  &DYNP              PREFIX FOR LABELS FOR THIS CALL
         GBLC  &DYNSP             NAME FOR AUTOMATIC STORAGE ALLOC
         LCLA  &DDNRTO,&DSNRTO         FOR EQUATES FOR RETURNED FLDS
         LCLA  &VOLRTO,&DSRGRTO        FOR EQUATES FOR RETURNED FIELDS
         LCLA  &I                 COUNTER
         LCLB  &DSECT             DSECT NEEDED FOR STORAGE, MF=E
         LCLC  &C,&T,&PAR
.*
&RCPS99(1)     SETB           1
&RCPDYN  SETA  &RCPDYN+1          INCEREMENT COUNTER
&DYNP    SETC  'DYN&RCPDYN' SET DEFAULT PREFIX
&NAME    DS    0H
         AIF   ('&PREFIX' EQ '').TMF
         AIF   (K'&PREFIX LT 4).POK
         MNOTE 4,'PREFIX TOO LONG, 1ST 4 CHARS USED'
&DYNP    SETC  '&PREFIX'(1,4)
         AGO   .TMF
.POK     ANOP
&DYNP    SETC  '&PREFIX'
.TMF     AIF   ('&MF' NE 'AUTO').TMFE
NAME     DYNSPACE             GET NAME FOR SPACE
         LA    R1,&DYNSP      LOAD ADDRESS OF PARAM LIST
         USING &DYNP.DS,R1    USE GENERATED DSECT
         LA    R3,O&DYNSP     LOAD ADDRESS OF OUTPUT TU AREA
&T       SETC  'A'
&PAR     SETC  '&DYNSP+4'
&OPAR    SETC  'O&DYNSP+4'
&DSECT   SETB  1
         AGO   .START
.TMFE    AIF   ('&MF' EQ 'E').E2OK
         MNOTE 8,'INVALID MF= PARM'
         AGO   .GEN
.E2OK    ANOP
&DSECT   SETB  1
         AIF   ('&MF(2)' EQ '(').RMFE
         LA    R1,&MF(2)               LOAD PARAM LIST ADDRESS
         USING &DYNP.DS,R1             USE GENERATED DSECT
         AGO   .START
.RMFE    AIF   ('&MF(2)' EQ '(R1)' OR '&MF(2)' EQ '(1)').START
         LR    R1,&PAR                 LOAD S99 PARAM LIST ADDRESS
         AGO   .START
.GEN     LA    R1,&DYNP.RBP            LOAD ADDRESS OF S99 RBP
.START   LA    R15,&DYNP.RB            LOAD ADDRESS OF S99 RB
         USING S99RB,R15
         ST    R15,0(R1)               AND STORE IN RB POINTER
         XC    &DYNP.RB(20),&DYNP.RB   ZERO REQUEST BLOCK
         XC    &DYNP.TUP,&DYNP.TUP     ZERO TEXT UNIT POINTERS
         XC    &DYNP.TU,&DYNP.TU       ZERO TEXT UNITS
         MVI   S99RBLN,20              MOVE IN LIST LENGTH
         MVI   S99VERB,S99VRBAL        MOVE IN VERB CODE
         LA    R14,&DYNP.TUP           LOAD ADDRESS OF TU POINTERS
         ST    R14,S99TXTPP            STORE ADDRESS IN S99 RB
         LA    R15,&DYNP.TU            POINT TO SPACE FOR TEXT UNITS
         USING S99TUNIT,R15
&DTUO    SETA  0
&DTUPO   SETA  0
&ODTUO   SETA  0
&ODTUPO  SETA  0
.TDSN    AIF   ('&DSN&DA' NE '').DSN
         AIF   ('&DSNPDE' NE '').DSNPDE
         AIF   ('&DSNRET' NE '').DSNRT
         AIF   ('&SYSOUT' NE '').SYSOUT
         AIF   ('&DUMMY' NE '').DUMMY
         AIF   ('&QNAME' NE '').QNAME
.TDDN    AIF   ('&DDN&FILE&F' NE '').DDN
         AIF   ('&DDNRET&DDNTO' NE '').DDNRT
.TUNIT   AIF   ('&UNIT&VOL' NE '').UNIT
.TVOLRET AIF   ('&VOLRET' NE '').VOLRET
.TDSRGO  AIF   ('&DSORGRT' NE '').DSORGRT
.TLABEL  AIF   ('&LABEL' NE '').LABEL1
.TPSWD   AIF   ('&PASWORD' NE '').PASWORD
.TFORUSE AIF   ('&FORUSER' NE '').FORUSER
.TTU     AIF   ('&TU' NE '').TU
.TDISP   AIF   ('&DISP' NE '').DISP
.TSPACE  AIF   ('&SPACE' NE '').SPACE
.TSTCL   AIF   ('&STCL' NE '').STCL
.TLRECL  AIF   ('&LRECL' NE '').DCB
         AIF   ('&DEN' NE '').DCB
         AIF   ('&RECFM' NE '').DCB
         AIF   ('&BUFNO' NE '').DCB
         AIF   ('&BLKSIZE' NE '').DCB
         AIF   ('&DSORG' NE '').DCB
         AIF   ('&KEYLEN' NE '').DCB
.TDCBDSN AIF   ('&DCBDSN' NE '').DCBDSN
.TDCBDDN AIF   ('&DCBDDN' NE '').DCBDDN
.TFREE   AIF   ('&FREE' EQ 'CLOSE').FREE
.TPERM   AIF   ('&PERM' EQ 'PERM' OR '&PERM' EQ 'PERMANENT').PERM
         AIF   ('&DUMMY' EQ 'PERM' OR '&DUMMY' EQ 'PERMANENT').PERM
.TSPECI  AIF   ('&SPECIAL' NE '').SPECIAL
.TOUTA   AIF   ('&OUTPUT' NE '').OUTA
         AGO   .SVC99
.DSN     RCPDSN &DSN&DA,&MEMBER
         AIF   ('&SUBSYS' NE '').SUBSYS
         AGO   .TDDN
.DSNPDE  RCPDSNPD &DSNPDE
         AGO   .TDDN
.DSNRT   RCPDSNRT &DSNRET
&DSNRTO  SETA  &DTUO-46
         AGO   .TDDN
.SUBSYS  RCPSUBSY SUBSYS=&SUBSYS,SUBDDN=&SUBDDN,BUFND=&BUFND,          X
               BUFNI=&BUFNI,HBUFND=&HBUFND,HBUFNI=&HBUFNI,             X
               DEFERW=&DEFERW,SHRPOOL=&SHRPOOL,BUFSD=&BUFSD,           X
               BUFSI=&BUFSI,MSG=&MSG
         AGO   .TDDN
.SYSOUT  RCPSYSOU &SYSOUT,COPIES=&COPIES,FREE=&FREE,DEST=&DEST,        X
               FORMS=&FORMS,UCS=&UCS,FCB=&FCB,CHARS=&CHARS,            X
               BURST=&BURST,FLASH=&FLASH,OUTPUT=&OUTPUT
         AGO   .TDDN
.DUMMY   RCPDUMMY &DUMMY
         AGO   .TDDN
.QNAME   RCPQNAME &QNAME
         AGO   .TDDN
.DDN     RCPDDN &DDN&F&FILE
         AGO   .TUNIT
.DDNRT   RCPDDNRT &DDNRET
&DDNRTO  SETA  &DTUO-10
         AGO   .TUNIT
.UNIT   RCPUNIT &UNIT,&VOL,99
         AGO   .TVOLRET
.VOLRET  RCPVOLRT &VOLRET
&VOLRTO  SETA  &DTUO-8
         AGO   .TDSRGO
.DSORGRT RCPDSRGR
&DSRGRTO SETA  &DTUO-2
         AGO   .TLABEL
.LABEL1  RCPLABEL &LABEL
         AGO   .TPSWD
.PASWORD RCPPSWD &PASWORD
         AGO   .TFORUSE
.FORUSER RCPFORUS &FORUSER
         AGO   .TTU
.TU      RCPTU &TU
         AGO   .TDISP
.DISP    RCPDISP &DISP
         AGO   .TSPACE
.SPACE   RCPSPACE &SPACE
         AGO   .TSTCL
.STCL    RCPSTCL &STCL
         AGO   .TLRECL
.DCB     RCPDDCB LRECL=&LRECL,DEN=&DEN,RECFM=&RECFM,BLKSIZE=&BLKSIZE,  X
               DSORG=&DSORG,KEYLEN=&KEYLEN,BUFNO=&BUFNO
         AGO .TDCBDSN
.DCBDSN  RCPDCBDS &DCBDSN
         AGO .TDCBDDN
.DCBDDN  RCPDCBDD &DCBDDN
         AGO .TFREE
.FREE    RCPFREE  &FREE
         AGO   .TPERM
.PERM    RCPPERM
         AGO   .TSPECI
.SPECIAL RCPSPEC &SPECIAL
         AGO   .TOUTP
.OUTA    ANOP
         AIF   ('&OUTDEL' EQ 'YES').OUTD
         RCPOUTA OUTPUT=&OUTPUT,PAGEDEF=&PAGEDEF,FORMDEF=&FORMDEF,     X
               PRMODE=&PRMODE,TRC=&TRC,DEFAULT=&DEFAULT
         AGO   .SVC99
.OUTD    ANOP
         RCPOUTD OUTPUT=&OUTPUT
.SVC99   ANOP
&DTUPO   SETA  &DTUPO-4
         SPACE
         MVI   &DYNP.TUP+&DTUPO,X'80'  SET HIGH ORDER BIT ON TEXT PTRS
         MVI   &DYNP.RBP,X'80'         SET HIGH ORDER BIT ON RB PTR
         RCPSR2 UNSAVE
&DTUPO   SETA  &DTUPO+4
         AIF   (NOT &DSECT).DYNA
         DROP  R1,R15                  DEACTIVATE ADDRESSABILITY
         LA    R14,4(R1)               POINT TO REQUEST BLOCK
.DYNA    DYNALLOC
         AIF   (NOT &DSECT).LTR
         USING &DYNP.RB,R14            SET UP ADDRESSABILITY
**       NOTE  R14 HAS RB ADDRESS, R15 HAS SVC 99 RETURN CODE        **
.LTR     AIF   ('&ERROR' EQ '').TDDTO
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   &ERROR                  BRANCH IF NON ZERO
.TDDTO   AIF   ('&DDNTO' EQ '').RESERVE
&I       SETA  0
.DDNTOL  ANOP
&I       SETA  &I+1
         AIF   ('&DDNTO(&I)' EQ '').RESERVE
         AIF   ('&DDNTO(&I)'(1,1) EQ '(').DDNTOR
         MVC   &DDNTO(&I).(8),&DYNP.TU+&DDNRTO+2
         AGO   .DDNTOL
.DDNTOR  ANOP
&C       SETC  '&DDNTO(&I)'(2,K'&DDNTO(&I)-2)
         MVC   0(8,&C),&DYNP.TU+&DDNRTO+2
         AGO   .DDNTOL
.RESERVE AIF   (&DSECT).RESDS
         SPACE 1
*********************************************************************
**       RESERVE SPACE FOR DYNALLOC PARAMETER LIST                 **
*********************************************************************
         RCPDS
.SSP     ANOP
&DYNP.RBP DS   F                       SVC 99 REQ BLOCK POINTER
&DYNP.RB  DS   5F                      SVC 99 REQUEST BLOCK
&DYNP.TUP DS   CL&DTUPO                SPACE FOR TEXT POINTERS
         AIF   (&DTUO EQ 0).DTU21
&DYNP.TU  DS   CL&DTUO                 SPACE FOR TEXT UNITS
         AIF   (&DSNRTO EQ 0).TDDNRTO
&DSNRET  EQU   &DYNP.TU+&DSNRTO        OFFSET TO RETURNED DSN
.TDDNRTO AIF   ('&DDNRET' EQ '').DTU11
&DDNRET  EQU   &DYNP.TU+&DDNRTO        OFFSET TO RETURNED DDNAME
.DTU11   AIF   (&VOLRTO EQ 0).DTU12
&VOLRET  EQU   &DYNP.TU+&VOLRTO        OFFSET TO RETURNED VOLSER
.DTU12   AIF   (&DSRGRTO EQ 0).DTU10
&DSORGRT EQU   &DYNP.TU+&DSRGRTO       OFFSET TO RETURNED DSORG
         AGO   .DTU10
.DTU21   ANOP
&DYNP.TU  DS   0C                      NO SPACE NEEDED FOR TEXT UNITS
.DTU10   ANOP
&DYNP.LEN EQU  *-&DYNP.RBP             LENGTH OF SPACE USED
         AIF   (&DSECT).DSP
         RCPDS
         SPACE 3
         AGO   .EXIT
.RESDS   ANOP
         AIF   ('&DYNSP' EQ '').SP3
         DYNSPACE ADD
.SP3     SPACE
&DYNP.DS DSECT                         DSECT TO MAP SVC 99 DATA
         AGO   .SSP
.DSP     AIF   ('&MF(3)' EQ '').END1
&MF(3)   EQU   &DYNP.LEN               LENGTH OF AREA
.END1    ANOP
&SYSECT  CSECT
         SPACE 3
.EXIT    MEND
