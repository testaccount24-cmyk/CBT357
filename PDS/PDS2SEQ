/*  REXX -- Unload PDS members to a readable sequential file         */
/*-------------------------------------------------------------------*/

   arg inpds outseq optn1 optn2 .
   If inpds = '' | inpds = '?' then signal DispDoc
   optn1 = translate(optn1)
   optn2 = translate(optn2)
   nosep = 'NO'
   addrepl = 'ADD'
   If optn1 = 'ADD' then addrepl = 'ADD'
   If optn2 = 'ADD' then addrepl = 'ADD'
   If optn1 = 'REPLACE' then addrepl = 'REPLACE'
   If optn2 = 'REPLACE' then addrepl = 'REPLACE'
   If optn1 = 'NOSEP' then nosep = 'YES'
   If optn2 = 'NOSEP' then nosep = 'YES'

   DSNStatus = SYSDSN(inpds)
   IF DSNStatus <> "OK" then do
      Say inpds DSNStatus ":("
      Exit(1)
   End
   DSNStatus = SYSDSN(outseq)
   IF DSNStatus = "OK" then do
      Say outseq "already exists :("
      Exit(1)
   End

   Say 'Unloading PDS' inpds 'to' outseq
   LDSI = LISTDSI(inpds)
   Address TSO

   If length(SYSRECFM) > 1 then do
      recfm = ""
      DO II = 1 TO (LENGTH(SYSRECFM) - 1)
         recfm = recfm || substr(SYSRECFM,II,1) || ' '
      end
      recfm = recfm || SUBSTR(SYSRECFM,LENGTH(SYSRECFM),1)
   end
   Else recfm = sysrecfm
   "ALLOC DD(OUTSEQ) DSN("outseq")",
      "LRECL("syslrecl") BLKSIZE("sysblksize") RECFM("recfm")",
      "SPACE(10,10) UNIT(SYSDA) CYL"
   RetCode = RC
   If RetCode <> 0 then do
      Say 'Allocation error on' outseq 'Return Code =' RetCode
      Exit(1)
   End

   "EXECIO 0 DISKW OUTSEQ (OPEN"
   RetCode = RC
   If RetCode <> 0 then do
      Say 'Open error on' outseq 'Return Code =' RetCode
      Exit(1)
   End

   x = outtrap(mem.)
   "LISTDS" inpds "MEMBERS"
   RetCode = RC
   If RetCode <> 0 then do
      Say 'ListDS error on' outseq 'Return Code =' RetCode
      Exit(1)
   End
   x = outtrap('off')
   do II = 1 to mem.0
       if mem.II = "--MEMBERS--" then leave
   end

   count = 0
   Do JJ = II+1 to mem.0
      count = count + 1
      member = strip(mem.JJ)
      sepcard = './ ' addrepl 'NAME='member
      If substr(inpds,1,1) = "'" then do
         dsn = substr(inpds,1,length(inpds)-1) || '(' || member,
            || ')' || substr(inpds,length(inpds),1)
      End
      Else dsn = inpds || '(' || member || ')'
      "ALLOC DD("member") DSN("dsn") SHR"
      RetCode = RC
      If RetCode <> 0 then do
         Say 'Open error on' inpds 'member' member,
            'Return Code =' RetCode
         Exit(1)
      End
     "EXECIO * DISKR" member "(STEM LINES. FINIS"
      EXITRC = RC
      RetCode = RC
      If RetCode <> 0 then do
         Say 'I/O read error on' inpds 'member' member,
            'Return Code =' RetCode
         Exit(1)
      End
      If nosep <> 'YES' then do
         queue sepcard
        "EXECIO 1 DISKW OUTSEQ"
         RetCode = RC
         If RetCode <> 0 then do
            Say 'I/O output error on' inpds 'member' member './ image',
               'Return Code =' RetCode
            Exit(1)
         End
      End

      "EXECIO * DISKW OUTSEQ (STEM LINES."
      RetCode = RC
      If RetCode <> 0 then do
         Say 'I/O output error on' inpds 'member' member,
            'Return Code =' RetCode
         Exit(1)
      End
      "FREE DD("member")"
      RetCode = RC
      If RetCode <> 0 then do
         Say 'Free error on' inpds 'member' member,
            'Return Code =' RetCode
         Exit(1)
      End

      drop lines.
   End JJ
   "EXECIO 0 DISKW OUTSEQ (FINIS"
   RetCode = RC
   If RetCode <> 0 then do
      Say 'Close error on' outseq 'Return Code =' RetCode
      Exit(1)
   End
   "FREE DD(OUTSEQ)"
   RetCode = RC
   If RetCode <> 0 then do
      Say 'Free error on' outseq 'Return Code =' RetCode
      Exit(1)
   End
   Say '   ' count 'members unloaded...'
   Exit(0)

DispDoc:
   Address TSO "CLEAR"
   Say "                                                             "
   Say "  PDS2Seq   unloads the specified PDS into a sequential file "
   Say "            with or without IEBUPDTE separator cards. The    "
   Say "            LRECL and BLKSIZE of the PDS are used for the    "
   Say "            output file.                                     "
   Say "                                                             "
   Say "  syntax:   PDS2SEQ  PDS-name  OutSeq <NOSEP> <ADD|REPLACE>  "
   Say
   Say "            PDS-name is the input PDS                        "
   Say
   Say "            OutSeq is the name, either quoted or not, of the "
   Say "            sequential output file to be created.            "
   Say
   Say "            <NOSEP>  is an optional parameter to indicate    "
   Say "            whether IEBUPDTE separator cards are generated.  "
   Say "            The default is to have them.                     "
   Say
   Say "            <ADD|REPLACE> specifies the add or replace option"
   Say "            to be used on IEBUPDTE cards (if generated) - the"
   Say "            default is ADD.                                  "
   Say
   exit(1)

