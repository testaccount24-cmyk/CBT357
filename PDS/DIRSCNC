//-YOUR-USERID-D JOB  (-YOUR-ACCT-INFO-),'-YOUR-USERID-',
//             CLASS=2,MSGCLASS=X,NOTIFY=-YOUR-USERID-
//***
//***  READ A PDS DIRECTORY AND GENERATE CARD IMAGES WITH MEMBER
//***  NAME IN PLACE OF ???????? AND ######## (VARIABLE VS FIXED)
//***
//C          EXEC     PGM=IGYCRCTL,REGION=4M,
//             PARM=('ARITH(EXTEND),LIB,MAP,NUMPROC(PFD),OFF,OPTIMIZE',
//            'AWO,INTDATE(LILIAN),APOST,NOSEQ,TRUNC(OPT),XREF')
//SYSIN        DD       *

      **************************
       IDENTIFICATION DIVISION.
      **************************
       PROGRAM-ID.  DIRSCNC.

      ***********************
       ENVIRONMENT DIVISION.
      ***********************

       INPUT-OUTPUT SECTION.
      *---------------------*

       FILE-CONTROL.

           SELECT I ASSIGN TO I.

           SELECT SYSIN ASSIGN TO SYSIN.

           SELECT SELMEM ASSIGN TO SELMEM.

           SELECT O ASSIGN TO O.

      ****************
       DATA DIVISION.
      ****************

       FILE SECTION.
      *-------------*

       FD  I
           RECORDING MODE IS F
           BLOCK CONTAINS 0 RECORDS.
       01  I-REC        PIC X(00256).

       FD  SYSIN
           RECORDING MODE IS F
           BLOCK CONTAINS 0 RECORDS.
       01  SYSIN-REC    PIC X(00080).

       FD  SELMEM
           RECORDING MODE IS F
           BLOCK CONTAINS 0 RECORDS.
       01  SELMEM-REC   PIC X(00080).

       FD  O
           RECORDING MODE IS F
           BLOCK CONTAINS 0 RECORDS.
       01  O-REC        PIC X(00080).

       WORKING-STORAGE SECTION.
      *------------------------*

       01  WS-MISC-DATA.
           05  END-OF-FILE-STATUS     PIC X      VALUE 'N'.
               88  AT-END-OF-FILE                VALUE 'Y'.
               88  NOT-AT-END-OF-FILE            VALUE 'N'.
           05  II                     PIC 9(00004) COMP.
           05  JJ                     PIC 9(00004) COMP.
           05  KK                     PIC 9(00004) COMP.
           05  LL                     PIC 9(00004) COMP.
           05  WS-BIT                 PIC 9(00009).
           05  WS-BLANKS              PIC X(00008) VALUE SPACES.
           05  WS-FIRST               PIC 9(00006) COMP VALUE 1.
           05  WS-FIRST-MEM           PIC X(00008) VALUE SPACES.
           05  WS-FW-CNT              PIC 9(00009) COMP VALUE 0.
           05  WS-FW-CNT-OVLY         REDEFINES WS-FW-CNT.
               10                     PIC 9(00004) COMP.
               10  WS-HW-CNT          PIC 9(00004) COMP.
               10  WS-HW-CNT-OVLY     REDEFINES WS-HW-CNT.
                   15                 PIC X(00001).
                   15  WS-HW-BYTE     PIC X(00001).
           05  WS-IMAGE               PIC X(00080).
           05  WS-LAST                PIC 9(00006) COMP VALUE 999999.
           05  WS-LAST-MEM            PIC X(00008) VALUE ALL '9'.
           05  WS-MEM-CNT             PIC 9(00004) COMP VALUE 0.
           05  WS-RC                  PIC 9(00002).
           05  WS-SUB                 PIC 9(00004) COMP.
           05  WS-SYSIN-ARRAY-CNT     PIC 9(00004) COMP VALUE 0.
           05  WS-SYSIN-ARRAY         OCCURS 1000.
               10  WS-SYSIN-CARD      PIC X(00080).
               10  WS-SYSIN-OFFSET-ARRAY  OCCURS 8.
                   15 WS-SYSIN-OFFSET PIC 9(00004) COMP VALUE 0.

       01  WS-I-REC.
           05  WS-I-LEN               PIC 9(00004) COMP.
           05  WS-I-DATA              PIC X(00254).
       01  WS-O-REC                   PIC X(00080).
       01  WS-SELMEM-REC              PIC X(00080).
       01  WS-SYSIN-REC               PIC X(00080).

      *********************
       PROCEDURE DIVISION.
      *********************

           OPEN  INPUT  I
                        SYSIN
                        SELMEM
                 OUTPUT O

           SET NOT-AT-END-OF-FILE TO TRUE
           READ  SYSIN INTO WS-SYSIN-REC
               AT END SET AT-END-OF-FILE TO TRUE
           END-READ
           PERFORM 0200-READ-SYSIN-LOOP
               UNTIL AT-END-OF-FILE

           SET NOT-AT-END-OF-FILE TO TRUE
           READ  SELMEM INTO WS-SELMEM-REC
               AT END SET AT-END-OF-FILE TO TRUE
           END-READ
           PERFORM 0400-READ-SELMEM-LOOP
               UNTIL AT-END-OF-FILE

           SET NOT-AT-END-OF-FILE TO TRUE
           READ  I INTO WS-I-REC
               AT END SET AT-END-OF-FILE TO TRUE
           END-READ
           PERFORM 0600-READ-I-LOOP
               UNTIL AT-END-OF-FILE

           CLOSE I
                 SYSIN
                 SELMEM
                 O
           GOBACK
           .

       0200-READ-SYSIN-LOOP.
      ***********************
           ADD 1 TO WS-SYSIN-ARRAY-CNT
           MOVE WS-SYSIN-REC TO WS-SYSIN-CARD(WS-SYSIN-ARRAY-CNT)
           MOVE 0 TO JJ
           PERFORM VARYING II FROM 1 BY 1
                       UNTIL II > 72
               IF WS-SYSIN-REC(II:8) = '????????'
                       OR WS-SYSIN-REC(II:8) = '########'
                   ADD 1 TO JJ
                   MOVE II TO WS-SYSIN-OFFSET(WS-SYSIN-ARRAY-CNT JJ)
                   ADD 7 TO II
               END-IF
           END-PERFORM
           READ  SYSIN INTO WS-SYSIN-REC
               AT END SET AT-END-OF-FILE TO TRUE
           END-READ
           .

       0400-READ-SELMEM-LOOP.
      ************************
           SET AT-END-OF-FILE TO TRUE
           MOVE WS-SELMEM-REC(07:06) TO WS-FIRST
           MOVE WS-SELMEM-REC(20:06) TO WS-LAST
           MOVE WS-SELMEM-REC(38:08) TO WS-FIRST-MEM
           MOVE WS-SELMEM-REC(58:08) TO WS-LAST-MEM
           .

       0600-READ-I-LOOP.
      *******************
           MOVE 3 TO JJ
           PERFORM UNTIL JJ > WS-I-LEN OR AT-END-OF-FILE
               IF WS-I-REC(JJ:8) = HIGH-VALUES
                   SET AT-END-OF-FILE TO TRUE
               ELSE
                   ADD 1 TO WS-MEM-CNT
                   IF WS-I-REC(JJ:8) > WS-LAST-MEM
                           OR WS-I-REC(JJ:8) < WS-FIRST-MEM
                           OR WS-MEM-CNT     < WS-FIRST
                           OR WS-MEM-CNT     > WS-LAST
                       CONTINUE
                   ELSE
                       PERFORM 0800-GEN-IMAGES
                   END-IF
                   MOVE 0 TO WS-FW-CNT
                   MOVE WS-I-REC(JJ + 11:1) TO WS-HW-BYTE
                   MULTIPLY 2048 BY WS-FW-CNT
                   DIVIDE   WS-HW-CNT BY 2048 GIVING WS-HW-CNT
                   COMPUTE JJ = JJ + 12 + (WS-HW-CNT * 2)
               END-IF
           END-PERFORM
           IF NOT-AT-END-OF-FILE
               READ  I INTO WS-I-REC
                   AT END SET AT-END-OF-FILE TO TRUE
               END-READ
           END-IF
           .

       0800-GEN-IMAGES.
      ******************
           PERFORM VARYING LL FROM 1 BY 1
                   UNTIL ( LL > 7 OR WS-I-REC(JJ + LL:1) = ' ' )
           END-PERFORM
           PERFORM VARYING II FROM 1 BY 1
                       UNTIL II > WS-SYSIN-ARRAY-CNT
               MOVE WS-SYSIN-CARD(II) TO WS-IMAGE
               PERFORM VARYING KK FROM 8 BY -1
                       UNTIL KK < 1
                   IF WS-SYSIN-OFFSET(II KK) > 0
                       MOVE WS-SYSIN-OFFSET(II KK) TO WS-SUB
                       IF WS-IMAGE(WS-SUB:8) = '########'
                           MOVE WS-I-REC(JJ:8) TO WS-IMAGE(WS-SUB:8)
                       ELSE
                           STRING
                               WS-IMAGE(1:WS-SUB - 1)
                               WS-I-REC(JJ:LL)
                               WS-IMAGE(WS-SUB + 8:)
                               WS-BLANKS(1:8 - LL)
                                   DELIMITED BY SIZE
                               INTO WS-IMAGE
                           END-STRING
                       END-IF
                   END-IF
               END-PERFORM
               WRITE O-REC FROM WS-IMAGE
           END-PERFORM
           .

//SYSPRINT     DD       SYSOUT=*
//SYSLIN       DD       DSNAME=&&LOADSET,UNIT=SYSDA,
//             DISP=(MOD,PASS),SPACE=(CYL,(1,1)),
//             DCB=(BLKSIZE=3200)
//SYSUT1       DD       UNIT=SYSDA,SPACE=(CYL,(5,2))
//SYSUT2       DD       UNIT=SYSDA,SPACE=(CYL,(5,2))
//SYSUT3       DD       UNIT=SYSDA,SPACE=(CYL,(5,2))
//SYSUT4       DD       UNIT=SYSDA,SPACE=(CYL,(5,2))
//SYSUT5       DD       UNIT=SYSDA,SPACE=(CYL,(5,2))
//SYSUT6       DD       UNIT=SYSDA,SPACE=(CYL,(5,2))
//SYSUT7       DD       UNIT=SYSDA,SPACE=(CYL,(5,2))
//***
//L          EXEC     PGM=HEWL,COND=(4,LT),REGION=4M,
//             PARM='RENT,AMODE(31),RMODE(ANY),XREF,LIST,LET,DCBS'
//SYSLIB       DD       DSNAME=-YOUR-SCEELLED-,DISP=SHR
//SYSUT1       DD       UNIT=VIO,
//             SPACE=(CYL,(05,02),,CONTIG)
//SYSPRINT     DD       SYSOUT=*
//SYSLMOD      DD       DSN=-YOUR-LOADLIB-,
//             DISP=SHR
//SYSLIN       DD       DSN=&&LOADSET,DISP=(OLD,DELETE,DELETE)
//             DD       *
  SETSSI   03091200
  ENTRY    DIRSCNC
  NAME     DIRSCNC(R)
//***
