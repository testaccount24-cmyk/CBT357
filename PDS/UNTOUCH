//-YOUR-USERID-U JOB  (-YOUR-ACCT-INFO-),'-YOUR-NAME-',
//             CLASS=2,MSGCLASS=X,NOTIFY=-YOUR-USERID-
//***
//***  COMPILE FOR UNTOUCH WHICH MAKES SURE EVERY DIRECTORY ENTRY
//***  FOR A GIVEN PDS IS NULL, THAT IS, HAS NO STATISTICS
//***
//C          EXEC     PGM=IEL0AA,REGION=4M,COND=(5,LT),
//             PARM=('AG,A,NCT,ESD,F(I),NOFLOW,NIS,NOLIST,M,NMI,NEST',
//             'MAP,OF,OPT(TIME),OP,SZ(MAX),S,STMT,STG,X(F)')
//STEPLIB      DD       DISP=SHR,DSN=-YOUR-PLI-LIB-

 UNTOUCH:
      PROC OPTIONS(MAIN) REORDER;

      DCL  SYSIN        FILE INPUT STREAM
                        ENV(FB, RECSIZE(080), TOTAL);
      DCL  SYSUT1       FILE INPUT RECORD SEQL
                        ENV(F, RECSIZE(256), BLKSIZE(256), TOTAL);

      DCL  1  DIR_BLK           BASED(DIR_BLK_PTR),
              5  LL             FIXED BIN(15,0),
              5  DATA           CHAR(254);
      DCL  1  MEM_OVLY          BASED(MEM_OVLY_PTR),
             10  MEMBER         CHAR(8),
             10  TTR            CHAR(3),
             10  C,
                15  ALIAS       BIT(1),
                15  TTR_CNT     BIT(2),
                15  DATA_CNT    BIT(5),
             10  ORG_HWDS(39)   CHAR(2);

      DCL  FIRST                FIXED BIN(31) STATIC INIT(00000001);
      DCL  LAST                 FIXED BIN(31) STATIC INIT(99999999);
      DCL  FIRSTMEM             CHAR(8) STATIC INIT(' ');
      DCL  MEM_ARRAY(10240)     CHAR(12) STATIC;
      DCL  MEM_CNT              FIXED BIN(15) STATIC INIT(0);
      DCL  II                   FIXED BIN(15) STATIC INIT(0);
      DCL  LASTMEM              CHAR(8) STATIC INIT('99999999');
      DCL  BASEDATA             CHAR(12) STATIC;

      DCL  R15                  FIXED BIN(15) STATIC INIT(0);
      DCL  RC                   FIXED BIN(15) STATIC INIT(0);
      DCL  WHY                  FIXED BIN(15) STATIC INIT(0);
      DCL  #RESET               FIXED BIN(31) STATIC INIT(0);

      DCL STOWU  ENTRY(CHAR(12),      /* BASIC MEMBER DATA */
                       FIXED BIN(15), /* DYNALLOC R15 R/C  */
                       FIXED BIN(15), /* INFO  ERROR  CODE */
                       FIXED BIN(15)) /* INFO  REASON CODE */
                 OPTIONS(ASM);

      DCL  ( MEM_OVLY_PTR, DIR_BLK_PTR )
                                PTR STATIC;
      DCL  ( MEMNUM, MASK_CTR, LEN, ICTR, JCTR, I_ORG_CNT )
                                FIXED BIN(31) STATIC INIT(0);
      DCL  ( HBOUND, SUBSTR, HIGH, LENGTH, ADDR, INDEX )
                                BUILTIN;

      OPEN FILE(SYSIN), FILE(SYSUT1);
      GET DATA FILE(SYSIN);
      ON ENDFILE(SYSUT1) GOTO I_EOF;

 I_READ_LOOP:
      READ FILE(SYSUT1) SET(DIR_BLK_PTR);
      LEN = 2;
      MEM_OVLY_PTR = ADDR(DIR_BLK.DATA);

 I_MEM_ROUTINE:
      IF MEM_OVLY.MEMBER = HIGH(8)
         THEN GOTO I_EOF;
      MEMNUM = MEMNUM + 1;
      IF MEMNUM < FIRST | MEM_OVLY.MEMBER < FIRSTMEM
         THEN GOTO I_NEXT_MEM;
      IF MEMNUM > LAST | MEM_OVLY.MEMBER > LASTMEM
         THEN GOTO I_EOF;

      IF MEM_OVLY.C.DATA_CNT > 0
         THEN DO;
            MEM_CNT = MEM_CNT + 1;
            IF MEM_CNT > HBOUND(MEM_ARRAY,1)
               THEN DO;
                  PUT EDIT ('**  ERROR  **  ARRAY EXCEEDS BOUNDS ')
                           (SKIP(1),A);
                  CALL PLIRETC(16);
                  RETURN;
               END;
            IF ALIAS = '1'B
               THEN MEM_ARRAY(MEM_CNT) = MEM_OVLY.MEMBER
                  || TTR || '80'X;
               ELSE MEM_ARRAY(MEM_CNT) = MEM_OVLY.MEMBER
                  || TTR || '00'X;
         END;

 I_NEXT_MEM:
      I_ORG_CNT = MEM_OVLY.C.DATA_CNT + 1;
      MEM_OVLY_PTR = ADDR(MEM_OVLY.ORG_HWDS(I_ORG_CNT));
      LEN = LEN + (2 * I_ORG_CNT) + 10;
      IF DIR_BLK.LL > LEN
            THEN GOTO I_MEM_ROUTINE;
            ELSE GOTO I_READ_LOOP;

 I_EOF:
      DO II = 1 TO MEM_CNT;
         BASEDATA = MEM_ARRAY(II);
         CALL STOWU(BASEDATA,R15,RC,WHY);
         IF R15 > 0
            THEN DO;
               PUT EDIT ('**  ERROR  **  MEMBER ', MEM_OVLY.MEMBER,
                         ', STOW ERROR = ',  R15,
                         ', REASON CODE = ', RC,
                         ', OTHER CODE = ',  WHY)
                        (SKIP(1),A,A,A,P'99999',A,P'-ZZ,ZZ9',
                         A,P'-ZZ,ZZ9');
               PUT EDIT ('**         **  BASE DATA = ', BASEDATA)
                        (SKIP(1),A,A);
               CALL PLIRETC(16);
            END;
            ELSE DO;
               #RESET = #RESET + 1;
               PUT EDIT ('**  RESET     **  MEMBER ',
                         SUBSTR(BASEDATA,1,8))
                        (SKIP(1),A,A);
            END;
      END;

      PUT EDIT ('**  COMPLETE  **  # MEMBERS UNTOUCHED ', #RESET)
               (SKIP(4),A,P'ZZZ,ZZ9');
      CLOSE FILE(SYSIN), FILE(SYSUT1);
      END UNTOUCH;

//SYSUT1       DD       UNIT=VIO,SPACE=(CYL,(05,02),,CONTIG)
//SYSPRINT     DD       SYSOUT=*
//SYSLIN       DD       DSN=&&LOADSET,DISP=(MOD,PASS),
//             UNIT=VIO,SPACE=(CYL,(5,3))
//***
//L          EXEC     PGM=HEWLKED,COND=(5,LT),
//             PARM='XREF,LIST,LET',
//             REGION=4M
//SYSLIB       DD       DISP=SHR,DSN=-YOUR-SCEELLED-
//             DD       DISP=SHR,DSN=-YOUR-LOADLIB-
//SYSUT1       DD       UNIT=VIO,SPACE=(CYL,(05,02),,CONTIG)
//SYSPRINT     DD       SYSOUT=*
//SYSLMOD      DD       DSN=-YOUR-LOADLIB-,DISP=SHR
//SYSLIN       DD       DSN=&&LOADSET,DISP=(OLD,DELETE,DELETE)
//             DD       *
  SETSSI   01020600
  ENTRY    PLISTART
  NAME     UNTOUCH(R)
//***
