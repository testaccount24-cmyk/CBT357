//-YOUR-USERID-B JOB  (-YOUR-ACCT-INFO-),'-YOUR-NAME-',
//             CLASS=2,MSGCLASS=X,NOTIFY=-YOUR-USERID-
//***
//***  BASIC SEQUENTIAL READ AND WRITE ASSEMBLER PROGRAM W/ COUNTS
//***  BUT IS NOW REENTRANT AND AMODE=31 WITH RMODE=ANY AND WILL
//***  COPY THE DCB ATTRIBUTES OF THE INPUT FILE FOR FIXED OR VARIABLE
//***
//ASM        EXEC     PGM=ASMA90,REGION=4M,
//             PARM='RENT'
//SYSLIB       DD       DISP=SHR,DSN=SYS1.MACLIB
//             DD       DISP=SHR,DSN=-YOUR-SYSLIB-

BASE     AMODE 31
BASE     RMODE ANY

R0       EQU    0                  SHORT TERM WORK REGISTER
R1       EQU    1                  SHORT TERM WORK REGISTER
R2       EQU    2                  .
R3       EQU    3                  # RECORDS READ
R4       EQU    4                  # RECORDS WRITTEN
R5       EQU    5                  DCB POINTER FOR INPUT FILE
R6       EQU    6                  DCB POINTER FOR OUTPUT FILE
R7       EQU    7                  DCB POINTER FOR SYSPRINT
R8       EQU    8                  INPUT AREA (FROM R1 ON GET)
R9       EQU    9                  OUTPUT AREA POINTER
R10      EQU   10                  SHORT TERM WORK REGISTER
R11      EQU   11                  BASE REGISTER
R12      EQU   12                  SUBROUTINE RETURN REGISTER
R13      EQU   13                  SAVEAREA AND WORKAREA POINTER
R14      EQU   14                  SHORT TERM WORK REGISTER
R15      EQU   15                  SHORT TERM WORK REGISTER

BASE     RENTER SALEN=DYNAMLEN+1024,REGS=NO
         USING WORKAREA,R13
         USING IREC,R8
         USING OREC,R9

***********************************************************************
*    MAIN LINE
***********************************************************************

         BAL   R12,GETSTORE        ALLOCATE MEMORY FOR WORK AREAS ETC
         BAL   R12,OPENRTN         OPEN FILES

LOOP     EQU   *
         BAL   R12,GETREC          READ A RECORD
         BAL   R12,PROCESS         BUILD OUTPUT RECORD
         BAL   R12,PUTREC          WRITE A RECORD
         B     LOOP                PROCESS NEXT RECORD

IEOF     EQU   *
         BAL   R12,CLOSERTN        PRINT COUNTS AND CLOSE ALL FILES
         L     R15,FINALRC         SET LAST RETURN CODE
         REXIT

***********************************************************************
*    USE STORAGE OBTAINED WITH THE SAVEAREA TO INITIALIZE THE
*    WORK AREAS AND I/O MACROS AND GET OUTPUT AREA
***********************************************************************

GETSTORE EQU   *

         SR    R3,R3               INITIALIZE # READ
         SR    R4,R4               INITIALIZE # WRITTEN
         XC    FINALRC,FINALRC     INITIALIZE FINAL RETURN CODE TO 0

         LA    R0,WKINGSTG         INITIALIZE I/O MACS & MSG FIELDS
         LA    R1,DYNAMLEN
         LA    R14,DYNAM
         LA    R15,DYNAMLEN
         MVCL  R0,R14

         LA    R5,IDCB             SET UP DCBE'S IN WORKING STORAGE
         LA    R14,IDCBE
         ST    R14,0(R5)
         LA    R6,ODCB
         LA    R14,ODCBE
         ST    R14,0(R6)
         LA    R7,SDCB
         LA    R14,SDCBE
         ST    R14,0(R7)

         L     R0,MAXRECSZ         GET MAX AREA FOR O/P
         STORAGE  OBTAIN,LENGTH=(0),LOC=BELOW
         LR    R9,R1               SET USING ADDRESS OF OUTPUT AREA

         BR    R12

***********************************************************************
*    OPEN THE DCBS FROM THE GETMAINED AREAS
***********************************************************************

OPENRTN  EQU   *
         LA    R1,OPEN
         OPEN  ((R5),,(R7),OUTPUT),MF=(E,(R1)),MODE=31

         USING IHADCB,R5           MAKE O/P DCB LINE I/P'S
         IC    R10,DCBRECFM
         LH    R14,DCBLRECL
         LH    R15,DCBBLKSI
         DROP  R5
         USING IHADCB,R6
         STC   R10,DCBRECFM
         STC   R10,RECFM
         STH   R14,DCBLRECL
         STH   R14,RECSIZE
         STH   R15,DCBBLKSI
         DROP  R6
         LA    R1,OPENO
         OPEN  ((R6),OUTPUT),MF=(E,(R1)),MODE=31

         BR    R12

***********************************************************************
*    READ A RECORD FROM THE INPUT FILE
***********************************************************************

GETREC   EQU   *
         GET   (R5)
         LR    R8,R1
         LA    R3,1(R3)            INCREMENT INPUT COUNTER

         BR    R12

***********************************************************************
*    WRITE THE OUTPUT FILE
***********************************************************************

PROCESS  EQU   *
         LA    R4,1(R4)            INCREMENT OUTPUT COUNTER

         LR    R0,R9
***                                SIMPLY COPY THE I/P TO THE O/P
         TM    RECFM,X'80'
         BNO   VARRECFM
         LH    R1,RECSIZE
         LR    R14,R8
         LH    R15,RECSIZE
         ICM   R15,B'1000',BLANK
         B     COPYREC

VARRECFM EQU   *
         LH    R1,0(R8)
         LR    R14,R8
         LH    R15,0(R8)
         ICM   R15,B'1000',BLANK

COPYREC  EQU   *
         MVCL  R0,R14

         BR    R12

***********************************************************************
*    WRITE OUTPUT FILE
***********************************************************************

PUTREC   EQU   *
         PUT   (R6),(R9)

         BR    R12

***********************************************************************
*    CLOSE THE DCBS FROM THE GETMAINED AREAS
***********************************************************************

CLOSERTN EQU   *
         TIME                      , PRINT STATISTICS
         XC    DW,DW
         ST    R0,DW+4
         ED    TIME#,DW+4
         ST    R1,DW+4
         AP    DW,CENTURY
         ED    DATE#,DW+4
         PUT   (R7),STATMSG
         CVD   R3,DW
         ED    READ#,DW+4
         PUT   (R7),READMSG
         CVD   R4,DW
         ED    WRITTEN#,DW+4
         PUT   (R7),WRITEMSG

         LA    R1,CLOSE            CLOSE FILES
         CLOSE ((R5),,(R6),,(R7)),MF=(E,(R1)),MODE=31

         BR    R12

***********************************************************************
*    LIST FORM OF I/O MACRO INSTRUCTIONS AND OTHER STATIC DATA
***********************************************************************

DYNAM    DS    0D

XOPEN    OPEN  (XIDCB,(INPUT),XSDCB,(OUTPUT)),                         X
               MF=L,MODE=31

XOPENO   OPEN  (XODCB,(OUTPUT)),MF=L,MODE=31

XCLOSE   CLOSE (XIDCB,,XODCB,,XSDCB),MF=L,MODE=31

XIDCB    DCB   DSORG=PS,MACRF=GL,                                      X
               BUFNO=32,DDNAME=I,DCBE=XIDCBE
XIDCBE   DCBE  RMODE31=BUFF,EODAD=IEOF

XODCB    DCB   DSORG=PS,MACRF=PM,DDNAME=O,                             X
               BUFNO=32,DCBE=XODCBE
XODCBE   DCBE  RMODE31=BUFF

XSDCB    DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FA,LRECL=121,BLKSIZE=121,DCBE=XSDCBE
XSDCBE   DCBE  RMODE31=BUFF

MESSAGES EQU   *
         DC    CL32'-***  BASE STATISTICS --- DATE: '
         DC    XL09'402020202061202020'
         DC    CL10'   TIME:  '
         DC    XL12'4020207A20207A20204B2020'
         DC    CL58' '
         DC    CL31'-***  NUMBER RECORDS READ     :'
         DC    XL10'40206B2020206B202021'
         DC    CL80' '
         DC    CL31'-***  NUMBER RECORDS WRITTEN  :'
         DC    XL10'40206B2020206B202021'
         DC    CL80' '
XRECSIZE DS    H
XRECFM   DS    C

DYNAMLEN EQU   (*-DYNAM)

BLANK    DC    CL1' '
CENTURY  DC    PL5'1900000'
MAXRECSZ DC    F'32760'

***********************************************************************
*    DSECTS USED BY PROGRAM
***********************************************************************

WORKAREA DSECT

SAVEAREA DS    9D                  SAVE AREA
DW       DS    D                   DOUBLEWORD WORK AREA
FINALRC  DS    F                   FINAL RETURN CODE
FILLER   DS    F

WKINGSTG DS    0D

OPEN     OPEN  (IDCB,(INPUT),SDCB,(OUTPUT)),MF=L,MODE=31

OPENO    OPEN  (ODCB,(OUTPUT)),MF=L,MODE=31

CLOSE    CLOSE (IDCB,,ODCB,,SDCB),MF=L,MODE=31

IDCB     DCB   DSORG=PS,MACRF=GL,                                      X
               BUFNO=32,DDNAME=I,DCBE=IDCBE
IDCBE    DCBE  RMODE31=BUFF,EODAD=IEOF

ODCB     DCB   DSORG=PS,MACRF=PM,DDNAME=O,                             X
               BUFNO=32,DCBE=ODCBE
ODCBE    DCBE  RMODE31=BUFF

SDCB     DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FA,LRECL=121,BLKSIZE=121,DCBE=SDCBE
SDCBE    DCBE  RMODE31=BUFF

STATMSG  DS    0CL121
         DS    CL32
DATE#    DS    XL09
         DS    CL10
TIME#    DS    XL12
         DS    CL58
READMSG  DS    0CL121
         DS    CL31
READ#    DS    XL10
         DS    CL80
WRITEMSG DS    0CL121
         DS    CL31
WRITTEN# DS    XL10
         DS    CL80
RECSIZE  DS    H
RECFM    DS    C
WKARLEN  EQU   (*-WORKAREA)


IREC     DSECT
         DS    CL80
IRECLEN  EQU   (*-IREC)

OREC     DSECT
         DS    CL80
ORECLEN  EQU   (*-OREC)

***********************************************************************
*    END OF PROGRAM
***********************************************************************

         DCBD  DSORG=(PS,PO),DEVD=DA

         END   BASE
//SYSUT1       DD       UNIT=VIO,
//             SPACE=(CYL,(05,02),,CONTIG)
//SYSPRINT     DD       SYSOUT=*,
//             DCB=(RECFM=FM,LRECL=121,BLKSIZE=121)
//SYSLIN       DD       DSN=&&LOADSET,DISP=(MOD,PASS),
//             UNIT=VIO,SPACE=(2960,(111,12)),DCB=BLKSIZE=2960
//***
//CLEANUP    EXEC     PGM=IEFBR14
//DEL01        DD       DSN=...,
//             DISP=(MOD,DELETE,DELETE),UNIT=SYSDA,SPACE=(TRK,0)
//***
//GO         EXEC     PGM=LOADER,
//             PARM='RENT,AMODE(31),RMODE(ANY)',
//             REGION=4M,COND=(5,LT)
//SYSLIN       DD       DSN=&&LOADSET,DISP=(OLD,DELETE,DELETE)
//SYSLOUT      DD       SYSOUT=*
//I            DD       DISP=SHR,DSN=...
//O            DD       DISP=(,CATLG),DSN=...,
//             UNIT=SYSDA,SPACE=(CYL,(010,010),RLSE)
//SYSPRINT     DD       SYSOUT=*
//SYSUDUMP     DD       SYSOUT=*
//***
