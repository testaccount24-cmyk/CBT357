//-YOUR-USERID-D JOB  (-YOUR-ACCT-INFO-),'-YOUR-NAME-',
//             CLASS=2,MSGCLASS=X,NOTIFY=-YOUR-USERID-
//***
//C          EXEC     PGM=IEL0AA,REGION=4M,
//             PARM=('AG,A,NCT,ESD,F(I),NOFLOW,NIS,NOLIST,M,NMI,NEST',
//             'MAP,OF,OPT(TIME),OP,SZ(MAX),S,STMT,STG,X(F)')
//STEPLIB      DD       DISP=SHR,DSN=-YOUR-PLI-LIB-
 /***                                                              ***/
 /*** DIRSCNQ WILL GENERATE THE SET OF CARD IMAGES IN THE SYSIN    ***/
 /*** FILE FOR EACH MEMBER IN THE PDS SPECIFIED BY THE I FILE.     ***/
 /*** NO, YOU CAN NOT CONCATENATE MULTIPLE PDS'S TO I.             ***/
 /***                                                              ***/
 /*** FOR EACH MEMBER IN I, DIRSCNQ WILL GENERATE THE IMAGES IN    ***/
 /*** SYSIN REPLACING EIGHT QUESTION MARKS (????????) WITH THE     ***/
 /*** MEMBER NAME AND COMPRESSING THE CARD IMAGE FOR MEMBER NAMES  ***/
 /*** LESS THEN EIGHT CHARACTERS LONG.  IT WILL ALSO REPLACE       ***/
 /*** EIGHT POUND SIGNS (########) WITH THE MEMBER NAME, NOT       ***/
 /*** COMPRESSING THE CARD (I.E. LEAVING THE LAST BYTES BLANK IF   ***/
 /*** LESS THEN EIGHT BYTES LONG).                                 ***/
 /***                                                              ***/
 /*** THE SELMEM FILE INPUT SPECIFIES THE NUMBERS OF THE MEMBER    ***/
 /*** RANGE TO BE GENERATED, FIRST AND LAST, OR THE ACTUAL MEMBER  ***/
 /*** NAME RANGE, FIRSTMEM AND LASTMEM.  DEFAULTS ARE SET TO GEN   ***/
 /*** FOR EVERY MEMBER.                                            ***/
 /***                                                              ***/

 DIRSCNQ:
      PROC OPTIONS(MAIN) REORDER;

      DCL  SELMEM       FILE INPUT STREAM
                        ENV(FB, RECSIZE(080), TOTAL);
      DCL  SYSIN        FILE INPUT RECORD SEQL
                        ENV(FB, RECSIZE(080), TOTAL);
      DCL  I            FILE INPUT RECORD SEQL
                        ENV(F, RECSIZE(256), BLKSIZE(256), TOTAL);
      DCL  O            FILE OUTPUT RECORD SEQL
                        ENV(FB, RECSIZE(80), TOTAL);

      DCL  1  DIR_BLK           BASED(DIR_BLK_PTR),
              2  LL             FIXED BIN(15,0),
              2  DATA           CHAR(254);

      DCL  1  MEM_OVLY          BASED(MEM_OVLY_PTR),
              2  MEMBER         CHAR(8),
              2  TTR            CHAR(3),
              2  C,
                 3  ALIAS       BIT(1),
                 3  TTR_CNT     BIT(2),
                 3  DATA_CNT    BIT(5),
              2  ORG_HWDS(39)   CHAR(2);

      DCL  MASK_ARRAY(1000)     CHAR(80) STATIC;
      DCL  MASK_CARD            CHAR(80) STATIC;

      DCL  CHARVAR              CHAR(8) VAR STATIC;
      DCL  FIRST                FIXED BIN(31) STATIC INIT(00000001);
      DCL  LAST                 FIXED BIN(31) STATIC INIT(99999999);
      DCL  FIRSTMEM             CHAR(8) STATIC INIT(' ');
      DCL  LASTMEM              CHAR(8) STATIC INIT('99999999');

      DCL  ( MEM_OVLY_PTR, DIR_BLK_PTR )
                                PTR STATIC;
      DCL  ( MEMBER, MASK_CTR, LEN, ICTR, JCTR, I_ORG_CNT )
                                FIXED BIN(31) STATIC INIT(0);
      DCL  ( HBOUND, SUBSTR, HIGH, LENGTH, ADDR, INDEX )
                                BUILTIN;

      OPEN FILE(SELMEM),
           FILE(SYSIN),
           FILE(I),
           FILE(O);
      GET DATA FILE(SELMEM);

      ON ENDFILE(SYSIN) GOTO SYSIN_EOF;

      DO MASK_CTR = 1 TO HBOUND(MASK_ARRAY,1);
            READ FILE(SYSIN) INTO(MASK_ARRAY(MASK_CTR));
            END;

 SYSIN_EOF:
      MASK_CTR = MASK_CTR - 1;
      ON ENDFILE(I) GOTO I_EOF;

 I_READ_LOOP:
      READ FILE(I) SET(DIR_BLK_PTR);
      LEN = 2;
      MEM_OVLY_PTR = ADDR(DIR_BLK.DATA);

 I_MEM_ROUTINE:
      IF MEM_OVLY.MEMBER = HIGH(8)
            THEN GOTO I_EOF;
      MEMBER = MEMBER + 1;
      IF MEMBER < FIRST
         | MEM_OVLY.MEMBER < FIRSTMEM
            THEN GOTO I_NEXT_MEM;
      IF MEMBER > LAST
         | MEM_OVLY.MEMBER > LASTMEM
            THEN GOTO I_EOF;
      ICTR = INDEX ( MEM_OVLY.MEMBER, ' ' );
      IF ICTR = 0
         THEN ICTR = 9;
      CHARVAR = SUBSTR(MEM_OVLY.MEMBER,1,ICTR-1);
      DO ICTR = 1 TO MASK_CTR;
         MASK_CARD = MASK_ARRAY(ICTR);
         JCTR = INDEX ( MASK_CARD, '????????' );
         DO WHILE ( JCTR > 0 );
            SUBSTR(MASK_CARD, JCTR, 73-JCTR)
               = CHARVAR
                  || SUBSTR(MASK_CARD, JCTR+8, 65-JCTR);
            JCTR = INDEX ( MASK_CARD, '????????' );
            END;
         JCTR = INDEX ( MASK_CARD, '########' );
         DO WHILE ( JCTR > 0 );
            SUBSTR(MASK_CARD, JCTR, 8)
               = CHARVAR;
            JCTR = INDEX ( MASK_CARD, '########' );
            END;
         WRITE FILE(O) FROM(MASK_CARD);
         END;
 I_NEXT_MEM:
      I_ORG_CNT = MEM_OVLY.C.DATA_CNT + 1;
      MEM_OVLY_PTR = ADDR(MEM_OVLY.ORG_HWDS(I_ORG_CNT));
      LEN = LEN + (2 * I_ORG_CNT) + 10;
      IF DIR_BLK.LL > LEN
            THEN GOTO I_MEM_ROUTINE;
            ELSE GOTO I_READ_LOOP;

 I_EOF:
      CLOSE FILE(SELMEM),
            FILE(SYSIN),
            FILE(I),
            FILE(O);
      END DIRSCNQ;
//SYSUT1       DD       UNIT=VIO,
//             SPACE=(CYL,(5,2),,CONTIG)
//SYSPRINT     DD       SYSOUT=*
//SYSLIN       DD       DSN=&&LOADSET,DISP=(MOD,PASS),
//             UNIT=VIO,SPACE=(CYL,(05,02))
//***
//L          EXEC     PGM=HEWLKED,
//             PARM='XREF,LIST,LET,DCBS,AMODE(31),RMODE(ANY)',
//             REGION=4M
//SYSLIB       DD       DISP=SHR,DSN=-YOUR-SCEELLED-
//SYSUT1       DD       UNIT=VIO,
//             SPACE=(CYL,(05,02),,CONTIG)
//SYSPRINT     DD       SYSOUT=*
//SYSLMOD      DD       DSN=-YOUR-LOADLIB-,DISP=SHR
//SYSLIN       DD       DSN=&&LOADSET,DISP=(OLD,DELETE)
//             DD       *
  SETSSI   97111402
  ENTRY    PLISTART
  NAME     DIRSCNQ(R)
//***
