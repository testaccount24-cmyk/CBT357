/* REXX - GEN A DISPLAY STATEMENT FOR THE VARIABLE AT THE CURSOR */

ADDRESS ISPEXEC
"ISPEXEC CONTROL ERRORS RETURN"
"ISREDIT MACRO (PARMS) NOPROCESS"
IF  RC > 0 THEN DO
   "ISPEXEC SETMSG MSG(CBL000A)"
   EXIT
END
IF PARMS = '?' THEN CALL DISPDOC

COL7     = 7
COL8     = 8
COL11    = 11
COL20    = 20
LEN72    = 72
SPACES11 = '           '

"ISREDIT (QLINE,QCOL) = CURSOR"
IF  QLINE = 0 | QCOL = 0 THEN DO
   "ISPEXEC SETMSG MSG(CBL000C)"
   EXIT
END

   /* GET THE DATA LINE WITH THE FIELD NAME TO BE PROCESSED */
"ISREDIT (QLDATA) = LINE" QLINE
QLDATA = SUBSTR(QLDATA,1,LEN72)
"ISREDIT (XLDATA) = LINE" QLINE+1
IF SUBSTR(XLDATA,7,1) <> '*',
      & SUBSTR(XLDATA,7,1) <> '/',
      & SUBSTR(XLDATA,7,1) <> 'D',
   THEN XLDATA = SUBSTR(XLDATA,8,LEN72)
   ELSE XLDATA = " "

   /* IF 'IN' OR 'OF' ON NEXT LINE, APPEND IT TO CURSOR LINE */
IF  (  POS(' IN ',TRANSLATE(QLDATA)) > 0,
     | POS(' IN ',TRANSLATE(XLDATA)) > 0,
     | POS(' OF ',TRANSLATE(QLDATA)) > 0,
     | POS(' OF ',TRANSLATE(XLDATA)) > 0  ),
   THEN QLDATA = QLDATA || XLDATA

   /* FIGURE END OF VARIABLE */
QLEN = LENGTH(QLDATA)
SPC_CHARS = " ,.='"
DO OK = (QCOL+1) TO QLEN BY 1,
   WHILE ( VERIFY(SUBSTR(QLDATA,OK,1),SPC_CHARS) <> 0 )
END OK
QEND = OK - 1

   /* FIGURE IF 'OF' OR 'IN' AFTER VARIABLE AND INCLUDE AS VARIABLE */
DO QQ = (QEND+1) TO QLEN BY 1 WHILE ( SUBSTR(QLDATA,QQ,1) = ' ' )
END QQ
IF TRANSLATE(SUBSTR(QLDATA,QQ,3)) = 'IN ',
      | TRANSLATE(SUBSTR(QLDATA,QQ,3)) = 'OF ' THEN DO
   DO RR = QQ+2 TO QLEN BY 1 WHILE ( SUBSTR(QLDATA,RR,1) = ' ' )
   END RR
   DO SS = RR TO QLEN BY 1  WHILE ( SUBSTR(QLDATA,SS,1) <> ' ' )
   END SS
   QEND = SS - 1
END

   /* FIGURE IF SUBSCRIPT OR REF MOD AND INCLUDE AS VARIABLE */
DO 2
   DO QQ = (QEND+1) TO QLEN BY 1 WHILE ( SUBSTR(QLDATA,QQ,1) = ' ' )
   END QQ
   IF (QQ < QLEN) & (SUBSTR(QLDATA,QQ,1) = '(')  THEN DO
      DO RR = (QQ+1) TO QLEN WHILE ( SUBSTR(QLDATA,RR,1) <> ')')
      END RR
      QEND = RR
   END
END

IF QEND > 72 THEN QLINE = QLINE + 1

   /* FIGURE START OF VARIABLE */
DO OK = QCOL TO 1 BY -1,
   WHILE ( VERIFY(SUBSTR(QLDATA,OK,1),SPC_CHARS) <> 0 )
END OK
IF OK < 1 THEN QSTART = 1
ELSE QSTART = OK + 1

QLEN = (QEND - QSTART) + 1
QWORD = SUBSTR(QLDATA,QSTART,QLEN)

   /* ELIMINATE DOUBLE BLANKS */
QQ = POS('  ',QWORD)
DO WHILE ( QQ <> 0 )
   QWORD = SUBSTR(QWORD,1,QQ) || SUBSTR(QWORD,QQ+2)
   QQ = POS('  ',QWORD)
END

QWORD = STRIP(QWORD,'B','(')
W_LEN = LENGTH(QWORD)

IF  W_LEN > 16 THEN DO
   IF  W_LEN > 39 THEN QWORD_X = SUBSTR(QWORD,1,34)||'*'
   ELSE QWORD_X = QWORD
   DLINE1 = SPACES11"DISPLAY '~DEBUG~ "QWORD_X" = >'"
   DLINE2 = SPACES11"  "QWORD" '< ~DEBUG~'"
END
ELSE DLINE1 = SPACES11"DISPLAY '~DEBUG~ "QWORD" = >' ",
   || QWORD" '<'"

IF  W_LEN > 16 THEN "ISREDIT LINE_AFTER" QLINE" = (DLINE2)"
"ISREDIT LINE_AFTER" QLINE" = (DLINE1)"
'ISREDIT CURSOR = 'QLINE','QCOL
EXIT

DISPDOC:
   ADDRESS TSO "CLEAR"
   SAY "DISPVAR - ADD DISPLAY DEBUG FOR VARIABLE UNDER CURSOR     "
   SAY
   SAY " FORMAT "
   SAY
   SAY "    DISPVAR                                               "
   SAY
   SAY "       ADDS ONE OR TWO LINES THAT DISPLAY THE VARIABLE ON "
   SAY "       WHICH THE CURSOR WAS POSITIONED. WILL HANDLE BOTH  "
   SAY "       IN AND ON EVEN IF THEY ARE ON THE NEXT LINE, AND   "
   SAY "       BOTH SUBSCRIPT AND REFERENCE MODIFICATION IF ON    "
   SAY "       THE SAME LINE. THE CURSOR MUST BE POSITIONED ON    "
   SAY "       THE VARIABLE NAME. FOR EXAMPLE, IF THE CURSOR IS   "
   SAY "       ON NUMB-RECS-WRITTEN:                              "
   SAY
   SAY "           ADD 1 TO NUMB-RECS-WRITTEN                     "
   SAY "               OF WS-MISC ( 12 )                          "
   SAY
   SAY "       THE FOLLOWING LINES WILL BE INSERTED:              "
   SAY
   SAY "DISPLAY '~DEBUG~ NUMB-RECS-WRITTEN OF WS-MISC ( 12 ) = >' "
   SAY "          NUMB-RECS-WRITTEN OF WS-MISC ( 12 ) '< ~DEBUG~' "
   SAY
   SAY "       USE DELPARA TO REMOVE ALL THE INSERTED LINES.      "
   SAY
   EXIT(0)

