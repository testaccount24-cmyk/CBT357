//-YOUR-USERID-F JOB  (-YOUR-ACCT-INFO-),'-YOUR-NAME-',
//             CLASS=2,MSGCLASS=X,NOTIFY=-YOUR-USERID-
//***
//*** COBOL CODE FOR FOREVER PROGRAM
//***
//C          EXEC     PGM=IGYCRCTL,REGION=4M,
//             PARM=('LIB,MAP,NUMPROC(PFD),OFF,OPTIMIZE',
//            'APOST,NOSEQ,TRUNC(OPT),XREF')
//SYSIN        DD       *

      **************************
       IDENTIFICATION DIVISION.
      **************************
       PROGRAM-ID.  FOREVER.
      *
      * RUN ONLY ON FRIDAYS. IF TODAY'S DATE GREATER THAN DATE
      * IN FOREVER FILE, THEN GENERATE JOB TO INTERNAL READER
      * FOR EVERY FILE IN THERE TO 'TOUCH' THEM, UPDATING LAST
      * REFERENCED DATE.
      *

      ***********************
       ENVIRONMENT DIVISION.
      ***********************

       INPUT-OUTPUT SECTION.
      *---------------------*

       FILE-CONTROL.

           SELECT I
               ASSIGN TO I.

           SELECT O
               ASSIGN TO O.

      ****************
       DATA DIVISION.
      ****************

       FILE SECTION.
      *-------------*

       FD  I
           RECORDING MODE IS F
           BLOCK CONTAINS 0 RECORDS.
       01  INPUT-REC    PIC X(00080).

       FD  O
           RECORDING MODE IS F
           BLOCK CONTAINS 0 RECORDS.
       01  OUTPUT-REC   PIC X(00080).

       WORKING-STORAGE SECTION.
      *------------------------*

       01  WS-INPUT-REC               PIC X(080).
       01  WS-OUTPUT-REC              PIC X(080).
       01  WORK-AREAS.
           05  END-OF-FILE-STATUS     PIC X      VALUE 'N'.
               88  AT-END-OF-FILE                VALUE 'Y'.
           05  WEEK-DAY-NUMBER        PIC 9.
           05  YYMMDD                 PIC 9(006).
           05  CCYYMMDD               PIC 9(008).
           05  II                     PIC 9(008) COMP.
           05  JJ                     PIC 9(008) COMP.
           05  WS-JOB-CARD1.
               10                       PIC X(002) VALUE '//'.
               10  WS-CARD1-USERID1     PIC X(008).
               10                       PIC X(024)
                   VALUE '  JOB      (ACCT INFO),'''.
               10  WS-CARD1-USERID2     PIC X(008).
               10                       PIC X(038)
                   VALUE ''','.
           05  WS-JOB-CARD2.
               10                       PIC X(015) VALUE '//'.
               10                       PIC X(026)
                   VALUE 'CLASS=2,MSGCLASS=X,NOTIFY='.
               10  WS-CARD2-USERID1     PIC X(039)
                   VALUE ''','.
           05  WS-FINAL-CARD1.
               10                       PIC X(080)
                   VALUE '//***'.
           05  WS-IDCAMS-CARD1.
               10                       PIC X(080)
                   VALUE '//IDCAMS     EXEC     PGM=IDCAMS,REGION=4M'.
           05  WS-SYSPRINT-CARD1.
               10                       PIC X(080)
                   VALUE '//SYSPRINT     DD       SYSOUT=*'.
           05  WS-SYSIN-CARD1.
               10                       PIC X(080)
                   VALUE '//SYSIN        DD       *'.
           05  WS-IDCAMS-CARD2.
               10                       PIC X(020)
                   VALUE '  PRINT   INFILE(INF'.
               10  WS-IDCAMS-CARD2-NO   PIC 9(004).
               10                       PIC X(056)
                   VALUE ') COUNT(1)'.
           05  WS-MAXCC-CARD1.
               10                       PIC X(080)
                   VALUE '  SET     MAXCC=0'.
           05  WS-INFILE-CARD1.
               10                       PIC X(005)
                   VALUE '//INF'.
               10  WS-INFILE-CARD1-NO   PIC 9(004).
               10                       PIC X(028)
                   VALUE '      DD       DISP=SHR,DSN='.
               10  WS-INFILE-CARD1-DSN  PIC X(043).

       LINKAGE SECTION.
      *----------------*
       01  PARM-DATA.
           05  PARM-LENGTH              PIC 9(4)              COMP.
           05  PARM-USERID              PIC X(8).

      *************************************
       PROCEDURE DIVISION USING PARM-DATA.
      *************************************

       0000-MAIN.
      ************

      ** CHECK IF FRIDAY

           ACCEPT WEEK-DAY-NUMBER FROM DAY-OF-WEEK
           IF WEEK-DAY-NUMBER = 5

               ACCEPT YYMMDD FROM DATE
               STRING
                   '20'
                   YYMMDD
                       DELIMITED BY SIZE
                   INTO CCYYMMDD
               END-STRING
               OPEN  I-O    I
                     OUTPUT O

      ** READ HEADER DATE RECORD

               READ  I INTO WS-INPUT-REC
                   AT END SET AT-END-OF-FILE TO TRUE
               END-READ

      ** GENERATE JOB TO 'TOUCH' FILES IF NOT YET SUBMITTED TODAY

               IF WS-INPUT-REC(1:8) < CCYYMMDD

      ** REWRITE HEADER DATE BACK TO FILE

                   MOVE CCYYMMDD TO WS-INPUT-REC(1:8)
                   REWRITE INPUT-REC FROM WS-INPUT-REC

      ** WRITE JOB CARD AND ANY CONSTANT CARDS TO INTRDR
                                                                        END-PERF
                   MOVE PARM-USERID(1:PARM-LENGTH)
                       TO WS-CARD1-USERID1
                   MOVE 'F'
                       TO WS-CARD1-USERID1(PARM-LENGTH + 1:1)
                   MOVE PARM-USERID(1:PARM-LENGTH)
                       TO WS-CARD1-USERID2
                   WRITE OUTPUT-REC FROM WS-JOB-CARD1
                   MOVE PARM-USERID(1:PARM-LENGTH)
                       TO WS-CARD2-USERID1
                   WRITE OUTPUT-REC FROM WS-JOB-CARD2

                   WRITE OUTPUT-REC FROM WS-IDCAMS-CARD1
                   WRITE OUTPUT-REC FROM WS-SYSPRINT-CARD1

      ** READ FIRST DATA SET RECORD AND THEN LOOP THRU REST

                   READ  I INTO WS-INPUT-REC
                       AT END SET AT-END-OF-FILE TO TRUE
                   END-READ
                   MOVE 0 TO II
                   PERFORM 0200-READ-WRITE-LOOP
                       UNTIL AT-END-OF-FILE

      ** PROCESS MAXCC CARD AND THEN DD CARDS FOR FILES

                   WRITE OUTPUT-REC FROM WS-SYSIN-CARD1

                   PERFORM
                       VARYING JJ FROM 1 BY 1
                           UNTIL JJ > II
                       MOVE JJ TO WS-IDCAMS-CARD2-NO
                       WRITE OUTPUT-REC FROM WS-IDCAMS-CARD2
                   END-PERFORM
                   WRITE OUTPUT-REC FROM WS-MAXCC-CARD1
                   WRITE OUTPUT-REC FROM WS-FINAL-CARD1
               END-IF

               CLOSE I
                     O
           END-IF
           GOBACK
           .

       0200-READ-WRITE-LOOP.
      ***********************
           ADD 1                   TO  II
           MOVE II                 TO  WS-INFILE-CARD1-NO
           MOVE WS-INPUT-REC(1:44) TO  WS-INFILE-CARD1-DSN
           WRITE OUTPUT-REC FROM WS-INFILE-CARD1
           READ  I INTO WS-INPUT-REC
               AT END SET AT-END-OF-FILE TO TRUE
           END-READ
           .

//SYSPRINT     DD       SYSOUT=*
//SYSLIN       DD       DSN=&&LOADSET,DISP=(MOD,PASS),
//             UNIT=SYSDA,SPACE=(CYL,(3,3)),
//             DCB=(BLKSIZE=0,LRECL=80,RECFM=FB)
//SYSUT1       DD       UNIT=SYSDA,SPACE=(CYL,(05,02))
//SYSUT2       DD       UNIT=SYSDA,SPACE=(CYL,(05,02))
//SYSUT3       DD       UNIT=SYSDA,SPACE=(CYL,(05,02))
//SYSUT4       DD       UNIT=SYSDA,SPACE=(CYL,(05,02))
//SYSUT5       DD       UNIT=SYSDA,SPACE=(CYL,(05,02))
//SYSUT6       DD       UNIT=SYSDA,SPACE=(CYL,(05,02))
//SYSUT7       DD       UNIT=SYSDA,SPACE=(CYL,(05,02))
//***
//L          EXEC     PGM=HEWL,COND=(4,LT),REGION=4M,
//             PARM='RENT,AMODE(31),RMODE(ANY),XREF,LIST,LET,DCBS'
//SYSLIB       DD       DSNAME=-YOUR-SCEELLED-,DISP=SHR
//SYSUT1       DD       UNIT=VIO,
//             SPACE=(CYL,(05,02),,CONTIG)
//SYSPRINT     DD       SYSOUT=*
//SYSLMOD      DD       DSN=-YOUR-LOADLIB-,
//             DISP=SHR
//SYSLIN       DD       DSN=&&LOADSET,DISP=(OLD,DELETE,DELETE)
//             DD       *
  SETSSI   00032800
  ENTRY    FOREVER
  NAME     FOREVER(R)
//***
