/**  REXX -- DELETE SPECIFIED COLUMNS, SHIFTING LEFT REMAINS  **/
   RTN = 0
   SAVEMSG = MSG("OFF")
   X = ADDRESS()
   SUBCOM ISPEXEC
   IF RC <> 0 THEN DO
      SAY 'DELCOLS MUST BE RUN UNDER ISPF!'
      SIGNAL EOJ
   END
   SUBCOM ISREDIT
   IF RC = 0 THEN DO
      UMODE = 'ISREDIT'
      ADDRESS ISPEXEC "CONTROL ERRORS RETURN"
      ADDRESS ISREDIT,
         "ISREDIT MACRO (PARMS) NOPROCESS"
      IF RC = 0 THEN DO
         ADDRESS ISREDIT "ISREDIT ("DSN") = DATASET"
      END
   END
   IF DSN = 'DSN' THEN DO
      ARG PARMS
      SIGNAL DSLIST
   END

   ERRORMSG = ""
   MESG     = ""
   COL.     = ""
   PARMCNT  = 0
   LBL1     = ""
   LBL2     = ""
   "ISREDIT ("LRECL") = LRECL "
   "ISREDIT ("SAVLINE","SAVCOL") = CURSOR "
   DO II = 1 TO 22;
      TOKEN = WORD(PARMS,II)
      IF TOKEN = "" THEN LEAVE
      IF SUBSTR(TOKEN,1,1) = "." THEN DO
         IF LBL1 = "" THEN LBL1 = TOKEN
         ELSE IF LBL2 = "" THEN LBL2 = TOKEN
            ELSE DO
               ZEDSMSG = ".LABEL RC=8"
               ZEDLMSG = "TOO MANY LABELS --" LBL1 LBL2 TOKEN
               ADDRESS "ISPEXEC" "SETMSG MSG(ISRZ000)"
               EXIT 8
            END
      END
      ELSE DO
         IF  ¬DATATYPE(TOKEN,'W') | TOKEN = 0 THEN DO
            MESG = "'"TOKEN"' COLUMN VALUE IS INVALID!"
            SIGNAL ERROR
         END
         IF TOKENT > LRECL THEN DO
            MESG = "COLUMN" TOKEN "IS BIGGER THAN RECORD SIZE ("LRECL")"
            SIGNAL ERROR
         END
         PARMCNT     = PARMCNT + 1
         COL.PARMCNT = TOKEN
      END
   END II

   IF (PARMCNT // 2) <> 0 THEN DO
      MESG = "THERE ARE AN ODD NUMBER OF COLUMNS ("PARMCNT")"
      SIGNAL ERROR
   END

   IF LBL1 <> ""  &  LBL2 = ""  THEN LBL2 = LBL1
   IF LBL1 <> "" THEN DO
      "ISREDIT L &LBL1"
      IF RC <> 0 THEN DO
         MESG = "LABEL" LBL1 "NOT FOUND"
         SIGNAL ERROR
      END
      "ISREDIT (START) = LINENUM &LBL1"
      "ISREDIT L &LBL2"
      IF RC <> 0 THEN DO
         MESG = "LABEL" LBL2 "NOT FOUND"
         SIGNAL ERROR
      END
      "ISREDIT (END) = LINENUM &LBL2"
   END
   ELSE DO
      "ISREDIT PROCESS RANGE C"
      IF RC > 0 THEN DO
         START  = 1
         "ISREDIT (END) = LINENUM .ZLAST"
      END
      ELSE DO
         "ISREDIT (START) = LINENUM .ZFRANGE"
         "ISREDIT (END)   = LINENUM .ZLRANGE"
      END
   END

   IF START > END THEN DO
      FLIP  = START
      START = END
      END   = FLIP
   END

   KEEPON = "YES"
   IF PARMCNT > 2 THEN DO II = 1 TO PARMCNT-3 BY 2,
         WHILE (KEEPON = "YES")
      KEEPON = "NO"
      DO JJ = II+2 TO PARMCNT-1 BY 2
         IF COL.II > COL.JJ THEN DO
            TEMP1  = COL.II
            XX     = II + 1
            TEMP2  = COL.XX
            COL.II = COL.JJ
            YY     = JJ + 1
            COL.XX = COL.YY
            COL.JJ = TEMP1
            COL.YY = TEMP2
            KEEPON = "YES"
         END
      END JJ
   END II

   DO II = 1 TO PARMCNT-1 BY 2
      XX = II + 1
      IF COL.XX < COL.II THEN DO
         MESG = "COLUMNS" COL.II "AND" COL.XX "NOT IN ORDER"
         SIGNAL ERROR
      END
   END II

   DO PNTR =  START  TO  END  BY 1
      "ISREDIT (RECORD) = LINE &PNTR"
      REC  = ""
      GOOD = LRECL
      DO II = PARMCNT-1 TO 1 BY -2
         XX   = II + 1
         REC  = SUBSTR(RECORD,COL.XX+1,GOOD-COL.XX) || REC
         GOOD = COL.II - 1
      END II
      REC  = SUBSTR(RECORD,1,GOOD) || REC
      "ISREDIT LINE &PNTR = &STR(REC)"
   END

   "ISREDIT LOCATE" START
   "ISREDIT AUTONUM = "ANUM
    SIGNAL EOJ

DSLIST:
   ERRORMSG = ""
   MESG     = ""
   COL.     = ""
   PARMCNT  = 0
   LBL1     = ""
   LBL2     = ""
   DO II = LENGTH(PARMS)-1 TO 1 BY -1 WHILE(SUBSTR(PARMS,II,1) <> "'")
   END II
   ZINPDSN = SUBSTR(PARMS,II)
   PARMS   = SUBSTR(PARMS,1,II-1)
   LDSI    = LISTDSI(ZINPDSN)
   LRECL   = SYSLRECL
   DO II = 1 TO 22;
      TOKEN = WORD(PARMS,II)
      IF TOKEN = "" THEN LEAVE
      IF  ¬DATATYPE(TOKEN,'W') | TOKEN = 0 THEN DO
         ERRORMSG = "'"TOKEN"' COLUMN VALUE IS INVALID!"
         SIGNAL DISPDOC
      END
      IF TOKENT > LRECL THEN DO
         ERRORMSG = "COLUMN" TOKEN "IS BIGGER THAN RECORD SIZE ("LRECL")"
         SIGNAL DISPDOC
      END
      PARMCNT     = PARMCNT + 1
      COL.PARMCNT = TOKEN
   END II

   IF (PARMCNT // 2) <> 0 THEN DO
      ERRORMSG = "THERE ARE AN ODD NUMBER OF COLUMNS ("PARMCNT")"
      SIGNAL DISPDOC
   END

   KEEPON = "YES"
   IF PARMCNT > 2 THEN DO II = 1 TO PARMCNT-3 BY 2,
         WHILE (KEEPON = "YES")
      KEEPON = "NO"
      DO JJ = II+2 TO PARMCNT-1 BY 2
         IF COL.II > COL.JJ THEN DO
            TEMP1  = COL.II
            XX     = II + 1
            TEMP2  = COL.XX
            COL.II = COL.JJ
            YY     = JJ + 1
            COL.XX = COL.YY
            COL.JJ = TEMP1
            COL.YY = TEMP2
            KEEPON = "YES"
         END
      END JJ
   END II

   DO II = 1 TO PARMCNT-1 BY 2
      XX = II + 1
      IF COL.XX < COL.II THEN DO
         ERRORMSG = "COLUMNS" COL.II "AND" COL.XX "NOT IN ORDER"
         SIGNAL DISPDOC
      END
   END II

   ADDRESS TSO
   "FREE DD(DDXX)"
   "ALLOC DSN("ZINPDSN") DD(DDXX) SHR"
   "EXECIO 0 DISKRU" DDXX "(OPEN"
   "EXECIO 1 DISKRU" DDXX
   RET_CD = RC
   DO WHILE ( RET_CD = 0 )
      PARSE PULL RECORD
      REC  = ""
      GOOD = LRECL
      DO II = PARMCNT-1 TO 1 BY -2
         XX   = II + 1
         REC  = SUBSTR(RECORD,COL.XX+1,GOOD-COL.XX) || REC
         GOOD = COL.II - 1
      END II
      REC  = SUBSTR(RECORD,1,GOOD) || REC
      QUEUE REC
      "EXECIO 1 DISKW" DDXX
      "EXECIO 1 DISKRU" DDXX
      RET_CD = RC
   END
   "EXECIO 0 DISKW" DDXX "(FINIS"
   "FREE DD(DDXX)"
    SIGNAL EOJ

ERROR:
   IF MESG <> '' THEN DO
      RTN = 20
      ERRORMSG = '===>' MESG
   END
   SIGNAL DISPDOC

EOJ:
   X = MSG(SAVEMSG)
   RETURN RTN

DISPDOC:
   ADDRESS TSO "CLEAR"
   SAY "DELCOLS - DELETE SPECIFIC COLUMNS, RETAINING ALL OTHERS "
   SAY
   SAY ERRORMSG
   SAY
   SAY " FORMAT "
   SAY "    DELCOLS   COL-1 COL-2 (...)  ( .A .B  )   "
   SAY
   SAY "       AT LEAST 1 COLUMN SET REQUIRED.  LABEL "
   SAY "       RANGE OR C/CC/C# RANGE OPTIONAL.       "
   SAY
   SAY " EXAMPLES "
   SAY "    DELCOLS   5 15   1 2   73 80              "
   SAY "       WILL DELETE COLUMNS 1 THROUGH 2,       "
   SAY "       5 THROUGH 15, AND 73 THROUGH 80,       "
   SAY "       SHIFTING REMAINING COLUMNS TO THE LEFT."
   SAY
   EXIT(1)
