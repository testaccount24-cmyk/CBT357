/* REXX */
NN    = 50000
A.0   = NN
XX    = RANDOM(1,99999,13579)
DO II = 1 TO NN
   A.II = RIGHT(RANDOM(1,99999),5,'0') || COPIES(" ",35)
END II

   START_CPU = TIME('R')
   START_CPU = SYSVAR(SYSCPU)

CALL QUICKSRT

   ENDING_CPU = SYSVAR(SYSCPU) - START_CPU
   SAY '** ELAPSED TIME IS' TIME('E') 'AND CPU TIME IS' ENDING_CPU

   DO II = 1 TO 10
      SAY A.II
   END II
   DO II = 24996 TO 25005
      SAY A.II
   END II
   DO II = 49991 TO 50000
      SAY A.II
   END II

EXIT(0)

QUICKSRT:
   N = NN
   S = 1; STACKL.1 = 1; STACKR.1 = N
   DO UNTIL S = 0
      L = STACKL.S; R = STACKR.S; S = S - 1
      DO UNTIL L >= R
         I = L; J = R; P = (L + R) % 2
         IF A.L > A.P THEN DO; W = A.L; A.L = A.P; A.P = W; END
         IF A.L > A.R THEN DO; W = A.L; A.L = A.R; A.R = W; END
         IF A.P > A.R THEN DO; W = A.P; A.P = A.R; A.R = W; END
         X = A.P
         DO UNTIL I > J
            DO I = I WHILE A.I < X; END
            DO J = J BY -1 WHILE X < A.J; END
            IF I <= J THEN DO
               W = A.I; A.I = A.J; A.J = W
               I = I + 1; J = J - 1
            END
         END
         IF J - L < R - I THEN DO
            IF I < R THEN DO
               S = S + 1; STACKL.S = I; STACKR.S = R
            END
            R = J
         END
         ELSE DO
            IF L < J THEN DO
               S = S + 1; STACKL.S = L; STACKR.S = J
            END
            L = I
         END
      END  /* UNTIL L >= R */
   END     /* UNTIL S = 0  */
   RETURN
