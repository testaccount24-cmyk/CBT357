/**  REXX -- SUMS SPECIFIED COLUMNS  **/
   Numeric Digits 31
   Address "ISREDIT";
   "MACRO (PRM1 PRM2 PRM3 PRM4 PRM5 PRM6 PRM7 PRM8 PRM9 PRM10",
          "PRM11 PRM12 PRM13 PRM14 PRM15 PRM16 PRM17 PRM18 PRM19",
          "PRM20) NOPROCESS"
   If PRM1 = '' | PRM1 = '?' then signal DISPDOC

   Labels = 0
   Pairs  = 0
   tok.   = ""
   Do I = 1 to 20
      x = value("PRM"I)
      If x = "" then I = 20
      Else do
         If substr(x,1,1) = '.' then do
            If Labels = 0 then LabFrom = x
            Else LabTo = x
            Labels = Labels + 1
         End
         Else do
            Pairs = Pairs + 1
            tok.i = value("PRM"I)
            If  Â¬DATATYPE(tok.i,"N")  then do
               ZEDSMSG = 'Bad Column'
               ZEDLMSG = "Columns must be numeric," tok.i "is not"
               Address "ISPEXEC" "SETMSG MSG(ISRZ000)"
               Exit(4)
            End
         End
      End
   End  /* Do I = 1 to 20 */

   If Labels > 0 & Labels <> 2 then do
      ZEDSMSG = "Too many lbls"
      ZEDLMSG = Labels "is too many labels"
      Address "ISPEXEC" "SETMSG MSG(ISRZ000)"
      Exit(4)
   End
   If Labels = 2 then do
      "(LineBgn) = LINENUM " LabFrom
      "(LineEnd) = LINENUM " LabTo
   End
   Else do
      "PROCESS RANGE C"
      rch = RC
      If rch = 0 then do
         "(ZFRANGE) = LINENUM .ZFRANGE"
         "(ZLRANGE) = LINENUM .ZLRANGE"
         Labels = 2
      End
      Else do
         If rch =  4  then do
            "(ZFRANGE) = LINENUM .ZFIRST"
            "(ZLRANGE) = LINENUM .ZLAST"
            Labels = 2
         End
         Else do
            "LINE_BEFORE .ZFIRST = NOTELINE ",
             "'ISREDIT PROCESS C or RANGE CC return code is" rch"'"
             Exit(4)
         End
      End
      LineBgn = ZFRANGE
      LineEnd = ZLRANGE
   End

   If LineEnd < LineBgn then do
      x = LineBgn
      LineBgn = LineEnd
      LineEnd = x
   End
   IF LineBgn = 0 THEN LineBgn = 1
   sum. = 0

   Do I = LineBgn to LineEnd by 1
      "(XLINE)   = LINE" I
      "(XSTATUS) = XSTATUS" I
      If xstatus = "NX" then do
         Rowtot = 0
         Do J = 1 to 17 by 2
            If tok.J = "" then leave
            jp1 = J + 1
            bb = tok.jp1 - tok.J + 1
            addend = substr(XLINE,tok.J,bb)
            ii = index(addend,',')
            Do while ii <> 0
               addend = substr(addend,1,ii-1),
                  || substr(addend,ii+1)
               ii = index(addend,',')
            End
            If addend <> ' ' then do
               If index(addend,'+') = 0 & index(addend,'-') = 0 then do
                  Do ii = length(addend) to 1 by -1,
                     while ( substr(addend,ii,1) = ' ' )
                  End
                  kk = substr(addend,ii,1)
                  If kk < '0' | kk > '9' then do
                     kk = translate(kk)
                     If verify(kk,'}JKLMNOPQR') = 0
                        then addend = '-' || substr(addend,1,ii-1),
                           || translate(kk,'0123456789','}JKLMNOPQR')
                     Else if verify(kk,'{ABCDEFGHI') = 0
                        then addend = '+' || substr(addend,1,ii-1),
                           || translate(kk,'0123456789','{ABCDEFGHI')
                  End
               End
               Else do
                  If index(addend,'+') <> 0 then do
                     ii = index(addend,'+')
                     addend = '+' || substr(addend,1,ii-1),
                        || substr(addend,ii+1)
                  End
                  Else do
                     ii = index(addend,'-')
                     addend = '-' || substr(addend,1,ii-1),
                        || substr(addend,ii+1)
                  End
               End
            End
            If  DATATYPE(addend,"N")  then do
               sum.J  = sum.J  + addend
               Rowtot = Rowtot + addend
            End
         End  /* Do J = 1 to 19 by 2 */
      End
   End  /* Do I = LineBgn to LineEnd by 1 */

   sumtot = 0;
   "(LASTLN) = LINENUM .zlast"
   If lastln \= LineEnd then LineEnd = LineEnd + 1
   Tallies = 1
   Do J=1 to 17 by  2
      jp1 = J + 1
      If tok.J <> "" then do
         Tallies = Tallies + 1
         sumtot = sumtot + sum.J
         "LINE_BEFORE" LineBgn "= NOTELINE """||TIME('N') ,
         "SUM of COLS " tok.J||"-"||tok.jp1||", total is" sum.J""""
      End
   End
   "LINE_BEFORE" LineBgn "= NOTELINE '"||TIME('N'),
          "--------------- Total of SUMS is " sumtot "'"
   "Loc " LineBgn
   "Up " Tallies
   Exit(0)

DISPDOC:
   ADDRESS TSO "CLEAR"
   SAY "SUMCOLS - Add columns of numbers under Edit/View "
   SAY
   SAY " Format "
   SAY "    SUMCOLS  1st-col 2nd-col  ( ... )  ( .A .B )        "
   SAY "       At least one set of columns is mandatory. Up to  "
   SAY "       10 sets may be supplied.  Either a CC/CC range   "
   SAY "       may be delimited, labels may be supplied, or the "
   SAY "       whole file will be processed.  The data may be   "
   SAY "       staggered, have decimal places, and/or be signed."
   SAY
   SAY " Example "
   SAY "            1---5---10----5---20---                 "
   SAY "              1        -1.1                         "
   SAY "              3            1.1                      "
   SAY "              5          2.3                        "
   SAY "    Given the above data, SUMCOLS  1 5  11 20       "
   SAY "    will produce                                    "
   SAY "       SUM of NX COLS  1-5, total is 9              "
   SAY "       SUM of NX COLS  11-20, total is 2.3          "
   SAY "       --------------- Total of SUMS is  11.3       "
   SAY
   Exit(1)

