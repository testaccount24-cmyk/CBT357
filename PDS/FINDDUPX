/**  REXX -- SHOW ALL RECORDS THAT ARE CONSECUTIVE DUPS  **/

   SUBCOM ISREDIT
   IF  RC = 0  THEN DO
      ADDRESS ISPEXEC "CONTROL ERRORS RETURN"
      ADDRESS ISREDIT "ISREDIT MACRO (PARMS)"
      IF  RC = 0  THEN DO
         ADDRESS ISREDIT "ISREDIT ("DSN") = DATASET"
      END
   END
   IF  DSN = 'DSN'  THEN DO
      SAY 'FINDDUPX MACRO CAN ONLY BE RUN UNDER ISPF EDIT!'
      SIGNAL EOJ
   END

   PARMS   = TRANSLATE(PARMS)
   PARMCNT = 0
   COL.    = ""
   LBL1 = ""
   LBL2 = ""
   DO II = 1 TO 22;
      TOKEN = WORD(PARMS,II)
      IF TOKEN = "" THEN LEAVE
      IF SUBSTR(TOKEN,1,1) = "." THEN DO
         IF LBL1 = "" THEN LBL1 = TOKEN
         ELSE IF LBL2 = "" THEN LBL2 = TOKEN
            ELSE DO
               ZEDSMSG = ".LABEL RC=8"
               ZEDLMSG = "TOO MANY LABELS --" LBL1 LBL2 TOKEN
               ADDRESS "ISPEXEC" "SETMSG MSG(ISRZ000)"
               EXIT 8
            END
      END
      ELSE DO
         PARMCNT = PARMCNT + 1
         COL.PARMCNT = TOKEN
      END
   END II
   IF LBL1 <> ""  &  LBL2 = ""  THEN LBL2 = LBL1
   IF (PARMCNT // 2) <> 0 THEN DO
      SAVER       = COL.PARMCNT
      PARMCNT     = PARMCNT + 1
      COL.PARMCNT = SAVER
   END

   ERRORMSG = ''
   MESG = ''
   IF  PARMCNT = 0 THEN DO
      MESG = 'PARAMETERS ARE MISSING!'
      SIGNAL ERROR
   END
   "ISREDIT ("LRECL") = LRECL "
   DO II = 1 TO PARMCNT
      IF  Â¬DATATYPE(COL.II,'W') | COL.II = 0 THEN DO
         MESG = "'"COL.II"' COLUMN VALUE IS INVALID!"
         SIGNAL ERROR
      END
      IF  COL.II > LRECL  THEN DO
         MESG = "'"COL.II"' IS GREATER THAN RECORD SIZE("LRECL")"
         SIGNAL ERROR
      END
   END II
   DO II = 1 TO PARMCNT BY 2
      JJ = II + 1
      IF  COL.II > COL.JJ THEN DO
         MESG = "LEFT-COL "COL.II" IS GREATER THAN RIGHT-COL "COL.JJ
         SIGNAL ERROR
      END
   END II

   IF  LBL1 <> ''  THEN DO
      "ISREDIT L &LBL1"
       IF  RC <>  0 THEN DO
          MESG = "LABEL" LBL1 "NOT FOUND"
          SIGNAL ERROR
       END
   END

   IF  LBL2 <> ''  THEN DO
      "ISREDIT L &LBL2"
       IF  RC <>  0 THEN DO
          MESG = "LABEL" LBL2 "NOT FOUND"
          SIGNAL ERROR
       END
   END

   IF  LBL1 <> ''  THEN  "ISREDIT (START) = LINENUM &LBL1"
                   ELSE  START = 1
   IF  LBL2 <> ''  THEN  "ISREDIT (END) = LINENUM &LBL2"
                   ELSE  "ISREDIT (END) = LINENUM .ZLAST"

   "ISREDIT ("ANUM") = AUTONUM"
   "ISREDIT NUMBER OFF "

   "ISREDIT (RECORD)  = LINE " START
   PREVKEY = SUBSTR(RECORD,COL.1,COL.2-COL.1+1)
   DO II = 3 TO PARMCNT BY 2
      JJ = II + 1
      PREVKEY = PREVKEY || SUBSTR(RECORD,COL.II,COL.JJ-COL.II+1)
   END II
   "ISREDIT RESET"
   "ISREDIT LABEL "START" = .TMP"
   LASTEQ = "NO"
   SET    = 0

   DO  PNTR  =  (START+1) TO END  BY 1
      "ISREDIT (RECORD) = LINE" PNTR
      NEXTKEY = SUBSTR(RECORD,COL.1,COL.2-COL.1+1)
      DO II = 3 TO PARMCNT BY 2
         JJ = II + 1
         NEXTKEY = NEXTKEY || SUBSTR(RECORD,COL.II,COL.JJ-COL.II+1)
      END II
      IF PREVKEY == NEXTKEY THEN DO
         IF LASTEQ = "NO" THEN DO
            SET = SET + 1
            LASTEQ = "YES"
         END
      END
      ELSE DO
         IF LASTEQ = "NO" THEN "ISREDIT X ALL .TMP .TMP"
         ELSE LASTEQ = "NO"
         "ISREDIT LABEL "PNTR" = .TMP"
         IF  PNTR = END  THEN "ISREDIT X ALL .TMP .TMP"
         PREVKEY = NEXTKEY
      END
   END PNTR

   CALL SETMSG '* NO ' SET 'DUP KEY SETS $SETS OF DUPLICATE KEYS FOUND'
   IF START = 1 THEN "ISREDIT LOCATE" 0
                ELSE DO
                   START = START - 1
                   "ISREDIT LOCATE" START
                END
   "ISREDIT AUTONUM = "ANUM
    SIGNAL EOJ

ERROR:
   IF MESG <> '' THEN DO
      ERRORMSG = '===>' MESG
   END
   SIGNAL DISPDOC

SETMSG:
   PARSE ARG ZERRHM ZERRALRM ZERRSM'$'ZERRLM
   ADDRESS ISPEXEC 'SETMSG MSG(ISRZ002) COND'
   RETURN

EOJ:
   RETURN

DISPDOC:
   ADDRESS TSO "CLEAR"
   SAY "FINDDUPX - SHOW DUPLICATE RECORDS WITHOUT SORTING    "
   SAY
   SAY ERRORMSG
   SAY
   SAY " FORMAT "
   SAY "    FINDDUPX  COL1 COL2  ...  (.A .B) "
   SAY
   SAY "    ONE PAIR OF COLUMNS IS MANDATORY. UP TO 10 PAIRS "
   SAY "    MAY BE SPECIFIED. LABEL RANGE IS OPTIONAL.       "
   SAY
   SAY " EXAMPLE "
   SAY "    FINDDUPX  11 17  4 11  .K .L "
   SAY
   SAY "       WILL SCAN FILE BY COLUMNS 17 THRU 19 AND 4 "
   SAY "       THRU 11 SHOWING (UNEXCLUDING) ONLY THOSE   "
   SAY "       RECORDS WITH DUPLICATE KEYS IN LABEL RANGE "
   SAY "       .K THROUGH .L.                             "
   SAY
   RETURN
