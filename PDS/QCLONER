/**  REXX -- CREATE BY JOB ANOTHER VERSION OF A D/S UNDER ISPF 3.4  **/

   PARSE ARG PARMS
   MSG = MSG(OFF)
   PARMS = TRANSLATE(PARMS)

   ZINPDSN = ""
   ZNEWDSN = ""
   OPTION  = ""
   NUMOPT  = ""
   NUMCHG  = ""
   RELOPT  = ""
   Q       = 0

   IF WORD(PARMS,2) = "" | WORD(PARMS,1) = "?"
      THEN SIGNAL DISPDOC

   DO II = 1 TO 9
      TOKEN = WORD(PARMS,II)
      IF TOKEN = "" THEN LEAVE
      IF TOKEN = "EMPTY" THEN OPTION = TOKEN
      ELSE IF TOKEN = "RELEASE" THEN RELOPT = "RELEASE"
      ELSE IF SUBSTR(TOKEN,1,1) = "+" | SUBSTR(TOKEN,1,1) = "-"
         THEN DO
            NUMOPT = "CHG"
            NUMCHG = TOKEN
         END
      ELSE IF DATATYPE(TOKEN,'W')
         THEN DO
            NUMOPT = "NEW"
            NUMCHG = TOKEN
         END
      ELSE IF SUBSTR(TOKEN,1,1) = "=",
            | SUBSTR(TOKEN,LENGTH(TOKEN),1) = "="
         THEN ZNEWDSN = TOKEN
      ELSE IF SUBSTR(TOKEN,1,1) = "Q" & DATATYPE(SUBSTR(TOKEN,2),'W')
         THEN Q = SUBSTR(TOKEN,2)
      ELSE DO
         IF ZNEWDSN = "" THEN ZNEWDSN = TOKEN
                         ELSE ZINPDSN = TOKEN
      END
   END II

   IF SUBSTR(ZNEWDSN,1,1) = "=" THEN DO
      IF Q = 0 THEN ZNEWDSN = SUBSTR(ZINPDSN,1,LENGTH(ZINPDSN)-1),
         || SUBSTR(ZNEWDSN,2) || "'"
      ELSE DO
         NN = LENGTH(ZINPDSN) - 1
         DO PP = 1 TO Q
            DO II = NN TO 1 BY -1 WHILE(SUBSTR(ZINPDSN,II,1) <> ".")
            END II
            NN = II - 1
         END PP
         ZNEWDSN = SUBSTR(ZINPDSN,1,NN) || SUBSTR(ZNEWDSN,2) || "'"
      END
   END
   ELSE IF SUBSTR(ZNEWDSN,LENGTH(ZNEWDSN),1) = "=" THEN DO
      IF Q = 0 THEN ZNEWDSN = "'",
         || SUBSTR(ZNEWDSN,1,LENGTH(ZNEWDSN)-1) || SUBSTR(ZINPDSN,2)
      ELSE DO
         NN = 2
         DO PP = 1 TO Q
            DO II = NN TO LENGTH(ZINPDSN)-1,
                  WHILE(SUBSTR(ZINPDSN,II,1) <> ".")
            END II
            NN = II + 1
         END PP
         ZNEWDSN = "'" || SUBSTR(ZNEWDSN,1,LENGTH(ZNEWDSN)-1),
            || SUBSTR(ZINPDSN,NN,LENGTH(ZINPDSN)-NN+1)
      END
   END

   IF SYSDSN(ZNEWDSN) = "OK" THEN ADDRESS TSO DELETE ZNEWDSN
   USER_ID = USERID()
   LDSI = LISTDSI(ZINPDSN DIRECTORY)

   IF OPTION <> "EMPTY" THEN DO
      IF SYSDSORG = PO & SYSADIRBLK <> "NO_LIM" & NUMOPT <> "" THEN DO
         IF NUMOPT = "NEW" THEN DIRCNT = NUMCHG
         ELSE DIRCNT = SYSADIRBLK + NUMCHG
         IF DIRCNT < SYSUDIRBLK THEN DO
               SAY "***> NEW NUMBER OF DIRECTORY BLOCKS ("DIRCNT")",
                  "MAY NOT"
               SAY "***> BE LESS THEN THE NUMBER CURRENTLY IN USE",
                  "("SYSUDIRBLK")"
               EXIT(1)
         END
      END
      ADDRESS TSO
      "FREE DD(SUBXDD)"
      "ALLOC DD(SUBXDD) SYSOUT(A) WRITER(INTRDR)",
         "LRECL(80) BLKSIZE(800) RECFM(F B)"
      QUEUE "//" || USER_ID || "Q    JOB      (ACCT-INFO),'",
         || USER_ID || "',"
      QUEUE "//             CLASS=2,MSGCLASS=X,NOTIFY=",
         || USER_ID
      QUEUE "//***"
      IF SUBSTR(ZNEWDSN,1,1) <> "'"
         THEN ZNEWDSN = USER_ID || "." || ZNEWDSN
         ELSE ZNEWDSN = SUBSTR(ZNEWDSN,2,LENGTH(ZNEWDSN)-2)
      ZINPDSN = SUBSTR(ZINPDSN,2,LENGTH(ZINPDSN)-2)

      IF SYSDSORG = PO THEN DO
         QUEUE "//QCLONER    EXEC     PGM=IEBCOPY,REGION=6M"
         QUEUE "//SYSPRINT     DD       SYSOUT=*"
         QUEUE "//SORTIN       DD       DISP=SHR,"
         QUEUE "//             DSN=" || ZINPDSN
         IF SYSADIRBLK = "NO_LIM" THEN DO
            IF RELOPT = "RELEASE" THEN DO
               IF SUBSTR(SYSUNITS,1,1) = "C" THEN SU = "CYL"
                                             ELSE SU = "TRK"
               QUEUE "//SORTOUT     DD       DSN=" || ZNEWDSN || ","
               QUEUE "//            DISP=(,CATLG),UNIT=SYSDA,"
               QUEUE "//            SPACE=(" || SU || ",(",
                  || SYSALLOC || "," || SYSSECONDS,
                  || "),RLSE),"
               QUEUE "//            LIKE=" || ZINPDSN || ","
               QUEUE "//            DSNTYPE=LIBRARY"
            END
            ELSE DO
               QUEUE "//SORTOUT     DD       DSN=" || ZNEWDSN || ","
               QUEUE "//            DISP=(,CATLG),UNIT=SYSDA,"
               QUEUE "//            LIKE=" || ZINPDSN || ","
               QUEUE "//            DSNTYPE=LIBRARY"
            END
         END
         ELSE DO
            IF NUMOPT = "" THEN DO
               IF RELOPT = "RELEASE" THEN DO
                  IF SUBSTR(SYSUNITS,1,1) = "C" THEN SU = "CYL"
                                                ELSE SU = "TRK"
                  QUEUE "//SORTOUT     DD       DSN=" || ZNEWDSN || ","
                  QUEUE "//            DISP=(,CATLG),UNIT=SYSDA,"
                  QUEUE "//            SPACE=(" || SU || ",(",
                     || SYSALLOC || "," || SYSSECONDS,
                     || "," || SYSADIRBLK,
                     || "),RLSE),"
                  QUEUE "//            LIKE=" || ZINPDSN
               END
               ELSE DO
                  QUEUE "//SORTOUT     DD       DSN=" || ZNEWDSN || ","
                  QUEUE "//            DISP=(,CATLG),UNIT=SYSDA,"
                  QUEUE "//            LIKE=" || ZINPDSN
               END
            END
            ELSE DO
               IF NUMOPT = "NEW" THEN DIRCNT = NUMCHG
               ELSE DIRCNT = SYSADIRBLK + NUMCHG
               IF SUBSTR(SYSUNITS,1,1) = "C" THEN SU = "CYL"
                                             ELSE SU = "TRK"
               IF RELOPT = "RELEASE" THEN SP_CLOSE = "),RLSE),"
                                     ELSE SP_CLOSE = ")),"
               QUEUE "//SORTOUT      DD       DSN=" || ZNEWDSN || ","
               QUEUE "//             DISP=(,CATLG),UNIT=SYSDA,"
               QUEUE "//             SPACE=(" || SU || ",(",
                  || SYSALLOC || "," || SYSSECONDS || ",",
                  || DIRCNT || SP_CLOSE
               QUEUE "//             LIKE=" || ZINPDSN
            END
         END
         QUEUE "  COPY  INDD=SORTIN,OUTDD=SORTOUT"
         QUEUE "//***"
         "EXECIO" QUEUED() "DISKW SUBXDD (FINIS"
         "FREE DD(SUBXDD)"
         CALL SETMSG "* NO JOB SUBMITTED$JOB SUBMITTED SUCCESSFULLY!"
      END
      ELSE IF SYSDSORG = "PS" | SYSDSORG = "PS-E" THEN DO
         QUEUE "//QCLONER    EXEC     PGM=SORT,REGION=64M"
         QUEUE "//SYSPRINT     DD       SYSOUT=*"
         QUEUE "//SORTLIST     DD       SYSOUT=*"
         QUEUE "//SYSOUT       DD       SYSOUT=*"
         QUEUE "//SORTIN       DD       DISP=SHR,"
         QUEUE "//             DSN=" || ZINPDSN
         IF NUMOPT = "" THEN DO
            QUEUE "//SORTOUT      DD       DSN=" || ZNEWDSN || ","
            QUEUE "//             DISP=(,CATLG),UNIT=SYSDA,"
            IF RELOPT = "RELEASE" THEN DO
               IF SUBSTR(SYSUNITS,1,1) = "C" THEN SU = "CYL"
                                             ELSE SU = "TRK"
               QUEUE "//             SPACE=(" || SU || ",(",
                  || SYSALLOC || "," || SYSSECONDS || "),RLSE),"
            END
            QUEUE "//             LIKE=" || ZINPDSN
            QUEUE "  SORT  FIELDS=COPY"
         END
         ELSE DO
            IF NUMOPT = "NEW" THEN NEWLRECL = NUMCHG
            ELSE NEWLRECL = SYSLRECL + NUMCHG
            IF SYSRECFM = "VB"
               THEN NEWBLKSIZE = SYSBLKSIZE
               ELSE NEWBLKSIZE = NEWLRECL * (27998%NEWLRECL)
            QUEUE "//SORTOUT     DD       DSN=" || ZNEWDSN || ","
            QUEUE "//            DISP=(,CATLG),UNIT=SYSDA,"
            IF RELOPT = "RELEASE" THEN DO
               IF SUBSTR(SYSUNITS,1,1) = "C" THEN SU = "CYL"
                                             ELSE SU = "TRK"
               QUEUE "//             SPACE=(" || SU || ",(",
                  || SYSALLOC || "," || SYSSECONDS || "),RLSE),"
            END
            QUEUE "//            LIKE=" || ZINPDSN || ","
            QUEUE "//            LRECL=" || NEWLRECL || ",",
               || "BLKSIZE=" || NEWBLKSIZE
            QUEUE "  SORT    FIELDS=COPY"
            IF NEWLRECL > SYSLRECL & INDEX(SYSRECFM,'F') <> 0 THEN DO
               PAD = NEWLRECL - SYSLRECL
               OUTREC_STR = "  OUTREC  FIELDS=(1," || SYSLRECL,
                  || "," || PAD || "X)"
               QUEUE OUTREC_STR
            END
         END
         QUEUE "//***"
         "EXECIO" QUEUED() "DISKW SUBXDD (FINIS"
         "FREE DD(SUBXDD)"
         CALL SETMSG "* NO JOB SUBMITTED$JOB SUBMITTED SUCCESSFULLY!"
      END
   END
   ELSE DO
      ADDRESS TSO
      IF SYSDSORG = PO THEN DO
         IF SYSADIRBLK = "NO_LIM" THEN DO
            "ALLOC DSN("ZNEWDSN") NEW LIKE("ZINPDSN")" RELOPT,
               "DSNTYPE(LIBRARY) DD(SORTOUT) UNIT(SYSDA)"
            IF RC <> 0 THEN DO
               SAY "***> ALLOCATION FAILED W/ RC =" RC
               SAY "***> UNABLE TO CREATE" ZNEWDSN
               EXIT(1)
            END
         END
         ELSE DO
            IF NUMOPT = "" THEN DO
               "ALLOC DSN("ZNEWDSN") NEW LIKE("ZINPDSN")" RELOPT,
                  "DIR("SYSADIRBLK") UNIT(SYSDA)"
               IF RC <> 0 THEN DO
                  SAY "***> ALLOCATION FAILED W/ RC =" RC
                  SAY "***> UNABLE TO CREATE" ZNEWDSN
                  EXIT(1)
               END
            END
            ELSE DO
               IF NUMOPT = "NEW" THEN DIRCNT = NUMCHG
               ELSE DIRCNT = SYSADIRBLK + NUMCHG
               "ALLOC DSN("ZNEWDSN") NEW LIKE("ZINPDSN")" RELOPT,
                  "DIR("DIRCNT") DD(SORTOUT) UNIT(SYSDA)"
               IF RC <> 0 THEN DO
                  SAY "***> ALLOCATION FAILED W/ RC =" RC
                  SAY "***> UNABLE TO CREATE" ZNEWDSN
                  EXIT(1)
               END
            END
         END
      END
      ELSE IF SYSDSORG = "PS" | SYSDSORG = "PS-E" THEN DO
         "ALLOC DSN("ZNEWDSN") NEW LIKE("ZINPDSN") UNIT(SYSDA)"
         IF RC <> 0 THEN DO
            SAY "***> ALLOCATION FAILED W/ RC =" RC
            SAY "***> UNABLE TO CREATE" ZNEWDSN
            EXIT(1)
         END
      END
   "FREE  DSN("ZNEWDSN")"
   END

   IF OPTION = "EMPTY"
      THEN SAY ZINPDSN "CLONED TO" ZNEWDSN "WITHOUT COPYING DATA"
      ELSE SAY "JOB SUBMITTED TO COPY" ZINPDSN "TO" ZNEWDSN
   EXIT(0)

SETMSG:
   PARSE ARG ZERRHM ZERRALRM ZERRSM'$'ZERRLM
   ADDRESS ISPEXEC 'SETMSG MSG(ISRZ002) COND'
   RETURN

DISPDOC:
   ADDRESS TSO "CLEAR"
   SAY "                                                             "
   SAY " QCLONER        MAKES A COPY OF A DATA SET UNDER ISPF 3.4    "
   SAY "                SIMILAR TO THE ONE POINTED TO EITHER         "
   SAY "                COPYING THE DATA OR NOT. SIMPLY TYPE 'CLONE' "
   SAY "                FOLLOWED BY THE NEW NAME AND, OPTIONALLY,    "
   SAY "                THE KEYWORD 'EMPTY' AND/OR DIRECTORY COUNT   "
   SAY "                AND/OR THE 'RELEASE' KEYWORD. DELETES AN     "
   SAY "                EXISTING COPY IF IT EXISTS.                  "
   SAY "                                                             "
   SAY "  SYNTAX: QCLONER NEW-DATASET-NAME                           "
   SAY "                      <EMPTY>  <#>  <RELEASE>  <Q#>          "
   SAY
   SAY "             NEW-DATASET-NAME   IS THE NAME OF THE DATA SET  "
   SAY "                TO BE CREATED. IT MAY BE QUALIFIED (WITH     "
   SAY "                QUOTES) OR UNQUALIFIED (ASSUMES YOUR USER-   "
   SAY "                ID AT THE FRONT). IT MAY ALSO BE OF THE FORM "
   SAY "                =XXX WHERE XXX IS SUFFIXED TO THE ORIGINAL   "
   SAY "                NAME OR OF THE FORM XXX= WHERE XXX IS        "
   SAY "                PREFIXED TO THE ORIGINAL NAME. THE Q# OPTION "
   SAY "                MAY BE USED TO REMOVE # LEVELS OF QUALIFIERS "
   SAY "                AT THE BACK OR FRONT OF THE ORIGINAL NAME.   "
   SAY
   SAY "            <EMPTY>  IS AN OPTIONAL PARAMETER TO INDICATE    "
   SAY "                NO DATA IS TO BE COPIED FROM THE ORIGINAL    "
   SAY "                FILE.                                        "
   SAY
   SAY "            <#> IS AN OPTIONAL CHANGE TO THE NUMBER OF       "
   SAY "                DIRECTORY BLOCKS IF THE DATA SET IS A PDS.   "
   SAY "                A WHOLE NUMBER IS USED AS IS; PREFIXED BY A +"
   SAY "                IS ADDED; BY A - IS SUBTRACTED. NEVER ALLOWS "
   SAY "                BELOW USED BLOCKS. IF THE DATA SET IS        "
   SAY "                SEQUENTIAL, THE NUMBER BECOMES THE LRECL; A +"
   SAY "                PREFIX ADDS BYTES; A - PREFIX SUBTRACTS.     "
   SAY
   SAY "            <RELEASE> IS AN OPTION THAT WILL RELEASE ANY     "
   SAY "                UNUSED SPACE IN THE RESULTANT FILE           "
   SAY
   SAY "            <Q#> IS AN OPTION TO REMOVE THAT MANY (#) LEVEL  "
   SAY "                QUALIFIERS OF THE ORIGINAL DATA SET EITHER   "
   SAY "                PREFIXING IT WITH THE XXX FROM THE XXX= INPUT"
   SAY "                OR SUFFIXING IT WITH THE XXX FROM THE =XXX.  "
   SAY
   EXIT(1)

