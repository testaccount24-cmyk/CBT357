/**  REXX -- ZERO PAD RANDOM NUMBERS INTO SPECIFIC COLUMNS  **/
   RETURN_CODE = 0
   SAVEMSG = MSG()
   IF  SAVEMSG = 'OFF'  THEN  X = MSG("ON")
   X = ADDRESS()
   SUBCOM ISPEXEC
   IF  RC <> 0  THEN DO
      SAY 'RANCOLS0 MUST BE RUN UNDER ISPF EDIT!'
      SIGNAL EOJ
   END
   SUBCOM ISREDIT
   IF  RC = 0  THEN DO
      UMODE = 'ISREDIT'
      ADDRESS ISPEXEC "CONTROL ERRORS RETURN"
      ADDRESS ISREDIT,
         "ISREDIT MACRO (PARMS)"
      IF  RC = 0  THEN DO
         ADDRESS ISREDIT "ISREDIT ("DSN") = DATASET"
      END
   END
   IF  DSN = 'DSN'  THEN DO
      SAY 'RANCOLS0 EDIT MACRO CAN ONLY BE RUN UNDER ISPF EDIT',
          'WITH NO PENDING EDIT COMMANDS!'
      SIGNAL EOJ
   END

   PARMS    = TRANSLATE(PARMS)
   STARTCOL = ""
   ENDCOL   = ""
   MINNUM   = ""
   MAXNUM   = ""
   LBL1     = ""
   LBL2     = ""
   DO II = 1 TO 6;
      TOKEN = WORD(PARMS,II)
      IF TOKEN = "" THEN LEAVE
      IF SUBSTR(TOKEN,1,1) = "." THEN DO
         IF LBL1 = "" THEN LBL1 = TOKEN
         ELSE IF LBL2 = "" THEN LBL2 = TOKEN
            ELSE DO
               ZEDSMSG = ".LABEL RC=8"
               ZEDLMSG = "TOO MANY LABELS --" LBL1 LBL2 TOKEN
               ADDRESS "ISPEXEC" "SETMSG MSG(ISRZ000)"
               SIGNAL DISPDOC
            END
      END
      ELSE DO
         IF DATATYPE(TOKEN,'W')  THEN DO
            IF STARTCOL = "" THEN STARTCOL = TOKEN
               ELSE IF ENDCOL   = "" THEN ENDCOL   = TOKEN
               ELSE IF MINNUM   = "" THEN MINNUM   = TOKEN
               ELSE IF MAXNUM   = "" THEN MAXNUM   = TOKEN
                  ELSE DO
                     ZEDSMSG = ".LABEL RC=8"
                     ZEDLMSG = "TOO MANY NUMBERS --" TOKEN
                     ADDRESS "ISPEXEC" "SETMSG MSG(ISRZ000)"
                     SIGNAL DISPDOC
                  END
         END
         ELSE DO
            ZEDSMSG = "BAD PARM"
            ZEDLMSG = "UNRECOGNIZED PARM --" TOKEN
            ADDRESS "ISPEXEC" "SETMSG MSG(ISRZ000)"
            SIGNAL DISPDOC
         END
      END
   END II
   IF LBL1 <> ""  &  LBL2 = ""  THEN LBL2 = LBL1

   ERRORMSG = ''
   MESG = ''
   IF  STARTCOL = ''  |  ENDCOL = ''  THEN DO
      MESG = 'REQUIRED PARAMETERS ARE MISSING!'
      SIGNAL ERROR
   END
   IF  ¬DATATYPE(STARTCOL,'W')  |  STARTCOL = 0  THEN DO
      MESG = "'"STARTCOL"' VALUE OF STARTING COL IS INVALID!"
      SIGNAL ERROR
   END
   IF  ¬DATATYPE(ENDCOL,'W') |  ENDCOL = 0  THEN DO
      MESG = "'"ENDCOL"' VALUE OF NUMBER SIZE IS INVALID!"
      SIGNAL ERROR
   END

   IF  MINNUM = ''  THEN  MINNUM = 1
   ELSE DO
      IF  ¬DATATYPE(MINNUM,'W')  THEN DO
         MESG = "'"MINNUM"' VALUE OF MINIMUM NUMBER IS INVALID!"
         SIGNAL ERROR
      END
   END
   IF  MAXNUM = ''  THEN  MAXNUM = COPIES('9',ENDCOL-STARTCOL+1)
   ELSE DO
      IF  ¬DATATYPE(MAXNUM,'W')  THEN DO
         MESG = "'"MAXNUM"' VALUE OF MAXIMUM NUMBER IS INVALID!"
         SIGNAL ERROR
      END
   END
   IF  MINNUM > MAXNUM  THEN DO
      HOLDNUM = MINNUM
      MINNUM  = MAXNUM
      MAXNUM  = HOLDNUM
   END

   LEN = ENDCOL - STARTCOL + 1
   "ISREDIT ("LRECL") = LRECL "
   IF  LEN > LRECL  THEN DO
      MESG="CALCULATED SIZE IS GREATER THAN RECORD SIZE ("LRECL")!"
      SIGNAL ERROR
   END
   IF  ( LEN + STARTCOL - 1 ) > LRECL  THEN DO
      MESG="SIZE WILL OVERFLOW RECORD LENGTH ("LRECL")!"
      SIGNAL ERROR
   END

   IF  LBL1 <> ''  THEN DO
      "ISREDIT L &LBL1"
      IF  RC <> 0  THEN DO
         MESG = "LABEL" LBL1 "NOT FOUND"
         SIGNAL ERROR
      END
   END
   IF  LBL2 <> ''  THEN DO
      "ISREDIT L &LBL2"
       IF  RC <> 0  THEN DO
          MESG = "LABEL" LBL2 "NOT FOUND"
          SIGNAL ERROR
       END
    END
   "ISREDIT ("SAVLINE","SAVCOL") = CURSOR     "
   "ISREDIT ("ANUM") = AUTONUM              "
   "ISREDIT (END) = LINENUM .ZLAST"
   START = 1
   IF  LBL1 <> ''  THEN  "ISREDIT (START) = LINENUM &LBL1"
   IF  LBL2 <> ''  THEN  "ISREDIT (END)   = LINENUM &LBL2"
      ELSE LBL2 = LBL1
   IF  START > END  THEN DO
      WST   = START
      START = END
      END   = WST
   END

   DO PNTR =  START  TO  END
      "ISREDIT (RECORD) = LINE &PNTR"
      IF LEN < 6 THEN DO
         FILLNUM = RANDOM(MINNUM,MAXNUM)
      END
      ELSE DO
         TEMPLEN = LEN
         FILLNUM = ""
         DO WHILE TEMPLEN > 5
            TEMPNUM = RANDOM(0,99999)
            FILLNUM = SUBSTR('',1,5-LENGTH(TEMPNUM),'0'),
               || TEMPNUM || FILLNUM
            TEMPLEN = TEMPLEN - 5
         END
         FILLNUM = RANDOM(0,10**TEMPLEN-1) || FILLNUM
         NUMERIC DIGITS LEN
         IF FILLNUM < MINNUM | FILLNUM > MAXNUM THEN
            FILLNUM = ( FILLNUM // ( MAXNUM - MINNUM ) ) + MINNUM
      END
      RECORD = OVERLAY(SUBSTR('',1,LEN-LENGTH(FILLNUM),'0'),
         || FILLNUM,RECORD,STARTCOL,LEN)
      "ISREDIT LINE &PNTR = &STR(RECORD)"
   END
   "ISREDIT LOCATE" START
   "ISREDIT AUTONUM = "ANUM
    SIGNAL EOJ

ERROR:
   IF MESG<>'' THEN DO
      RETURN_CODE = 20
      ERRORMSG='===>' MESG
   END
   SIGNAL DISPDOC

EOJ:
   X = MSG(SAVEMSG)
   RETURN RETURN_CODE

DISPDOC:
   ADDRESS TSO "CLEAR"
   SAY "RANCOLS0 - PUT ZERO PADDED RANDOM NUMBERS INTO SPECIFIC COLUMNS"
   SAY
   SAY ERRORMSG
   SAY
   SAY " FORMAT "
   SAY "    RANCOLS0  START-COL  END-COL  MIN-NUM  MAX-NUM  .A .B "
   SAY
   SAY "    STARTING AND ENDING COLUMNS ARE MANDATORY AND MUST    "
   SAY "    BE NUMERIC. THE REMAINING PARAMETERS ARE OPTIONAL.    "
   SAY "    MINIMUM AND MAXIMUM MUST ALSO BE NUMERIC IF SUPPLIED, "
   SAY "    DEFAULTING TO 1 AND ALL 9'S RESPECTIVELY IF NOT. THE  "
   SAY "    RANGE MAY BE INTERMIXED.                              "
   SAY
   SAY " EXAMPLES "
   SAY "    RANCOLS0  .AK .AV  11 18  10000001 19999999           "
   SAY "       WILL PUT RANDOM FULL 8 DIGIT NUMBERS IN COLUMNS    "
   SAY "       11 THROUGH 18 OF THE LINE RANGE .AK THROUGH .AV    "
   SAY "       FROM 10000001 THROUGH 19999999.                    "
   SAY
   EXIT(1)
