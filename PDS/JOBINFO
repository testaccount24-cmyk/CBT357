//-YOUR-USERID-J JOB  (-YOUR-ACCT-INFO-),'-YOUR-NAME-',
//             CLASS=2,MSGCLASS=X,NOTIFY=-YOUR-USERID-
//***
//***  COBOL JOB INFORMATION RETRIEVAL
//***
//C          EXEC     PGM=IGYCRCTL,REGION=4M,
//             PARM=('LIB,MAP,NUMPROC(PFD),OFF,OPTIMIZE',
//            'APOST,NOSEQ,TRUNC(OPT),XREF')
//SYSIN        DD       *
       Identification Division.
         Program-ID. JobInfo.
      *----------------------------------------------------------------*
      *                                                                *
      *    This program retrieves specific job-related data from MVS   *
      *    control blocks and moves it to Working-storage.             *
      *                                                                *
      *    The name of the control-block is indicated in pos 1-6 of    *
      *    the Procedure Division lines.                               *
      *    The layout of the MVS control blocks is described in the    *
      *    MVS Data Areas manuals, which can be found on any MVS or    *
      *    OS/390 CD collection or viewed on-line by going to:         *
      *        http://www.s390.ibm.com/bookmgr-cgi/bookmgr.cmd/library *
      *    and searching for:                                          *
      *        MVS DATA AREAS                                          *
      *----------------------------------------------------------------*
       Data Division.
        Working-Storage Section.
         01 Results.
           05 job-name Pic x(8).
           05 proc-step Pic x(8).
           05 step-name Pic x(8).
           05 program-name Pic x(8).
           05 program-name2 Pic x(8).
           05 job-number Pic x(8).
           05 job-class Pic x.
           05 msg-class Pic x.
           05 programmer-name Pic x(20).
           05 user-id Pic x(8).
           05 group-name Pic x(8).
           05 user-name Pic x(20).
           05 batch-or-cics Pic x(5).
              88 Batch Value 'BATCH'.
              88 CICS  Value 'CICS '.
           05 micro-seconds Pic S9(15) COMP-3.
         01 four-bytes.
           05 full-word Pic s9(8) Comp.
           05 ptr4      Redefines full-word Pointer.
        Linkage Section.
         01 cb1.  05 ptr1 Pointer Occurs 256.
         01 cb2.  05 ptr2 Pointer Occurs 256.
       Procedure Division.
 PSA       SET Address of cb1 to NULL
 TCB       SET Address of cb1 to ptr1(136)
           SET ptr4 to ptr1(83)
           COMPUTE micro-seconds = full-word * 1048576
           SET ptr4 to ptr1(84)
           COMPUTE micro-seconds = micro-seconds + (full-word / 1024)
 TIOT      SET Address of cb2 to ptr1(4)
           MOVE cb2(1:8) to job-name
           MOVE cb2(9:8) to proc-step
           MOVE cb2(17:8) to step-name
 JSCB      SET Address of cb2 to ptr1(46)
           MOVE cb2(361:8) to program-name
 SSIB      SET Address of cb2 to ptr2(80)
           MOVE cb2(13:8) to job-number
 PRB       SET Address of cb2 to ptr1(1)
           MOVE cb2(97:8) to program-name2
 JSCB      SET Address of cb2 to ptr1(46)
 JCT       SET Address of cb2 to ptr2(66)
           MOVE cb2(48:1) to job-class
           MOVE cb2(23:1) to msg-class
 ACT       MOVE zero to full-word
           MOVE cb2(57:3) to four-bytes(2:3)
           SET Address of cb2 to ptr4
           MOVE cb2(25:20) to programmer-name
 EXT2      SET Address of cb2 to ptr1(53)
 CAUF      IF cb2(21:4) = low-values THEN
             SET Batch to TRUE
           ELSE
             SET CICS to TRUE
           END-IF
 PSA       SET Address of cb1 to NULL
 ASCB      SET Address of cb1 to ptr1(138)
 ASXB      SET Address of cb2 to ptr1(28)
           MOVE cb2(193:8) to user-id
 ACEE      SET Address of cb2 to ptr2(51)
           MOVE cb2(31:8) to group-name
 UNAM      SET Address of cb1 to ptr2(26)
           MOVE zero to full-word
           MOVE cb1(1:1) to four-bytes(4:1)
           MOVE cb1(2:full-word) to user-name
           DISPLAY job-name ' '
                   proc-step ' '
                   step-name ' '
                   program-name ' '
                   program-name2 ' '
                   job-number ' '
                   job-class ' '
                   msg-class ' '
                   micro-seconds ' '
           DISPLAY quote programmer-name  quote ' '
                   batch-or-cics ' '
                   user-id ' '
                   group-name  ' '
                   quote user-name  quote ' '
           GOBACK.
//SYSPRINT     DD       SYSOUT=*
//SYSLIB       DD       DISP=SHR,DSN=-YOUR-SYSLIB-
//SYSLIN       DD       DSN=&&LOADSET,DISP=(MOD,PASS),
//             UNIT=SYSDA,SPACE=(TRK,(3,3)),
//             DCB=(BLKSIZE=80,LRECL=80,RECFM=FB)
//SYSUT1       DD       UNIT=SYSDA,SPACE=(CYL,(1,1))
//SYSUT2       DD       UNIT=SYSDA,SPACE=(CYL,(1,1))
//SYSUT3       DD       UNIT=SYSDA,SPACE=(CYL,(1,1))
//SYSUT4       DD       UNIT=SYSDA,SPACE=(CYL,(1,1))
//SYSUT5       DD       UNIT=SYSDA,SPACE=(CYL,(1,1))
//SYSUT6       DD       UNIT=SYSDA,SPACE=(CYL,(1,1))
//SYSUT7       DD       UNIT=SYSDA,SPACE=(CYL,(1,1))
//***
//GO         EXEC     PGM=LOADER,PARM='MAP,PRINT',
//             REGION=4M,COND=(5,LT,C)
//SYSLIB       DD       DISP=SHR,DSN=-YOUR-SCEELLED-
//SYSLIN       DD       DSN=&&LOADSET,DISP=(OLD,DELETE,DELETE)
//SYSLOUT      DD       SYSOUT=*
//SYSPRINT     DD       SYSOUT=*
//SYSABOUT     DD       SYSOUT=*
//SYSUDUMP     DD       SYSOUT=*
//SYSOUT       DD       SYSOUT=*
//***
