//-YOUR-USERID-C JOB  (-YOUR-ACCT-INFO-),'-YOUR-NAME-',
//             CLASS=2,MSGCLASS=X,NOTIFY=-YOUR-USERID-
//***
//*** COBOL SUB-PROGRAM TO TRANSLATE CHARACTERS INTO HEX
//***   I.E. 'ABC123' INTO 'C1C2C3F1F2F3'
//***   FOR INPUT UP TO 4,999 BYTES IN LENGTH
//***
//C          EXEC     PGM=IGYCRCTL,REGION=4M,
//             PARM=('LIB,MAP,NUMPROC(PFD),OFF,OPTIMIZE',
//            'APOST,NOSEQ,TRUNC(OPT),XREF')
//SYSIN        DD       *

       IDENTIFICATION DIVISION.
       PROGRAM-ID.  TESTER.

       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT I
               ASSIGN TO I.

       DATA DIVISION.
       FILE SECTION.
       FD  I
           RECORDING MODE IS F
           BLOCK CONTAINS 0 RECORDS.
       01  INPUT-REC    PIC X(00080).
       WORKING-STORAGE SECTION.
       01  WS-INPUT-REC.
           05  WS-LENGTH              PIC 9(02).
           05                         PIC X(02).
           05  WS-INPUT               PIC X(22).
           05                         PIC X(02).
           05  WS-EXPECTED            PIC X(44).
           05                         PIC X(08).
       01  WORK-AREAS.
          05  WS-RC                   PIC  99       VALUE 00.
          05  WS-LEN                  PIC  9999     COMP.
          05  WS-OUTPUT               PIC  X(44)    VALUE SPACES.
          05  END-OF-FILE-STATUS      PIC  X        VALUE 'N'.
              88  AT-END-OF-FILE                    VALUE 'Y'.

       PROCEDURE DIVISION.

       0000-MAIN.
           DISPLAY '***  TOP OF TEST PROGRAM  ***'
           OPEN  INPUT  I
           READ  I INTO WS-INPUT-REC
               AT END SET AT-END-OF-FILE TO TRUE
               END-READ
           PERFORM 0500-READ-WRITE-LOOP
               UNTIL AT-END-OF-FILE
           IF WS-RC NOT = 0
               MOVE WS-RC TO RETURN-CODE
           END-IF
           CLOSE I
           DISPLAY '***  END OF TEST PROGRAM  ***'
           GOBACK
           .

       0500-READ-WRITE-LOOP.
           MOVE SPACES TO WS-OUTPUT
           MOVE WS-LENGTH TO WS-LEN
           CALL 'COBHEXR' USING WS-INPUT WS-LEN WS-OUTPUT WS-RC
           IF WS-OUTPUT NOT = WS-EXPECTED
               DISPLAY '* PROBLEM - INPUT  = ' WS-INPUT
               DISPLAY '          - OUTPUT = ' WS-OUTPUT
               DISPLAY '          - EXPECT = ' WS-EXPECTED
           END-IF
           READ  I INTO WS-INPUT-REC
               AT END SET AT-END-OF-FILE TO TRUE
           END-READ
           .

       IDENTIFICATION DIVISION.
       PROGRAM-ID.  COBHEXR COMMON.

       DATA DIVISION.

       WORKING-STORAGE SECTION.
       01  WORK-FIELDS.
           05  TO-PTR           PIC     9999   COMP.
           05  FROM-PTR         PIC     9999   COMP.
           05  WS-LEN           PIC     9999   COMP.
           05  WS-PACKEDC       PIC     X(9).
           05                   REDEFINES  WS-PACKEDC.
               10  WS-PACKED    PIC     9(17)   COMP-3.
           05  WS-UNPACKED      PIC     9(17).
           05                   REDEFINES  WS-UNPACKED.
               10  WS-UNPACKEDC PIC     X(17).

       LINKAGE SECTION.
       01  LS-INPUT            PIC  X(4999).
       01  LS-LEN              PIC  9999 COMP.
       01  LS-OUTPUT           PIC  X(9999).
       01  LS-RC               PIC  99.

       PROCEDURE DIVISION   USING  LS-INPUT LS-LEN LS-OUTPUT LS-RC.

           IF LS-LEN <= 0 OR LS-LEN > 4999
               MOVE 1      TO LS-RC
           ELSE
               MOVE LS-LEN TO WS-LEN
               MOVE 1      TO TO-PTR
               MOVE 1      TO FROM-PTR
               PERFORM UNTIL WS-LEN <= 8
                   MOVE LS-INPUT(FROM-PTR:8)  TO WS-PACKEDC
                   MOVE WS-PACKED             TO WS-UNPACKED
                   INSPECT WS-UNPACKEDC
                       CONVERTING X'FAFBFCFDFEFF' TO 'ABCDEF'
                   MOVE WS-UNPACKEDC(1:16)    TO LS-OUTPUT(TO-PTR:16)
                   ADD 8  TO FROM-PTR
                   ADD 16 TO TO-PTR
                   SUBTRACT 8 FROM WS-LEN
               END-PERFORM
               IF WS-LEN > 0
                   MOVE LS-INPUT(FROM-PTR:WS-LEN) TO WS-PACKEDC
                   MOVE WS-PACKED                 TO WS-UNPACKED
                   INSPECT WS-UNPACKEDC
                       CONVERTING X'FAFBFCFDFEFF' TO 'ABCDEF'
                   MOVE WS-UNPACKEDC(1:2 * WS-LEN)
                                   TO LS-OUTPUT(TO-PTR:2 * WS-LEN)
               END-IF
               MOVE 0 TO LS-RC
           END-IF
           EXIT PROGRAM.
       END PROGRAM COBHEXR.

       END PROGRAM TESTER.

//SYSPRINT     DD       SYSOUT=*
//SYSLIN       DD       DSN=&&LOADSET,DISP=(MOD,PASS),
//             UNIT=SYSDA,SPACE=(CYL,(3,3)),
//             DCB=(BLKSIZE=0,LRECL=80,RECFM=FB)
//SYSUT1       DD       UNIT=SYSDA,SPACE=(CYL,(05,02))
//SYSUT2       DD       UNIT=SYSDA,SPACE=(CYL,(05,02))
//SYSUT3       DD       UNIT=SYSDA,SPACE=(CYL,(05,02))
//SYSUT4       DD       UNIT=SYSDA,SPACE=(CYL,(05,02))
//SYSUT5       DD       UNIT=SYSDA,SPACE=(CYL,(05,02))
//SYSUT6       DD       UNIT=SYSDA,SPACE=(CYL,(05,02))
//SYSUT7       DD       UNIT=SYSDA,SPACE=(CYL,(05,02))
//***
//GO         EXEC     PGM=LOADER,PARM='MAP,PRINT,AMODE(31),RMODE(ANY)',
//             REGION=4M,COND=(5,LT)
//SYSLIB       DD       DISP=SHR,DSN=-YOUR-SCEELLED-
//SYSLIN       DD       DSN=&&LOADSET,DISP=(OLD,DELETE,DELETE)
//SYSLOUT      DD       SYSOUT=*
//SYSPRINT     DD       SYSOUT=*
//I            DD       *
12  ABCDEFGHIJKL            C1C2C3C4C5C6C7C8C9D1D2D3
01  .                       4B
12  LKJIHGFEDCBA            D3D2D1C9C8C7C6C5C4C3C2C1
22  1234567890123456789012  F1F2F3F4F5F6F7F8F9F0F1F2F3F4F5F6F7F8F9F0F1F2
04  ~!@#                    A15A7C7B
10                          40404040404040404040
//SYSOUT       DD       SYSOUT=*
//***
